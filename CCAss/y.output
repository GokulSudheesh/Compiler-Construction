Terminals unused in grammar

    TAB


State 13 conflicts: 1 shift/reduce
State 27 conflicts: 7 shift/reduce
State 95 conflicts: 2 shift/reduce
State 110 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 BODY: DECLARATION_STATEMENTS BODY2

    3 BODY2: %empty
    4      | DECLARATION_STATEMENTS BODY2
    5      | PROGRAM_STATEMENTS BODY2

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
    7                       | DECLARATION_STATEMENT

    8 DECLARATION_STATEMENT: VAR_LIST COLON COLON DATA_TYPE

    9 VAR_LIST: VAR COMA VAR_LIST
   10         | VAR

   11 MAIN_TYPE: INT

   12 DATA_TYPE: INT
   13          | CHAR
   14          | FLOAT
   15          | DOUBLE

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
   17                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   18                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   19                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   20                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   21                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   22                   | FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB
   23                   | PROGRAM_STATEMENT

   24 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   25             | LOGICAL_EXPN1

   26 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   27              | LOGICAL_EXPN2
   28              | NOT LB LOGICAL_EXPN1 RB
   29              | LB LOGICAL_EXPN1 RB

   30 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   31 COMP_OPERATOR: ET
   32              | GT
   33              | LT
   34              | GTE
   35              | LTE
   36              | NE

   37 LOGICAL_OPERATOR: AND
   38                 | OR

   39 PROGRAM_STATEMENT: VAR EQ A_EXPN SC
   40                  | SC
   41                  | VAR UPLUS SC
   42                  | VAR UMINUS SC

   43 A_EXPN: A_EXPN PLUS A_EXPN
   44       | A_EXPN MINUS A_EXPN
   45       | A_EXPN1

   46 A_EXPN1: A_EXPN1 MUL A_EXPN1
   47        | A_EXPN1 DIV A_EXPN1
   48        | A_EXPN1 MOD A_EXPN1
   49        | A_EXPN2

   50 A_EXPN2: A_EXPN2 EXP A_EXPN2
   51        | A_EXPN3

   52 A_EXPN3: LB A_EXPN RB
   53        | NUMBER
   54        | VAR UPLUS
   55        | VAR UMINUS
   56        | VAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HEADER (258) 1
    MAIN (259) 1
    LB (260) 1 17 18 19 20 21 22 24 28 29 52
    RB (261) 1 17 18 19 20 21 22 24 28 29 52
    LCB (262) 1 17 18 19 20 21 22
    RCB (263) 1 17 18 19 20 21 22
    TAB (264)
    SC (265) 21 22 39 40 41 42
    COLON (266) 8 17
    QMARK (267) 17
    COMA (268) 9
    IF (269) 18 19
    ELSE (270) 19
    FOR (271) 22
    DO (272) 21
    WHILE (273) 20 21
    VAR <var_name> (274) 9 10 22 39 41 42 54 55 56
    NUMBER (275) 53
    ET (276) 31
    EQ (277) 22 39
    GT (278) 32
    LT (279) 33
    GTE (280) 34
    LTE (281) 35
    NE (282) 36
    AND (283) 37
    OR (284) 38
    NOT (285) 24 28
    PLUS (286) 43
    MINUS (287) 44
    MUL (288) 46
    DIV (289) 47
    MOD (290) 48
    EXP (291) 50
    UPLUS (292) 41 54
    UMINUS (293) 42 55
    INT <data_type> (294) 11 12
    CHAR <data_type> (295) 13
    FLOAT <data_type> (296) 14
    DOUBLE <data_type> (297) 15


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    prm (44)
        on left: 1
        on right: 0
    BODY (45)
        on left: 2
        on right: 1
    BODY2 (46)
        on left: 3 4 5
        on right: 2 4 5 17 18 19 20 21 22
    DECLARATION_STATEMENTS (47)
        on left: 6 7
        on right: 2 4 6
    DECLARATION_STATEMENT (48)
        on left: 8
        on right: 6 7
    VAR_LIST (49)
        on left: 9 10
        on right: 8 9
    MAIN_TYPE (50)
        on left: 11
        on right: 1
    DATA_TYPE <data_type> (51)
        on left: 12 13 14 15
        on right: 8
    PROGRAM_STATEMENTS (52)
        on left: 16 17 18 19 20 21 22 23
        on right: 5 16
    LOGICAL_EXPN (53)
        on left: 24 25
        on right: 17 18 19 20 21 22
    LOGICAL_EXPN1 (54)
        on left: 26 27 28 29
        on right: 24 25 26 28 29
    LOGICAL_EXPN2 (55)
        on left: 30
        on right: 27
    COMP_OPERATOR (56)
        on left: 31 32 33 34 35 36
        on right: 30
    LOGICAL_OPERATOR (57)
        on left: 37 38
        on right: 26
    PROGRAM_STATEMENT (58)
        on left: 39 40 41 42
        on right: 16 23
    A_EXPN (59)
        on left: 43 44 45
        on right: 22 30 39 43 44 52
    A_EXPN1 (60)
        on left: 46 47 48 49
        on right: 45 46 47 48
    A_EXPN2 (61)
        on left: 50 51
        on right: 49 50
    A_EXPN3 (62)
        on left: 52 53 54 55 56
        on right: 51


State 0

    0 $accept: . prm $end

    HEADER  shift, and go to state 1

    prm  go to state 2


State 1

    1 prm: HEADER . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 3

    MAIN_TYPE  go to state 4


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 5


State 3

   11 MAIN_TYPE: INT .

    $default  reduce using rule 11 (MAIN_TYPE)


State 4

    1 prm: HEADER MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 6


State 5

    0 $accept: prm $end .

    $default  accept


State 6

    1 prm: HEADER MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 7


State 7

    1 prm: HEADER MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 8


State 8

    1 prm: HEADER MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 9


State 9

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB . BODY RCB

    VAR  shift, and go to state 10

    BODY                    go to state 11
    DECLARATION_STATEMENTS  go to state 12
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14


State 10

    9 VAR_LIST: VAR . COMA VAR_LIST
   10         | VAR .

    COMA  shift, and go to state 15

    $default  reduce using rule 10 (VAR_LIST)


State 11

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 16


State 12

    2 BODY: DECLARATION_STATEMENTS . BODY2

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 24
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 13

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
    7                       | DECLARATION_STATEMENT .

    VAR  shift, and go to state 10

    VAR       [reduce using rule 7 (DECLARATION_STATEMENTS)]
    $default  reduce using rule 7 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 28
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14


State 14

    8 DECLARATION_STATEMENT: VAR_LIST . COLON COLON DATA_TYPE

    COLON  shift, and go to state 29


State 15

    9 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 10

    VAR_LIST  go to state 30


State 16

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 17

   17 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 34

    LOGICAL_EXPN   go to state 35
    LOGICAL_EXPN1  go to state 36
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 18

   40 PROGRAM_STATEMENT: SC .

    $default  reduce using rule 40 (PROGRAM_STATEMENT)


State 19

   18 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   19                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 42


State 20

   22 PROGRAM_STATEMENTS: FOR . LB VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 43


State 21

   21 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 44


State 22

   20 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 45


State 23

    9 VAR_LIST: VAR . COMA VAR_LIST
   10         | VAR .
   39 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC
   41                  | VAR . UPLUS SC
   42                  | VAR . UMINUS SC

    COMA    shift, and go to state 15
    EQ      shift, and go to state 46
    UPLUS   shift, and go to state 47
    UMINUS  shift, and go to state 48

    $default  reduce using rule 10 (VAR_LIST)


State 24

    2 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 2 (BODY)


State 25

    4 BODY2: DECLARATION_STATEMENTS . BODY2

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 49
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 26

    5 BODY2: PROGRAM_STATEMENTS . BODY2

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 50
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 27

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
   23                   | PROGRAM_STATEMENT .

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 51

    LB        [reduce using rule 23 (PROGRAM_STATEMENTS)]
    SC        [reduce using rule 23 (PROGRAM_STATEMENTS)]
    IF        [reduce using rule 23 (PROGRAM_STATEMENTS)]
    FOR       [reduce using rule 23 (PROGRAM_STATEMENTS)]
    DO        [reduce using rule 23 (PROGRAM_STATEMENTS)]
    WHILE     [reduce using rule 23 (PROGRAM_STATEMENTS)]
    VAR       [reduce using rule 23 (PROGRAM_STATEMENTS)]
    $default  reduce using rule 23 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS  go to state 52
    PROGRAM_STATEMENT   go to state 27


State 28

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 6 (DECLARATION_STATEMENTS)


State 29

    8 DECLARATION_STATEMENT: VAR_LIST COLON . COLON DATA_TYPE

    COLON  shift, and go to state 53


State 30

    9 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 9 (VAR_LIST)


State 31

   29 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   52 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 54

    LOGICAL_EXPN1  go to state 55
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 56
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 32

   54 A_EXPN3: VAR . UPLUS
   55        | VAR . UMINUS
   56        | VAR .

    UPLUS   shift, and go to state 57
    UMINUS  shift, and go to state 58

    $default  reduce using rule 56 (A_EXPN3)


State 33

   53 A_EXPN3: NUMBER .

    $default  reduce using rule 53 (A_EXPN3)


State 34

   24 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   28 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 59


State 35

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 60


State 36

   25 LOGICAL_EXPN: LOGICAL_EXPN1 .
   26 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AND  shift, and go to state 61
    OR   shift, and go to state 62

    $default  reduce using rule 25 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 63


State 37

   27 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 27 (LOGICAL_EXPN1)


State 38

   30 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN

    ET     shift, and go to state 64
    GT     shift, and go to state 65
    LT     shift, and go to state 66
    GTE    shift, and go to state 67
    LTE    shift, and go to state 68
    NE     shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71

    COMP_OPERATOR  go to state 72


State 39

   45 A_EXPN: A_EXPN1 .
   46 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   47        | A_EXPN1 . DIV A_EXPN1
   48        | A_EXPN1 . MOD A_EXPN1

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 75

    $default  reduce using rule 45 (A_EXPN)


State 40

   49 A_EXPN1: A_EXPN2 .
   50 A_EXPN2: A_EXPN2 . EXP A_EXPN2

    EXP  shift, and go to state 76

    $default  reduce using rule 49 (A_EXPN1)


State 41

   51 A_EXPN2: A_EXPN3 .

    $default  reduce using rule 51 (A_EXPN2)


State 42

   18 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   19                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 34

    LOGICAL_EXPN   go to state 77
    LOGICAL_EXPN1  go to state 36
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 43

   22 PROGRAM_STATEMENTS: FOR LB . VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB

    VAR  shift, and go to state 78


State 44

   21 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 79
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 45

   20 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 34

    LOGICAL_EXPN   go to state 80
    LOGICAL_EXPN1  go to state 36
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 46

   39 PROGRAM_STATEMENT: VAR EQ . A_EXPN SC

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN   go to state 82
    A_EXPN1  go to state 39
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 47

   41 PROGRAM_STATEMENT: VAR UPLUS . SC

    SC  shift, and go to state 83


State 48

   42 PROGRAM_STATEMENT: VAR UMINUS . SC

    SC  shift, and go to state 84


State 49

    4 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 4 (BODY2)


State 50

    5 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 5 (BODY2)


State 51

   39 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC
   41                  | VAR . UPLUS SC
   42                  | VAR . UMINUS SC

    EQ      shift, and go to state 46
    UPLUS   shift, and go to state 47
    UMINUS  shift, and go to state 48


State 52

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 16 (PROGRAM_STATEMENTS)


State 53

    8 DECLARATION_STATEMENT: VAR_LIST COLON COLON . DATA_TYPE

    INT     shift, and go to state 85
    CHAR    shift, and go to state 86
    FLOAT   shift, and go to state 87
    DOUBLE  shift, and go to state 88

    DATA_TYPE  go to state 89


State 54

   28 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 90


State 55

   26 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   29              | LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 91
    AND  shift, and go to state 61
    OR   shift, and go to state 62

    LOGICAL_OPERATOR  go to state 63


State 56

   30 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN
   52 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 92
    ET     shift, and go to state 64
    GT     shift, and go to state 65
    LT     shift, and go to state 66
    GTE    shift, and go to state 67
    LTE    shift, and go to state 68
    NE     shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71

    COMP_OPERATOR  go to state 72


State 57

   54 A_EXPN3: VAR UPLUS .

    $default  reduce using rule 54 (A_EXPN3)


State 58

   55 A_EXPN3: VAR UMINUS .

    $default  reduce using rule 55 (A_EXPN3)


State 59

   24 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   28 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 54

    LOGICAL_EXPN1  go to state 93
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 60

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 94


State 61

   37 LOGICAL_OPERATOR: AND .

    $default  reduce using rule 37 (LOGICAL_OPERATOR)


State 62

   38 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 38 (LOGICAL_OPERATOR)


State 63

   26 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 54

    LOGICAL_EXPN1  go to state 95
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 64

   31 COMP_OPERATOR: ET .

    $default  reduce using rule 31 (COMP_OPERATOR)


State 65

   32 COMP_OPERATOR: GT .

    $default  reduce using rule 32 (COMP_OPERATOR)


State 66

   33 COMP_OPERATOR: LT .

    $default  reduce using rule 33 (COMP_OPERATOR)


State 67

   34 COMP_OPERATOR: GTE .

    $default  reduce using rule 34 (COMP_OPERATOR)


State 68

   35 COMP_OPERATOR: LTE .

    $default  reduce using rule 35 (COMP_OPERATOR)


State 69

   36 COMP_OPERATOR: NE .

    $default  reduce using rule 36 (COMP_OPERATOR)


State 70

   43 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN   go to state 96
    A_EXPN1  go to state 39
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 71

   44 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN   go to state 97
    A_EXPN1  go to state 39
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 72

   30 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN   go to state 98
    A_EXPN1  go to state 39
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 73

   46 A_EXPN1: A_EXPN1 MUL . A_EXPN1

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN1  go to state 99
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 74

   47 A_EXPN1: A_EXPN1 DIV . A_EXPN1

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN1  go to state 100
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 75

   48 A_EXPN1: A_EXPN1 MOD . A_EXPN1

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN1  go to state 101
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 76

   50 A_EXPN2: A_EXPN2 EXP . A_EXPN2

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN2  go to state 102
    A_EXPN3  go to state 41


State 77

   18 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   19                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 103


State 78

   22 PROGRAM_STATEMENTS: FOR LB VAR . EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB

    EQ  shift, and go to state 104


State 79

   21 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 105


State 80

   20 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 106


State 81

   52 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN   go to state 107
    A_EXPN1  go to state 39
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 82

   39 PROGRAM_STATEMENT: VAR EQ A_EXPN . SC
   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN

    SC     shift, and go to state 108
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71


State 83

   41 PROGRAM_STATEMENT: VAR UPLUS SC .

    $default  reduce using rule 41 (PROGRAM_STATEMENT)


State 84

   42 PROGRAM_STATEMENT: VAR UMINUS SC .

    $default  reduce using rule 42 (PROGRAM_STATEMENT)


State 85

   12 DATA_TYPE: INT .

    $default  reduce using rule 12 (DATA_TYPE)


State 86

   13 DATA_TYPE: CHAR .

    $default  reduce using rule 13 (DATA_TYPE)


State 87

   14 DATA_TYPE: FLOAT .

    $default  reduce using rule 14 (DATA_TYPE)


State 88

   15 DATA_TYPE: DOUBLE .

    $default  reduce using rule 15 (DATA_TYPE)


State 89

    8 DECLARATION_STATEMENT: VAR_LIST COLON COLON DATA_TYPE .

    $default  reduce using rule 8 (DECLARATION_STATEMENT)


State 90

   28 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 54

    LOGICAL_EXPN1  go to state 109
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 91

   29 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 29 (LOGICAL_EXPN1)


State 92

   52 A_EXPN3: LB A_EXPN RB .

    $default  reduce using rule 52 (A_EXPN3)


State 93

   24 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   26 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   28              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 110
    AND  shift, and go to state 61
    OR   shift, and go to state 62

    LOGICAL_OPERATOR  go to state 63


State 94

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 111


State 95

   26 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   26              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AND  shift, and go to state 61
    OR   shift, and go to state 62

    AND       [reduce using rule 26 (LOGICAL_EXPN1)]
    OR        [reduce using rule 26 (LOGICAL_EXPN1)]
    $default  reduce using rule 26 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 63


State 96

   43 A_EXPN: A_EXPN . PLUS A_EXPN
   43       | A_EXPN PLUS A_EXPN .
   44       | A_EXPN . MINUS A_EXPN

    $default  reduce using rule 43 (A_EXPN)


State 97

   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN
   44       | A_EXPN MINUS A_EXPN .

    $default  reduce using rule 44 (A_EXPN)


State 98

   30 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71

    $default  reduce using rule 30 (LOGICAL_EXPN2)


State 99

   46 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   46        | A_EXPN1 MUL A_EXPN1 .
   47        | A_EXPN1 . DIV A_EXPN1
   48        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 46 (A_EXPN1)


State 100

   46 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   47        | A_EXPN1 . DIV A_EXPN1
   47        | A_EXPN1 DIV A_EXPN1 .
   48        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 47 (A_EXPN1)


State 101

   46 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   47        | A_EXPN1 . DIV A_EXPN1
   48        | A_EXPN1 . MOD A_EXPN1
   48        | A_EXPN1 MOD A_EXPN1 .

    $default  reduce using rule 48 (A_EXPN1)


State 102

   50 A_EXPN2: A_EXPN2 . EXP A_EXPN2
   50        | A_EXPN2 EXP A_EXPN2 .

    EXP  shift, and go to state 76

    $default  reduce using rule 50 (A_EXPN2)


State 103

   18 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   19                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 112


State 104

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ . A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN   go to state 113
    A_EXPN1  go to state 39
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 105

   21 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 114


State 106

   20 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 115


State 107

   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN
   52 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 92
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71


State 108

   39 PROGRAM_STATEMENT: VAR EQ A_EXPN SC .

    $default  reduce using rule 39 (PROGRAM_STATEMENT)


State 109

   26 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   28              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 116
    AND  shift, and go to state 61
    OR   shift, and go to state 62

    LOGICAL_OPERATOR  go to state 63


State 110

   24 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   28 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 24 (LOGICAL_EXPN)
    RB        [reduce using rule 28 (LOGICAL_EXPN1)]
    SC        reduce using rule 24 (LOGICAL_EXPN)
    SC        [reduce using rule 28 (LOGICAL_EXPN1)]
    AND       reduce using rule 28 (LOGICAL_EXPN1)
    OR        reduce using rule 28 (LOGICAL_EXPN1)
    $default  reduce using rule 24 (LOGICAL_EXPN)


State 111

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 117
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 112

   18 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   19                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 118
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 113

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN . SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB
   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN

    SC     shift, and go to state 119
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71


State 114

   21 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 120


State 115

   20 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 121
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 116

   28 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 28 (LOGICAL_EXPN1)


State 117

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 122


State 118

   18 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   19                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 123


State 119

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC . LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 34

    LOGICAL_EXPN   go to state 124
    LOGICAL_EXPN1  go to state 36
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 120

   21 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 31
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33
    NOT     shift, and go to state 34

    LOGICAL_EXPN   go to state 125
    LOGICAL_EXPN1  go to state 36
    LOGICAL_EXPN2  go to state 37
    A_EXPN         go to state 38
    A_EXPN1        go to state 39
    A_EXPN2        go to state 40
    A_EXPN3        go to state 41


State 121

   20 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 126


State 122

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 127


State 123

   18 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   19                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 128

    $default  reduce using rule 18 (PROGRAM_STATEMENTS)


State 124

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN . SC A_EXPN RB LCB BODY2 RCB

    SC  shift, and go to state 129


State 125

   21 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 130


State 126

   20 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 20 (PROGRAM_STATEMENTS)


State 127

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 131


State 128

   19 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 132


State 129

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN SC . A_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 81
    VAR     shift, and go to state 32
    NUMBER  shift, and go to state 33

    A_EXPN   go to state 133
    A_EXPN1  go to state 39
    A_EXPN2  go to state 40
    A_EXPN3  go to state 41


State 130

   21 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 134


State 131

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 135
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 132

   19 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 136
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 133

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN . RB LCB BODY2 RCB
   43 A_EXPN: A_EXPN . PLUS A_EXPN
   44       | A_EXPN . MINUS A_EXPN

    RB     shift, and go to state 137
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71


State 134

   21 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 21 (PROGRAM_STATEMENTS)


State 135

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 138


State 136

   19 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 139


State 137

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 140


State 138

   17 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 17 (PROGRAM_STATEMENTS)


State 139

   19 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 19 (PROGRAM_STATEMENTS)


State 140

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB . BODY2 RCB

    LB     shift, and go to state 17
    SC     shift, and go to state 18
    IF     shift, and go to state 19
    FOR    shift, and go to state 20
    DO     shift, and go to state 21
    WHILE  shift, and go to state 22
    VAR    shift, and go to state 23

    $default  reduce using rule 3 (BODY2)

    BODY2                   go to state 141
    DECLARATION_STATEMENTS  go to state 25
    DECLARATION_STATEMENT   go to state 13
    VAR_LIST                go to state 14
    PROGRAM_STATEMENTS      go to state 26
    PROGRAM_STATEMENT       go to state 27


State 141

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 142


State 142

   22 PROGRAM_STATEMENTS: FOR LB VAR EQ A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 22 (PROGRAM_STATEMENTS)
