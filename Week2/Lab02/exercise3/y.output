State 45 conflicts: 1 shift/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADER INT MAIN LB RB LCB BODY RCB

    2 BODY: DECLARATION_STATEMENTS PROGRAM_STATEMENTS

    3 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
    4                       | DECLARATION_STATEMENT

    5 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
    6                   | PROGRAM_STATEMENT

    7 DECLARATION_STATEMENT: INT VAR_LIST SC
    8                      | FLOAT VAR_LIST SC
    9                      | DOUBLE VAR_LIST SC
   10                      | CHAR VAR_LIST SC

   11 VAR_LIST: VAR COMA VAR_LIST
   12         | VAR

   13 PROGRAM_STATEMENT: VAR EQ A_EXPN SC
   14                  | KEY EQ A_EXPN SC

   15 A_EXPN: A_EXPN OP A_EXPN
   16       | LB A_EXPN RB
   17       | VAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HEADER (258) 1
    INT (259) 1 7
    FLOAT (260) 8
    DOUBLE (261) 9
    CHAR (262) 10
    MAIN (263) 1
    LB (264) 1 16
    RB (265) 1 16
    LCB (266) 1
    RCB (267) 1
    SC (268) 7 8 9 10 13 14
    COMA (269) 11
    KEY (270) 14
    VAR (271) 11 12 13 17
    EQ (272) 13 14
    OP (273) 15


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    prm (20)
        on left: 1
        on right: 0
    BODY (21)
        on left: 2
        on right: 1
    DECLARATION_STATEMENTS (22)
        on left: 3 4
        on right: 2 3
    PROGRAM_STATEMENTS (23)
        on left: 5 6
        on right: 2 5
    DECLARATION_STATEMENT (24)
        on left: 7 8 9 10
        on right: 3 4
    VAR_LIST (25)
        on left: 11 12
        on right: 7 8 9 10 11
    PROGRAM_STATEMENT (26)
        on left: 13 14
        on right: 5 6
    A_EXPN (27)
        on left: 15 16 17
        on right: 13 14 15 16


State 0

    0 $accept: . prm $end

    HEADER  shift, and go to state 1

    prm  go to state 2


State 1

    1 prm: HEADER . INT MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    1 prm: HEADER INT . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    1 prm: HEADER INT MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 6


State 6

    1 prm: HEADER INT MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 7


State 7

    1 prm: HEADER INT MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 8


State 8

    1 prm: HEADER INT MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    CHAR    shift, and go to state 12

    BODY                    go to state 13
    DECLARATION_STATEMENTS  go to state 14
    DECLARATION_STATEMENT   go to state 15


State 9

    7 DECLARATION_STATEMENT: INT . VAR_LIST SC

    VAR  shift, and go to state 16

    VAR_LIST  go to state 17


State 10

    8 DECLARATION_STATEMENT: FLOAT . VAR_LIST SC

    VAR  shift, and go to state 16

    VAR_LIST  go to state 18


State 11

    9 DECLARATION_STATEMENT: DOUBLE . VAR_LIST SC

    VAR  shift, and go to state 16

    VAR_LIST  go to state 19


State 12

   10 DECLARATION_STATEMENT: CHAR . VAR_LIST SC

    VAR  shift, and go to state 16

    VAR_LIST  go to state 20


State 13

    1 prm: HEADER INT MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 21


State 14

    2 BODY: DECLARATION_STATEMENTS . PROGRAM_STATEMENTS

    KEY  shift, and go to state 22
    VAR  shift, and go to state 23

    PROGRAM_STATEMENTS  go to state 24
    PROGRAM_STATEMENT   go to state 25


State 15

    3 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
    4                       | DECLARATION_STATEMENT .

    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    CHAR    shift, and go to state 12

    $default  reduce using rule 4 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 26
    DECLARATION_STATEMENT   go to state 15


State 16

   11 VAR_LIST: VAR . COMA VAR_LIST
   12         | VAR .

    COMA  shift, and go to state 27

    $default  reduce using rule 12 (VAR_LIST)


State 17

    7 DECLARATION_STATEMENT: INT VAR_LIST . SC

    SC  shift, and go to state 28


State 18

    8 DECLARATION_STATEMENT: FLOAT VAR_LIST . SC

    SC  shift, and go to state 29


State 19

    9 DECLARATION_STATEMENT: DOUBLE VAR_LIST . SC

    SC  shift, and go to state 30


State 20

   10 DECLARATION_STATEMENT: CHAR VAR_LIST . SC

    SC  shift, and go to state 31


State 21

    1 prm: HEADER INT MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 22

   14 PROGRAM_STATEMENT: KEY . EQ A_EXPN SC

    EQ  shift, and go to state 32


State 23

   13 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC

    EQ  shift, and go to state 33


State 24

    2 BODY: DECLARATION_STATEMENTS PROGRAM_STATEMENTS .

    $default  reduce using rule 2 (BODY)


State 25

    5 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
    6                   | PROGRAM_STATEMENT .

    KEY  shift, and go to state 22
    VAR  shift, and go to state 23

    $default  reduce using rule 6 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS  go to state 34
    PROGRAM_STATEMENT   go to state 25


State 26

    3 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 3 (DECLARATION_STATEMENTS)


State 27

   11 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 16

    VAR_LIST  go to state 35


State 28

    7 DECLARATION_STATEMENT: INT VAR_LIST SC .

    $default  reduce using rule 7 (DECLARATION_STATEMENT)


State 29

    8 DECLARATION_STATEMENT: FLOAT VAR_LIST SC .

    $default  reduce using rule 8 (DECLARATION_STATEMENT)


State 30

    9 DECLARATION_STATEMENT: DOUBLE VAR_LIST SC .

    $default  reduce using rule 9 (DECLARATION_STATEMENT)


State 31

   10 DECLARATION_STATEMENT: CHAR VAR_LIST SC .

    $default  reduce using rule 10 (DECLARATION_STATEMENT)


State 32

   14 PROGRAM_STATEMENT: KEY EQ . A_EXPN SC

    LB   shift, and go to state 36
    VAR  shift, and go to state 37

    A_EXPN  go to state 38


State 33

   13 PROGRAM_STATEMENT: VAR EQ . A_EXPN SC

    LB   shift, and go to state 36
    VAR  shift, and go to state 37

    A_EXPN  go to state 39


State 34

    5 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 5 (PROGRAM_STATEMENTS)


State 35

   11 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 11 (VAR_LIST)


State 36

   16 A_EXPN: LB . A_EXPN RB

    LB   shift, and go to state 36
    VAR  shift, and go to state 37

    A_EXPN  go to state 40


State 37

   17 A_EXPN: VAR .

    $default  reduce using rule 17 (A_EXPN)


State 38

   14 PROGRAM_STATEMENT: KEY EQ A_EXPN . SC
   15 A_EXPN: A_EXPN . OP A_EXPN

    SC  shift, and go to state 41
    OP  shift, and go to state 42


State 39

   13 PROGRAM_STATEMENT: VAR EQ A_EXPN . SC
   15 A_EXPN: A_EXPN . OP A_EXPN

    SC  shift, and go to state 43
    OP  shift, and go to state 42


State 40

   15 A_EXPN: A_EXPN . OP A_EXPN
   16       | LB A_EXPN . RB

    RB  shift, and go to state 44
    OP  shift, and go to state 42


State 41

   14 PROGRAM_STATEMENT: KEY EQ A_EXPN SC .

    $default  reduce using rule 14 (PROGRAM_STATEMENT)


State 42

   15 A_EXPN: A_EXPN OP . A_EXPN

    LB   shift, and go to state 36
    VAR  shift, and go to state 37

    A_EXPN  go to state 45


State 43

   13 PROGRAM_STATEMENT: VAR EQ A_EXPN SC .

    $default  reduce using rule 13 (PROGRAM_STATEMENT)


State 44

   16 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 16 (A_EXPN)


State 45

   15 A_EXPN: A_EXPN . OP A_EXPN
   15       | A_EXPN OP A_EXPN .

    OP  shift, and go to state 42

    OP        [reduce using rule 15 (A_EXPN)]
    $default  reduce using rule 15 (A_EXPN)
