State 129 conflicts: 8 shift/reduce
State 130 conflicts: 8 shift/reduce
State 142 conflicts: 2 shift/reduce
State 156 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB

    3 HEADERS: HEADER HEADERS
    4        | HEADER

    5 HEADER: HASH INCLUDE LT HEADER_FILE GT
    6       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    7 HEADER2: HEADER2 VAR DIV
    8        | DIV
    9        | %empty

   10 BODY: DECLARATION_STATEMENTS BODY2

   11 BODY2: %empty
   12      | DECLARATION_STATEMENTS BODY2
   13      | PROGRAM_STATEMENTS BODY2

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   15 VAR_LIST: VAR COMA VAR_LIST
   16         | ARRAY_DECLARATION COMA VAR_LIST
   17         | PTR_VAR COMA VAR_LIST
   18         | VAR
   19         | ARRAY_DECLARATION
   20         | PTR_VAR

   21 PTR_VAR: PTR_DEPTH VAR

   22 PTR_DEPTH: MUL PTR_DEPTH
   23          | MUL

   24 ARRAY_DECLARATION: VAR ARRAY_SIZE

   25 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   26           | LSQRB NUMBER RSQRB

   27 MAIN_TYPE: INT

   28 DATA_TYPE: INT
   29          | CHAR
   30          | FLOAT
   31          | DOUBLE

   32 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC
   33                   | SC
   34                   | INCR_DCR_EXPN SC

   35 $@2: %empty

   36 $@3: %empty

   37 $@4: %empty

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB
   39                   | CONDITIONAL_STATEMENTS

   40 $@5: %empty

   41 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB

   42 $@6: %empty

   43 $@7: %empty

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

   45 $@8: %empty

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

   47 CONDITIONAL_STATEMENTS: IF_STATEMENT
   48                       | IF_STATEMENT ELSE_STATEMENT
   49                       | IF_STATEMENT ELSE_IF_STATEMENT
   50                       | IF_STATEMENT ELSE_IF_STATEMENT ELSE_STATEMENT

   51 $@9: %empty

   52 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 BODY2 RCB

   53 $@10: %empty

   54 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 BODY2 RCB

   55 $@11: %empty

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB

   57 $@12: %empty

   58 ELSE_STATEMENT: ELSE LCB $@12 BODY2 RCB

   59 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN

   60 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   61             | LOGICAL_EXPN1

   62 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   63              | LOGICAL_EXPN2
   64              | NOT LB LOGICAL_EXPN1 RB
   65              | LB LOGICAL_EXPN1 RB

   66 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   67 COMP_OPERATOR: ET
   68              | GT
   69              | LT
   70              | GTE
   71              | LTE
   72              | NE

   73 LOGICAL_OPERATOR: AMPER AMPER
   74                 | OR

   75 A_EXPN: A_EXPN OPR_PREC1 A_EXPN
   76       | A_EXPN OPR_PREC2 A_EXPN
   77       | LB A_EXPN RB
   78       | INCR_DCR_EXPN
   79       | VAR
   80       | NUMBER
   81       | MUL A_EXPN
   82       | ARRAY_ACCESS
   83       | AMPER A_EXPN

   84 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB
   85             | VAR LSQRB A_EXPN RSQRB

   86 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS

   87 UNARY_OPERATORS: UPLUS
   88                | UMINUS

   89 OPR_PREC1: PLUS
   90          | MINUS

   91 OPR_PREC2: DIV
   92          | MUL
   93          | EXP
   94          | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 5 6
    INCLUDE (259) 5 6
    HEADER_FILE (260) 5 6
    MAIN (261) 2
    LB (262) 2 38 41 44 46 52 54 56 60 64 65 77
    RB (263) 2 38 41 44 46 52 54 56 60 64 65 77
    LCB (264) 2 38 41 44 46 52 54 56 58
    RCB (265) 2 38 41 44 46 52 54 56 58
    LSQRB (266) 25 26 84 85
    RSQRB (267) 25 26 84 85
    SC (268) 14 32 33 34 44 46
    COLON (269) 38
    QMARK (270) 38
    COMA (271) 15 16 17
    IF (272) 52
    ELSE_IF (273) 54 56
    ELSE (274) 58
    FOR (275) 46
    DO (276) 44
    WHILE (277) 41 44
    ET (278) 67
    EQ (279) 59
    GT (280) 5 68
    LT (281) 5 69
    GTE (282) 70
    LTE (283) 71
    NE (284) 72
    AMPER (285) 73 83
    OR (286) 74
    NOT (287) 60 64
    DQUOTE (288) 6
    PLUS (289) 89
    MINUS (290) 90
    MUL (291) 22 23 81 92
    DIV (292) 7 8 91
    MOD (293) 94
    EXP (294) 93
    UPLUS (295) 87
    UMINUS (296) 88
    INT <data_type> (297) 27 28
    CHAR <data_type> (298) 29
    FLOAT <data_type> (299) 30
    DOUBLE <data_type> (300) 31
    VAR <var_name> (301) 7 15 18 21 24 79 85
    NUMBER <integer_val> (302) 25 26 80


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    prm (49)
        on left: 2
        on right: 0
    $@1 (50)
        on left: 1
        on right: 2
    HEADERS (51)
        on left: 3 4
        on right: 2 3
    HEADER (52)
        on left: 5 6
        on right: 3 4
    HEADER2 (53)
        on left: 7 8 9
        on right: 6 7
    BODY (54)
        on left: 10
        on right: 2
    BODY2 (55)
        on left: 11 12 13
        on right: 10 12 13 38 41 44 46 52 54 56 58
    DECLARATION_STATEMENTS (56)
        on left: 14
        on right: 10 12
    VAR_LIST (57)
        on left: 15 16 17 18 19 20
        on right: 14 15 16 17
    PTR_VAR (58)
        on left: 21
        on right: 17 20
    PTR_DEPTH (59)
        on left: 22 23
        on right: 21 22
    ARRAY_DECLARATION (60)
        on left: 24
        on right: 16 19
    ARRAY_SIZE (61)
        on left: 25 26
        on right: 24 25
    MAIN_TYPE (62)
        on left: 27
        on right: 2
    DATA_TYPE <data_type> (63)
        on left: 28 29 30 31
        on right: 14
    PROGRAM_STATEMENTS (64)
        on left: 32 33 34 38 39 41 44 46
        on right: 13
    $@2 (65)
        on left: 35
        on right: 38
    $@3 (66)
        on left: 36
        on right: 38
    $@4 (67)
        on left: 37
        on right: 38
    $@5 (68)
        on left: 40
        on right: 41
    $@6 (69)
        on left: 42
        on right: 44
    $@7 (70)
        on left: 43
        on right: 44
    $@8 (71)
        on left: 45
        on right: 46
    CONDITIONAL_STATEMENTS (72)
        on left: 47 48 49 50
        on right: 39
    IF_STATEMENT (73)
        on left: 52
        on right: 47 48 49 50
    $@9 (74)
        on left: 51
        on right: 52
    ELSE_IF_STATEMENT (75)
        on left: 54 56
        on right: 49 50 56
    $@10 (76)
        on left: 53
        on right: 54
    $@11 (77)
        on left: 55
        on right: 56
    ELSE_STATEMENT (78)
        on left: 58
        on right: 48 50
    $@12 (79)
        on left: 57
        on right: 58
    ASSIGNMENT_STATEMENT (80)
        on left: 59
        on right: 32 46
    LOGICAL_EXPN (81)
        on left: 60 61
        on right: 38 41 44 46 52 54 56
    LOGICAL_EXPN1 (82)
        on left: 62 63 64 65
        on right: 60 61 62 64 65
    LOGICAL_EXPN2 (83)
        on left: 66
        on right: 63
    COMP_OPERATOR (84)
        on left: 67 68 69 70 71 72
        on right: 66
    LOGICAL_OPERATOR (85)
        on left: 73 74
        on right: 62
    A_EXPN <EXPN_type> (86)
        on left: 75 76 77 78 79 80 81 82 83
        on right: 59 66 75 76 77 81 83 84 85 86
    ARRAY_ACCESS <EXPN_type> (87)
        on left: 84 85
        on right: 82 84
    INCR_DCR_EXPN <EXPN_type> (88)
        on left: 86
        on right: 34 46 78
    UNARY_OPERATORS (89)
        on left: 87 88
        on right: 86
    OPR_PREC1 (90)
        on left: 89 90
        on right: 75
    OPR_PREC2 (91)
        on left: 91 92 93 94
        on right: 76


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    5 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    6       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    2 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    3 HEADERS: HEADER . HEADERS
    4        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 4 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    5 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    6       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   27 MAIN_TYPE: INT .

    $default  reduce using rule 27 (MAIN_TYPE)


State 8

    2 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB $@1 BODY RCB

    MAIN  shift, and go to state 12


State 9

    3 HEADERS: HEADER HEADERS .

    $default  reduce using rule 3 (HEADERS)


State 10

    5 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    6 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 9 (HEADER2)

    HEADER2  go to state 15


State 12

    2 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB $@1 BODY RCB

    LB  shift, and go to state 16


State 13

    5 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    8 HEADER2: DIV .

    $default  reduce using rule 8 (HEADER2)


State 15

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    7 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    2 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB $@1 BODY RCB

    RB  shift, and go to state 20


State 17

    5 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 5 (HEADER)


State 18

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    7 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    2 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB $@1 BODY RCB

    LCB  shift, and go to state 23


State 21

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 6 (HEADER)


State 22

    7 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 7 (HEADER2)


State 23

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . $@1 BODY RCB

    $default  reduce using rule 1 ($@1)

    $@1  go to state 24


State 24

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 . BODY RCB

    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28

    BODY                    go to state 29
    DECLARATION_STATEMENTS  go to state 30
    DATA_TYPE               go to state 31


State 25

   28 DATA_TYPE: INT .

    $default  reduce using rule 28 (DATA_TYPE)


State 26

   29 DATA_TYPE: CHAR .

    $default  reduce using rule 29 (DATA_TYPE)


State 27

   30 DATA_TYPE: FLOAT .

    $default  reduce using rule 30 (DATA_TYPE)


State 28

   31 DATA_TYPE: DOUBLE .

    $default  reduce using rule 31 (DATA_TYPE)


State 29

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY . RCB

    RCB  shift, and go to state 32


State 30

   10 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 43
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 31

   14 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    MUL  shift, and go to state 52
    VAR  shift, and go to state 53

    VAR_LIST           go to state 54
    PTR_VAR            go to state 55
    PTR_DEPTH          go to state 56
    ARRAY_DECLARATION  go to state 57


State 32

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB .

    $default  reduce using rule 2 (prm)


State 33

   38 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB
   77 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 59
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN   go to state 60
    LOGICAL_EXPN1  go to state 61
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 63
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 34

   33 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 35

   52 IF_STATEMENT: IF . LB LOGICAL_EXPN RB LCB $@9 BODY2 RCB

    LB  shift, and go to state 65


State 36

   46 PROGRAM_STATEMENTS: FOR . LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB  shift, and go to state 66


State 37

   44 PROGRAM_STATEMENTS: DO . LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 67


State 38

   41 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB

    LB  shift, and go to state 68


State 39

   83 A_EXPN: AMPER . A_EXPN

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 70
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 40

   81 A_EXPN: MUL . A_EXPN

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 71
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 41

   79 A_EXPN: VAR .
   85 ARRAY_ACCESS: VAR . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 72

    $default  reduce using rule 79 (A_EXPN)


State 42

   80 A_EXPN: NUMBER .

    $default  reduce using rule 80 (A_EXPN)


State 43

   10 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 10 (BODY)


State 44

   12 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 73
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 45

   13 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 74
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 46

   39 PROGRAM_STATEMENTS: CONDITIONAL_STATEMENTS .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)


State 47

   47 CONDITIONAL_STATEMENTS: IF_STATEMENT .
   48                       | IF_STATEMENT . ELSE_STATEMENT
   49                       | IF_STATEMENT . ELSE_IF_STATEMENT
   50                       | IF_STATEMENT . ELSE_IF_STATEMENT ELSE_STATEMENT

    ELSE_IF  shift, and go to state 75
    ELSE     shift, and go to state 76

    $default  reduce using rule 47 (CONDITIONAL_STATEMENTS)

    ELSE_IF_STATEMENT  go to state 77
    ELSE_STATEMENT     go to state 78


State 48

   32 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT . SC

    SC  shift, and go to state 79


State 49

   59 ASSIGNMENT_STATEMENT: A_EXPN . EQ A_EXPN
   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EQ      shift, and go to state 80
    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 50

   82 A_EXPN: ARRAY_ACCESS .
   84 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 92

    $default  reduce using rule 82 (A_EXPN)


State 51

   34 PROGRAM_STATEMENTS: INCR_DCR_EXPN . SC
   78 A_EXPN: INCR_DCR_EXPN .

    SC  shift, and go to state 93

    $default  reduce using rule 78 (A_EXPN)


State 52

   22 PTR_DEPTH: MUL . PTR_DEPTH
   23          | MUL .

    MUL  shift, and go to state 52

    $default  reduce using rule 23 (PTR_DEPTH)

    PTR_DEPTH  go to state 94


State 53

   15 VAR_LIST: VAR . COMA VAR_LIST
   18         | VAR .
   24 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 95
    COMA   shift, and go to state 96

    $default  reduce using rule 18 (VAR_LIST)

    ARRAY_SIZE  go to state 97


State 54

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 98


State 55

   17 VAR_LIST: PTR_VAR . COMA VAR_LIST
   20         | PTR_VAR .

    COMA  shift, and go to state 99

    $default  reduce using rule 20 (VAR_LIST)


State 56

   21 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 100


State 57

   16 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   19         | ARRAY_DECLARATION .

    COMA  shift, and go to state 101

    $default  reduce using rule 19 (VAR_LIST)


State 58

   65 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   77 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 102
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN1  go to state 103
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 63
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 59

   60 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   64 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 104


State 60

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    RB  shift, and go to state 105


State 61

   61 LOGICAL_EXPN: LOGICAL_EXPN1 .
   62 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AMPER  shift, and go to state 106
    OR     shift, and go to state 107

    $default  reduce using rule 61 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 108


State 62

   63 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 63 (LOGICAL_EXPN1)


State 63

   66 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   77       | LB A_EXPN . RB
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 109
    ET      shift, and go to state 110
    GT      shift, and go to state 111
    LT      shift, and go to state 112
    GTE     shift, and go to state 113
    LTE     shift, and go to state 114
    NE      shift, and go to state 115
    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    COMP_OPERATOR    go to state 116
    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 64

   78 A_EXPN: INCR_DCR_EXPN .

    $default  reduce using rule 78 (A_EXPN)


State 65

   52 IF_STATEMENT: IF LB . LOGICAL_EXPN RB LCB $@9 BODY2 RCB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 59
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN   go to state 117
    LOGICAL_EXPN1  go to state 61
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 66

   46 PROGRAM_STATEMENTS: FOR LB . ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    ASSIGNMENT_STATEMENT  go to state 119
    A_EXPN                go to state 49
    ARRAY_ACCESS          go to state 50
    INCR_DCR_EXPN         go to state 64


State 67

   44 PROGRAM_STATEMENTS: DO LCB . $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    $default  reduce using rule 42 ($@6)

    $@6  go to state 120


State 68

   41 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB $@5 BODY2 RCB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 59
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN   go to state 121
    LOGICAL_EXPN1  go to state 61
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 69

   77 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 70

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   83       | AMPER A_EXPN .
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    $default  reduce using rule 83 (A_EXPN)

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 71

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   81       | MUL A_EXPN .
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    $default  reduce using rule 81 (A_EXPN)

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 72

   85 ARRAY_ACCESS: VAR LSQRB . A_EXPN RSQRB

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 123
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 73

   12 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 74

   13 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 13 (BODY2)


State 75

   54 ELSE_IF_STATEMENT: ELSE_IF . LB LOGICAL_EXPN RB LCB $@10 BODY2 RCB

    LB  shift, and go to state 124


State 76

   58 ELSE_STATEMENT: ELSE . LCB $@12 BODY2 RCB

    LCB  shift, and go to state 125


State 77

   49 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_IF_STATEMENT .
   50                       | IF_STATEMENT ELSE_IF_STATEMENT . ELSE_STATEMENT
   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT . ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB

    ELSE_IF  shift, and go to state 126
    ELSE     shift, and go to state 76

    $default  reduce using rule 49 (CONDITIONAL_STATEMENTS)

    ELSE_STATEMENT  go to state 127


State 78

   48 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_STATEMENT .

    $default  reduce using rule 48 (CONDITIONAL_STATEMENTS)


State 79

   32 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 80

   59 ASSIGNMENT_STATEMENT: A_EXPN EQ . A_EXPN

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 81

   89 OPR_PREC1: PLUS .

    $default  reduce using rule 89 (OPR_PREC1)


State 82

   90 OPR_PREC1: MINUS .

    $default  reduce using rule 90 (OPR_PREC1)


State 83

   92 OPR_PREC2: MUL .

    $default  reduce using rule 92 (OPR_PREC2)


State 84

   91 OPR_PREC2: DIV .

    $default  reduce using rule 91 (OPR_PREC2)


State 85

   94 OPR_PREC2: MOD .

    $default  reduce using rule 94 (OPR_PREC2)


State 86

   93 OPR_PREC2: EXP .

    $default  reduce using rule 93 (OPR_PREC2)


State 87

   87 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 87 (UNARY_OPERATORS)


State 88

   88 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 88 (UNARY_OPERATORS)


State 89

   86 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS .

    $default  reduce using rule 86 (INCR_DCR_EXPN)


State 90

   75 A_EXPN: A_EXPN OPR_PREC1 . A_EXPN

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 129
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 91

   76 A_EXPN: A_EXPN OPR_PREC2 . A_EXPN

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 130
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 92

   84 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . A_EXPN RSQRB

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 131
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 93

   34 PROGRAM_STATEMENTS: INCR_DCR_EXPN SC .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)


State 94

   22 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 22 (PTR_DEPTH)


State 95

   26 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 132


State 96

   15 VAR_LIST: VAR COMA . VAR_LIST

    MUL  shift, and go to state 52
    VAR  shift, and go to state 53

    VAR_LIST           go to state 133
    PTR_VAR            go to state 55
    PTR_DEPTH          go to state 56
    ARRAY_DECLARATION  go to state 57


State 97

   24 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   25 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 134

    $default  reduce using rule 24 (ARRAY_DECLARATION)


State 98

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 14 (DECLARATION_STATEMENTS)


State 99

   17 VAR_LIST: PTR_VAR COMA . VAR_LIST

    MUL  shift, and go to state 52
    VAR  shift, and go to state 53

    VAR_LIST           go to state 135
    PTR_VAR            go to state 55
    PTR_DEPTH          go to state 56
    ARRAY_DECLARATION  go to state 57


State 100

   21 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 21 (PTR_VAR)


State 101

   16 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    MUL  shift, and go to state 52
    VAR  shift, and go to state 53

    VAR_LIST           go to state 136
    PTR_VAR            go to state 55
    PTR_DEPTH          go to state 56
    ARRAY_DECLARATION  go to state 57


State 102

   64 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 137


State 103

   62 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   65              | LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 138
    AMPER  shift, and go to state 106
    OR     shift, and go to state 107

    LOGICAL_OPERATOR  go to state 108


State 104

   60 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   64 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 102
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN1  go to state 139
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 105

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    QMARK  shift, and go to state 140


State 106

   73 LOGICAL_OPERATOR: AMPER . AMPER

    AMPER  shift, and go to state 141


State 107

   74 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 74 (LOGICAL_OPERATOR)


State 108

   62 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 102
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN1  go to state 142
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 109

   77 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 77 (A_EXPN)


State 110

   67 COMP_OPERATOR: ET .

    $default  reduce using rule 67 (COMP_OPERATOR)


State 111

   68 COMP_OPERATOR: GT .

    $default  reduce using rule 68 (COMP_OPERATOR)


State 112

   69 COMP_OPERATOR: LT .

    $default  reduce using rule 69 (COMP_OPERATOR)


State 113

   70 COMP_OPERATOR: GTE .

    $default  reduce using rule 70 (COMP_OPERATOR)


State 114

   71 COMP_OPERATOR: LTE .

    $default  reduce using rule 71 (COMP_OPERATOR)


State 115

   72 COMP_OPERATOR: NE .

    $default  reduce using rule 72 (COMP_OPERATOR)


State 116

   66 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 143
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 117

   52 IF_STATEMENT: IF LB LOGICAL_EXPN . RB LCB $@9 BODY2 RCB

    RB  shift, and go to state 144


State 118

   66 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    ET      shift, and go to state 110
    GT      shift, and go to state 111
    LT      shift, and go to state 112
    GTE     shift, and go to state 113
    LTE     shift, and go to state 114
    NE      shift, and go to state 115
    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    COMP_OPERATOR    go to state 116
    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 119

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT . SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    SC  shift, and go to state 145


State 120

   44 PROGRAM_STATEMENTS: DO LCB $@6 . BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 146
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 121

   41 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB $@5 BODY2 RCB

    RB  shift, and go to state 147


State 122

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   77       | LB A_EXPN . RB
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 109
    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 123

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   85 ARRAY_ACCESS: VAR LSQRB A_EXPN . RSQRB
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 148
    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 124

   54 ELSE_IF_STATEMENT: ELSE_IF LB . LOGICAL_EXPN RB LCB $@10 BODY2 RCB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 59
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN   go to state 149
    LOGICAL_EXPN1  go to state 61
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 125

   58 ELSE_STATEMENT: ELSE LCB . $@12 BODY2 RCB

    $default  reduce using rule 57 ($@12)

    $@12  go to state 150


State 126

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF . LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB

    LB  shift, and go to state 151


State 127

   50 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_IF_STATEMENT ELSE_STATEMENT .

    $default  reduce using rule 50 (CONDITIONAL_STATEMENTS)


State 128

   59 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN .
   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    $default  reduce using rule 59 (ASSIGNMENT_STATEMENT)

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 129

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   75       | A_EXPN OPR_PREC1 A_EXPN .
   76       | A_EXPN . OPR_PREC2 A_EXPN
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    PLUS      [reduce using rule 75 (A_EXPN)]
    MINUS     [reduce using rule 75 (A_EXPN)]
    MUL       [reduce using rule 75 (A_EXPN)]
    DIV       [reduce using rule 75 (A_EXPN)]
    MOD       [reduce using rule 75 (A_EXPN)]
    EXP       [reduce using rule 75 (A_EXPN)]
    UPLUS     [reduce using rule 75 (A_EXPN)]
    UMINUS    [reduce using rule 75 (A_EXPN)]
    $default  reduce using rule 75 (A_EXPN)

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 130

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   76       | A_EXPN OPR_PREC2 A_EXPN .
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    PLUS      [reduce using rule 76 (A_EXPN)]
    MINUS     [reduce using rule 76 (A_EXPN)]
    MUL       [reduce using rule 76 (A_EXPN)]
    DIV       [reduce using rule 76 (A_EXPN)]
    MOD       [reduce using rule 76 (A_EXPN)]
    EXP       [reduce using rule 76 (A_EXPN)]
    UPLUS     [reduce using rule 76 (A_EXPN)]
    UMINUS    [reduce using rule 76 (A_EXPN)]
    $default  reduce using rule 76 (A_EXPN)

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 131

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   84 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN . RSQRB
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 152
    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 132

   26 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 153


State 133

   15 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 134

   25 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 154


State 135

   17 VAR_LIST: PTR_VAR COMA VAR_LIST .

    $default  reduce using rule 17 (VAR_LIST)


State 136

   16 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 137

   64 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 102
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN1  go to state 155
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 138

   65 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 65 (LOGICAL_EXPN1)


State 139

   60 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   62 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   64              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 156
    AMPER  shift, and go to state 106
    OR     shift, and go to state 107

    LOGICAL_OPERATOR  go to state 108


State 140

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    LCB  shift, and go to state 157


State 141

   73 LOGICAL_OPERATOR: AMPER AMPER .

    $default  reduce using rule 73 (LOGICAL_OPERATOR)


State 142

   62 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   62              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AMPER  shift, and go to state 106
    OR     shift, and go to state 107

    AMPER     [reduce using rule 62 (LOGICAL_EXPN1)]
    OR        [reduce using rule 62 (LOGICAL_EXPN1)]
    $default  reduce using rule 62 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 108


State 143

   66 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    $default  reduce using rule 66 (LOGICAL_EXPN2)

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 144

   52 IF_STATEMENT: IF LB LOGICAL_EXPN RB . LCB $@9 BODY2 RCB

    LCB  shift, and go to state 158


State 145

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC . LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 59
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN   go to state 159
    LOGICAL_EXPN1  go to state 61
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 146

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 . RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 160


State 147

   41 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB $@5 BODY2 RCB

    LCB  shift, and go to state 161


State 148

   85 ARRAY_ACCESS: VAR LSQRB A_EXPN RSQRB .

    $default  reduce using rule 85 (ARRAY_ACCESS)


State 149

   54 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN . RB LCB $@10 BODY2 RCB

    RB  shift, and go to state 162


State 150

   58 ELSE_STATEMENT: ELSE LCB $@12 . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 163
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 151

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB . LOGICAL_EXPN RB LCB $@11 BODY2 RCB

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 59
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN   go to state 164
    LOGICAL_EXPN1  go to state 61
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 152

   84 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB .

    $default  reduce using rule 84 (ARRAY_ACCESS)


State 153

   26 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 26 (ARRAY_SIZE)


State 154

   25 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 165


State 155

   62 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   64              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 166
    AMPER  shift, and go to state 106
    OR     shift, and go to state 107

    LOGICAL_OPERATOR  go to state 108


State 156

   60 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   64 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 60 (LOGICAL_EXPN)
    RB        [reduce using rule 64 (LOGICAL_EXPN1)]
    SC        reduce using rule 60 (LOGICAL_EXPN)
    SC        [reduce using rule 64 (LOGICAL_EXPN1)]
    AMPER     reduce using rule 64 (LOGICAL_EXPN1)
    OR        reduce using rule 64 (LOGICAL_EXPN1)
    $default  reduce using rule 60 (LOGICAL_EXPN)


State 157

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    $default  reduce using rule 35 ($@2)

    $@2  go to state 167


State 158

   52 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB . $@9 BODY2 RCB

    $default  reduce using rule 51 ($@9)

    $@9  go to state 168


State 159

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN . SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    SC  shift, and go to state 169


State 160

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB . $@7 WHILE LB LOGICAL_EXPN RB SC

    $default  reduce using rule 43 ($@7)

    $@7  go to state 170


State 161

   41 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . $@5 BODY2 RCB

    $default  reduce using rule 40 ($@5)

    $@5  go to state 171


State 162

   54 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB . LCB $@10 BODY2 RCB

    LCB  shift, and go to state 172


State 163

   58 ELSE_STATEMENT: ELSE LCB $@12 BODY2 . RCB

    RCB  shift, and go to state 173


State 164

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN . RB LCB $@11 BODY2 RCB

    RB  shift, and go to state 174


State 165

   25 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 25 (ARRAY_SIZE)


State 166

   64 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 64 (LOGICAL_EXPN1)


State 167

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 . BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 175
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 168

   52 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 176
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 169

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC . INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB      shift, and go to state 69
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    A_EXPN         go to state 177
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 178


State 170

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 179


State 171

   41 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 180
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 172

   54 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB . $@10 BODY2 RCB

    $default  reduce using rule 53 ($@10)

    $@10  go to state 181


State 173

   58 ELSE_STATEMENT: ELSE LCB $@12 BODY2 RCB .

    $default  reduce using rule 58 (ELSE_STATEMENT)


State 174

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB . LCB $@11 BODY2 RCB

    LCB  shift, and go to state 182


State 175

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 . RCB $@3 COLON LCB $@4 BODY2 RCB

    RCB  shift, and go to state 183


State 176

   52 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 BODY2 . RCB

    RCB  shift, and go to state 184


State 177

   75 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   76       | A_EXPN . OPR_PREC2 A_EXPN
   86 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    MUL     shift, and go to state 83
    DIV     shift, and go to state 84
    MOD     shift, and go to state 85
    EXP     shift, and go to state 86
    UPLUS   shift, and go to state 87
    UMINUS  shift, and go to state 88

    UNARY_OPERATORS  go to state 89
    OPR_PREC1        go to state 90
    OPR_PREC2        go to state 91


State 178

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN . RB LCB $@8 BODY2 RCB
   78 A_EXPN: INCR_DCR_EXPN .

    RB  shift, and go to state 185

    $default  reduce using rule 78 (A_EXPN)


State 179

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 186


State 180

   41 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 . RCB

    RCB  shift, and go to state 187


State 181

   54 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 188
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 182

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB . $@11 BODY2 RCB

    $default  reduce using rule 55 ($@11)

    $@11  go to state 189


State 183

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB . $@3 COLON LCB $@4 BODY2 RCB

    $default  reduce using rule 36 ($@3)

    $@3  go to state 190


State 184

   52 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 BODY2 RCB .

    $default  reduce using rule 52 (IF_STATEMENT)


State 185

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB . LCB $@8 BODY2 RCB

    LCB  shift, and go to state 191


State 186

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 58
    AMPER   shift, and go to state 39
    NOT     shift, and go to state 59
    MUL     shift, and go to state 40
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    LOGICAL_EXPN   go to state 192
    LOGICAL_EXPN1  go to state 61
    LOGICAL_EXPN2  go to state 62
    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 50
    INCR_DCR_EXPN  go to state 64


State 187

   41 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB .

    $default  reduce using rule 41 (PROGRAM_STATEMENTS)


State 188

   54 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 BODY2 . RCB

    RCB  shift, and go to state 193


State 189

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 194
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 190

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 . COLON LCB $@4 BODY2 RCB

    COLON  shift, and go to state 195


State 191

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB . $@8 BODY2 RCB

    $default  reduce using rule 45 ($@8)

    $@8  go to state 196


State 192

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 197


State 193

   54 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 BODY2 RCB .

    $default  reduce using rule 54 (ELSE_IF_STATEMENT)


State 194

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 . RCB

    RCB  shift, and go to state 198


State 195

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON . LCB $@4 BODY2 RCB

    LCB  shift, and go to state 199


State 196

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 200
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 197

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 201


State 198

   56 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB .

    $default  reduce using rule 56 (ELSE_IF_STATEMENT)


State 199

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB . $@4 BODY2 RCB

    $default  reduce using rule 37 ($@4)

    $@4  go to state 202


State 200

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 . RCB

    RCB  shift, and go to state 203


State 201

   44 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 44 (PROGRAM_STATEMENTS)


State 202

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    AMPER   shift, and go to state 39
    MUL     shift, and go to state 40
    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28
    VAR     shift, and go to state 41
    NUMBER  shift, and go to state 42

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 204
    DECLARATION_STATEMENTS  go to state 44
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 45
    CONDITIONAL_STATEMENTS  go to state 46
    IF_STATEMENT            go to state 47
    ASSIGNMENT_STATEMENT    go to state 48
    A_EXPN                  go to state 49
    ARRAY_ACCESS            go to state 50
    INCR_DCR_EXPN           go to state 51


State 203

   46 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB .

    $default  reduce using rule 46 (PROGRAM_STATEMENTS)


State 204

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 . RCB

    RCB  shift, and go to state 205


State 205

   38 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)
