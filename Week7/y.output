State 133 conflicts: 8 shift/reduce
State 134 conflicts: 8 shift/reduce
State 148 conflicts: 2 shift/reduce
State 162 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB

    3 HEADERS: HEADER HEADERS
    4        | HEADER

    5 HEADER: HASH INCLUDE LT HEADER_FILE GT
    6       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    7 HEADER2: HEADER2 VAR DIV
    8        | DIV
    9        | %empty

   10 BODY: DECLARATION_STATEMENTS BODY2

   11 BODY2: %empty
   12      | DECLARATION_STATEMENTS BODY2
   13      | PROGRAM_STATEMENTS BODY2

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   15 VAR_LIST: VAR COMA VAR_LIST
   16         | ARRAY_DECLARATION COMA VAR_LIST
   17         | PTR_VAR COMA VAR_LIST
   18         | VAR_LIST2 COMA VAR_LIST
   19         | VAR
   20         | ARRAY_DECLARATION
   21         | PTR_VAR
   22         | VAR_LIST2

   23 VAR_LIST2: VAR EQ A_EXPN

   24 PTR_VAR: PTR_DEPTH VAR

   25 PTR_DEPTH: MUL PTR_DEPTH
   26          | MUL

   27 ARRAY_DECLARATION: VAR ARRAY_SIZE

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB INT_NUMBER RSQRB
   29           | LSQRB INT_NUMBER RSQRB

   30 MAIN_TYPE: INT

   31 DATA_TYPE: INT
   32          | CHAR
   33          | FLOAT
   34          | DOUBLE

   35 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC
   36                   | SC
   37                   | INCR_DCR_EXPN SC

   38 $@2: %empty

   39 $@3: %empty

   40 $@4: %empty

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB
   42                   | CONDITIONAL_STATEMENTS

   43 $@5: %empty

   44 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB

   45 $@6: %empty

   46 $@7: %empty

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

   48 $@8: %empty

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

   50 CONDITIONAL_STATEMENTS: IF_STATEMENT
   51                       | IF_STATEMENT ELSE_STATEMENT
   52                       | IF_STATEMENT ELSE_IF_STATEMENT
   53                       | IF_STATEMENT ELSE_IF_STATEMENT ELSE_STATEMENT

   54 $@9: %empty

   55 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 BODY2 RCB

   56 $@10: %empty

   57 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 BODY2 RCB

   58 $@11: %empty

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB

   60 $@12: %empty

   61 ELSE_STATEMENT: ELSE LCB $@12 BODY2 RCB

   62 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN

   63 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   64             | LOGICAL_EXPN1

   65 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   66              | LOGICAL_EXPN2
   67              | NOT LB LOGICAL_EXPN1 RB
   68              | LB LOGICAL_EXPN1 RB

   69 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   70 COMP_OPERATOR: ET
   71              | GT
   72              | LT
   73              | GTE
   74              | LTE
   75              | NE

   76 LOGICAL_OPERATOR: AMPER AMPER
   77                 | OR

   78 A_EXPN: A_EXPN OPR_PREC1 A_EXPN
   79       | A_EXPN OPR_PREC2 A_EXPN
   80       | LB A_EXPN RB
   81       | INCR_DCR_EXPN
   82       | VAR
   83       | INT_NUMBER
   84       | FLOAT_NUMBER
   85       | MUL A_EXPN
   86       | ARRAY_ACCESS
   87       | AMPER A_EXPN

   88 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB
   89             | VAR LSQRB A_EXPN RSQRB

   90 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS

   91 UNARY_OPERATORS: UPLUS
   92                | UMINUS

   93 OPR_PREC1: PLUS
   94          | MINUS

   95 OPR_PREC2: DIV
   96          | MUL
   97          | EXP
   98          | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 5 6
    INCLUDE (259) 5 6
    HEADER_FILE (260) 5 6
    MAIN (261) 2
    LB (262) 2 41 44 47 49 55 57 59 63 67 68 80
    RB (263) 2 41 44 47 49 55 57 59 63 67 68 80
    LCB (264) 2 41 44 47 49 55 57 59 61
    RCB (265) 2 41 44 47 49 55 57 59 61
    LSQRB (266) 28 29 88 89
    RSQRB (267) 28 29 88 89
    SC (268) 14 35 36 37 47 49
    COLON (269) 41
    QMARK (270) 41
    COMA (271) 15 16 17 18
    IF (272) 55
    ELSE_IF (273) 57 59
    ELSE (274) 61
    FOR (275) 49
    DO (276) 47
    WHILE (277) 44 47
    ET (278) 70
    EQ (279) 23 62
    GT (280) 5 71
    LT (281) 5 72
    GTE (282) 73
    LTE (283) 74
    NE (284) 75
    AMPER (285) 76 87
    OR (286) 77
    NOT (287) 63 67
    DQUOTE (288) 6
    PLUS (289) 93
    MINUS (290) 94
    MUL (291) 25 26 85 96
    DIV (292) 7 8 95
    MOD (293) 98
    EXP (294) 97
    UPLUS (295) 91
    UMINUS (296) 92
    INT <data_type> (297) 30 31
    CHAR <data_type> (298) 32
    FLOAT <data_type> (299) 33
    DOUBLE <data_type> (300) 34
    VAR <var_name> (301) 7 15 19 23 24 27 82 89
    INT_NUMBER <integer_val> (302) 28 29 83
    FLOAT_NUMBER <float_val> (303) 84


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    prm (50)
        on left: 2
        on right: 0
    $@1 (51)
        on left: 1
        on right: 2
    HEADERS (52)
        on left: 3 4
        on right: 2 3
    HEADER (53)
        on left: 5 6
        on right: 3 4
    HEADER2 (54)
        on left: 7 8 9
        on right: 6 7
    BODY (55)
        on left: 10
        on right: 2
    BODY2 (56)
        on left: 11 12 13
        on right: 10 12 13 41 44 47 49 55 57 59 61
    DECLARATION_STATEMENTS (57)
        on left: 14
        on right: 10 12
    VAR_LIST (58)
        on left: 15 16 17 18 19 20 21 22
        on right: 14 15 16 17 18
    VAR_LIST2 (59)
        on left: 23
        on right: 18 22
    PTR_VAR (60)
        on left: 24
        on right: 17 21
    PTR_DEPTH (61)
        on left: 25 26
        on right: 24 25
    ARRAY_DECLARATION (62)
        on left: 27
        on right: 16 20
    ARRAY_SIZE (63)
        on left: 28 29
        on right: 27 28
    MAIN_TYPE (64)
        on left: 30
        on right: 2
    DATA_TYPE <data_type> (65)
        on left: 31 32 33 34
        on right: 14
    PROGRAM_STATEMENTS (66)
        on left: 35 36 37 41 42 44 47 49
        on right: 13
    $@2 (67)
        on left: 38
        on right: 41
    $@3 (68)
        on left: 39
        on right: 41
    $@4 (69)
        on left: 40
        on right: 41
    $@5 (70)
        on left: 43
        on right: 44
    $@6 (71)
        on left: 45
        on right: 47
    $@7 (72)
        on left: 46
        on right: 47
    $@8 (73)
        on left: 48
        on right: 49
    CONDITIONAL_STATEMENTS (74)
        on left: 50 51 52 53
        on right: 42
    IF_STATEMENT (75)
        on left: 55
        on right: 50 51 52 53
    $@9 (76)
        on left: 54
        on right: 55
    ELSE_IF_STATEMENT (77)
        on left: 57 59
        on right: 52 53 59
    $@10 (78)
        on left: 56
        on right: 57
    $@11 (79)
        on left: 58
        on right: 59
    ELSE_STATEMENT (80)
        on left: 61
        on right: 51 53
    $@12 (81)
        on left: 60
        on right: 61
    ASSIGNMENT_STATEMENT (82)
        on left: 62
        on right: 35 49
    LOGICAL_EXPN (83)
        on left: 63 64
        on right: 41 44 47 49 55 57 59
    LOGICAL_EXPN1 (84)
        on left: 65 66 67 68
        on right: 63 64 65 67 68
    LOGICAL_EXPN2 (85)
        on left: 69
        on right: 66
    COMP_OPERATOR (86)
        on left: 70 71 72 73 74 75
        on right: 69
    LOGICAL_OPERATOR (87)
        on left: 76 77
        on right: 65
    A_EXPN <EXPN_type> (88)
        on left: 78 79 80 81 82 83 84 85 86 87
        on right: 23 62 69 78 79 80 85 87 88 89 90
    ARRAY_ACCESS <EXPN_type> (89)
        on left: 88 89
        on right: 86 88
    INCR_DCR_EXPN <EXPN_type> (90)
        on left: 90
        on right: 37 49 81
    UNARY_OPERATORS (91)
        on left: 91 92
        on right: 90
    OPR_PREC1 (92)
        on left: 93 94
        on right: 78
    OPR_PREC2 (93)
        on left: 95 96 97 98
        on right: 79


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    5 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    6       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    2 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    3 HEADERS: HEADER . HEADERS
    4        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 4 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    5 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    6       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   30 MAIN_TYPE: INT .

    $default  reduce using rule 30 (MAIN_TYPE)


State 8

    2 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB $@1 BODY RCB

    MAIN  shift, and go to state 12


State 9

    3 HEADERS: HEADER HEADERS .

    $default  reduce using rule 3 (HEADERS)


State 10

    5 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    6 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 9 (HEADER2)

    HEADER2  go to state 15


State 12

    2 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB $@1 BODY RCB

    LB  shift, and go to state 16


State 13

    5 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    8 HEADER2: DIV .

    $default  reduce using rule 8 (HEADER2)


State 15

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    7 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    2 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB $@1 BODY RCB

    RB  shift, and go to state 20


State 17

    5 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 5 (HEADER)


State 18

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    7 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    2 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB $@1 BODY RCB

    LCB  shift, and go to state 23


State 21

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 6 (HEADER)


State 22

    7 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 7 (HEADER2)


State 23

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . $@1 BODY RCB

    $default  reduce using rule 1 ($@1)

    $@1  go to state 24


State 24

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 . BODY RCB

    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28

    BODY                    go to state 29
    DECLARATION_STATEMENTS  go to state 30
    DATA_TYPE               go to state 31


State 25

   31 DATA_TYPE: INT .

    $default  reduce using rule 31 (DATA_TYPE)


State 26

   32 DATA_TYPE: CHAR .

    $default  reduce using rule 32 (DATA_TYPE)


State 27

   33 DATA_TYPE: FLOAT .

    $default  reduce using rule 33 (DATA_TYPE)


State 28

   34 DATA_TYPE: DOUBLE .

    $default  reduce using rule 34 (DATA_TYPE)


State 29

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY . RCB

    RCB  shift, and go to state 32


State 30

   10 BODY: DECLARATION_STATEMENTS . BODY2

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 44
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 31

   14 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    MUL  shift, and go to state 53
    VAR  shift, and go to state 54

    VAR_LIST           go to state 55
    VAR_LIST2          go to state 56
    PTR_VAR            go to state 57
    PTR_DEPTH          go to state 58
    ARRAY_DECLARATION  go to state 59


State 32

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB .

    $default  reduce using rule 2 (prm)


State 33

   41 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB
   80 A_EXPN: LB . A_EXPN RB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 61
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN   go to state 62
    LOGICAL_EXPN1  go to state 63
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 65
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 34

   36 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 35

   55 IF_STATEMENT: IF . LB LOGICAL_EXPN RB LCB $@9 BODY2 RCB

    LB  shift, and go to state 67


State 36

   49 PROGRAM_STATEMENTS: FOR . LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB  shift, and go to state 68


State 37

   47 PROGRAM_STATEMENTS: DO . LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 69


State 38

   44 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB

    LB  shift, and go to state 70


State 39

   87 A_EXPN: AMPER . A_EXPN

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 72
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 40

   85 A_EXPN: MUL . A_EXPN

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 73
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 41

   82 A_EXPN: VAR .
   89 ARRAY_ACCESS: VAR . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 74

    $default  reduce using rule 82 (A_EXPN)


State 42

   83 A_EXPN: INT_NUMBER .

    $default  reduce using rule 83 (A_EXPN)


State 43

   84 A_EXPN: FLOAT_NUMBER .

    $default  reduce using rule 84 (A_EXPN)


State 44

   10 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 10 (BODY)


State 45

   12 BODY2: DECLARATION_STATEMENTS . BODY2

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 75
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 46

   13 BODY2: PROGRAM_STATEMENTS . BODY2

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 76
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 47

   42 PROGRAM_STATEMENTS: CONDITIONAL_STATEMENTS .

    $default  reduce using rule 42 (PROGRAM_STATEMENTS)


State 48

   50 CONDITIONAL_STATEMENTS: IF_STATEMENT .
   51                       | IF_STATEMENT . ELSE_STATEMENT
   52                       | IF_STATEMENT . ELSE_IF_STATEMENT
   53                       | IF_STATEMENT . ELSE_IF_STATEMENT ELSE_STATEMENT

    ELSE_IF  shift, and go to state 77
    ELSE     shift, and go to state 78

    $default  reduce using rule 50 (CONDITIONAL_STATEMENTS)

    ELSE_IF_STATEMENT  go to state 79
    ELSE_STATEMENT     go to state 80


State 49

   35 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT . SC

    SC  shift, and go to state 81


State 50

   62 ASSIGNMENT_STATEMENT: A_EXPN . EQ A_EXPN
   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EQ      shift, and go to state 82
    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 51

   86 A_EXPN: ARRAY_ACCESS .
   88 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 94

    $default  reduce using rule 86 (A_EXPN)


State 52

   37 PROGRAM_STATEMENTS: INCR_DCR_EXPN . SC
   81 A_EXPN: INCR_DCR_EXPN .

    SC  shift, and go to state 95

    $default  reduce using rule 81 (A_EXPN)


State 53

   25 PTR_DEPTH: MUL . PTR_DEPTH
   26          | MUL .

    MUL  shift, and go to state 53

    $default  reduce using rule 26 (PTR_DEPTH)

    PTR_DEPTH  go to state 96


State 54

   15 VAR_LIST: VAR . COMA VAR_LIST
   19         | VAR .
   23 VAR_LIST2: VAR . EQ A_EXPN
   27 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 97
    COMA   shift, and go to state 98
    EQ     shift, and go to state 99

    $default  reduce using rule 19 (VAR_LIST)

    ARRAY_SIZE  go to state 100


State 55

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 101


State 56

   18 VAR_LIST: VAR_LIST2 . COMA VAR_LIST
   22         | VAR_LIST2 .

    COMA  shift, and go to state 102

    $default  reduce using rule 22 (VAR_LIST)


State 57

   17 VAR_LIST: PTR_VAR . COMA VAR_LIST
   21         | PTR_VAR .

    COMA  shift, and go to state 103

    $default  reduce using rule 21 (VAR_LIST)


State 58

   24 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 104


State 59

   16 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   20         | ARRAY_DECLARATION .

    COMA  shift, and go to state 105

    $default  reduce using rule 20 (VAR_LIST)


State 60

   68 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   80 A_EXPN: LB . A_EXPN RB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 106
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN1  go to state 107
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 65
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 61

   63 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   67 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 108


State 62

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    RB  shift, and go to state 109


State 63

   64 LOGICAL_EXPN: LOGICAL_EXPN1 .
   65 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AMPER  shift, and go to state 110
    OR     shift, and go to state 111

    $default  reduce using rule 64 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 112


State 64

   66 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 66 (LOGICAL_EXPN1)


State 65

   69 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   80       | LB A_EXPN . RB
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 113
    ET      shift, and go to state 114
    GT      shift, and go to state 115
    LT      shift, and go to state 116
    GTE     shift, and go to state 117
    LTE     shift, and go to state 118
    NE      shift, and go to state 119
    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    COMP_OPERATOR    go to state 120
    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 66

   81 A_EXPN: INCR_DCR_EXPN .

    $default  reduce using rule 81 (A_EXPN)


State 67

   55 IF_STATEMENT: IF LB . LOGICAL_EXPN RB LCB $@9 BODY2 RCB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 61
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN   go to state 121
    LOGICAL_EXPN1  go to state 63
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 68

   49 PROGRAM_STATEMENTS: FOR LB . ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    ASSIGNMENT_STATEMENT  go to state 123
    A_EXPN                go to state 50
    ARRAY_ACCESS          go to state 51
    INCR_DCR_EXPN         go to state 66


State 69

   47 PROGRAM_STATEMENTS: DO LCB . $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    $default  reduce using rule 45 ($@6)

    $@6  go to state 124


State 70

   44 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB $@5 BODY2 RCB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 61
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN   go to state 125
    LOGICAL_EXPN1  go to state 63
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 71

   80 A_EXPN: LB . A_EXPN RB

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 126
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 72

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   87       | AMPER A_EXPN .
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    $default  reduce using rule 87 (A_EXPN)

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 73

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   85       | MUL A_EXPN .
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    $default  reduce using rule 85 (A_EXPN)

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 74

   89 ARRAY_ACCESS: VAR LSQRB . A_EXPN RSQRB

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 127
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 75

   12 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 76

   13 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 13 (BODY2)


State 77

   57 ELSE_IF_STATEMENT: ELSE_IF . LB LOGICAL_EXPN RB LCB $@10 BODY2 RCB

    LB  shift, and go to state 128


State 78

   61 ELSE_STATEMENT: ELSE . LCB $@12 BODY2 RCB

    LCB  shift, and go to state 129


State 79

   52 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_IF_STATEMENT .
   53                       | IF_STATEMENT ELSE_IF_STATEMENT . ELSE_STATEMENT
   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT . ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB

    ELSE_IF  shift, and go to state 130
    ELSE     shift, and go to state 78

    $default  reduce using rule 52 (CONDITIONAL_STATEMENTS)

    ELSE_STATEMENT  go to state 131


State 80

   51 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_STATEMENT .

    $default  reduce using rule 51 (CONDITIONAL_STATEMENTS)


State 81

   35 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC .

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 82

   62 ASSIGNMENT_STATEMENT: A_EXPN EQ . A_EXPN

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 132
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 83

   93 OPR_PREC1: PLUS .

    $default  reduce using rule 93 (OPR_PREC1)


State 84

   94 OPR_PREC1: MINUS .

    $default  reduce using rule 94 (OPR_PREC1)


State 85

   96 OPR_PREC2: MUL .

    $default  reduce using rule 96 (OPR_PREC2)


State 86

   95 OPR_PREC2: DIV .

    $default  reduce using rule 95 (OPR_PREC2)


State 87

   98 OPR_PREC2: MOD .

    $default  reduce using rule 98 (OPR_PREC2)


State 88

   97 OPR_PREC2: EXP .

    $default  reduce using rule 97 (OPR_PREC2)


State 89

   91 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 91 (UNARY_OPERATORS)


State 90

   92 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 92 (UNARY_OPERATORS)


State 91

   90 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS .

    $default  reduce using rule 90 (INCR_DCR_EXPN)


State 92

   78 A_EXPN: A_EXPN OPR_PREC1 . A_EXPN

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 133
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 93

   79 A_EXPN: A_EXPN OPR_PREC2 . A_EXPN

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 134
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 94

   88 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . A_EXPN RSQRB

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 135
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 95

   37 PROGRAM_STATEMENTS: INCR_DCR_EXPN SC .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 96

   25 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 25 (PTR_DEPTH)


State 97

   29 ARRAY_SIZE: LSQRB . INT_NUMBER RSQRB

    INT_NUMBER  shift, and go to state 136


State 98

   15 VAR_LIST: VAR COMA . VAR_LIST

    MUL  shift, and go to state 53
    VAR  shift, and go to state 54

    VAR_LIST           go to state 137
    VAR_LIST2          go to state 56
    PTR_VAR            go to state 57
    PTR_DEPTH          go to state 58
    ARRAY_DECLARATION  go to state 59


State 99

   23 VAR_LIST2: VAR EQ . A_EXPN

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 138
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 100

   27 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   28 ARRAY_SIZE: ARRAY_SIZE . LSQRB INT_NUMBER RSQRB

    LSQRB  shift, and go to state 139

    $default  reduce using rule 27 (ARRAY_DECLARATION)


State 101

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 14 (DECLARATION_STATEMENTS)


State 102

   18 VAR_LIST: VAR_LIST2 COMA . VAR_LIST

    MUL  shift, and go to state 53
    VAR  shift, and go to state 54

    VAR_LIST           go to state 140
    VAR_LIST2          go to state 56
    PTR_VAR            go to state 57
    PTR_DEPTH          go to state 58
    ARRAY_DECLARATION  go to state 59


State 103

   17 VAR_LIST: PTR_VAR COMA . VAR_LIST

    MUL  shift, and go to state 53
    VAR  shift, and go to state 54

    VAR_LIST           go to state 141
    VAR_LIST2          go to state 56
    PTR_VAR            go to state 57
    PTR_DEPTH          go to state 58
    ARRAY_DECLARATION  go to state 59


State 104

   24 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 24 (PTR_VAR)


State 105

   16 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    MUL  shift, and go to state 53
    VAR  shift, and go to state 54

    VAR_LIST           go to state 142
    VAR_LIST2          go to state 56
    PTR_VAR            go to state 57
    PTR_DEPTH          go to state 58
    ARRAY_DECLARATION  go to state 59


State 106

   67 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 143


State 107

   65 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   68              | LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 144
    AMPER  shift, and go to state 110
    OR     shift, and go to state 111

    LOGICAL_OPERATOR  go to state 112


State 108

   63 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   67 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 106
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN1  go to state 145
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 109

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    QMARK  shift, and go to state 146


State 110

   76 LOGICAL_OPERATOR: AMPER . AMPER

    AMPER  shift, and go to state 147


State 111

   77 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 77 (LOGICAL_OPERATOR)


State 112

   65 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 106
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN1  go to state 148
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 113

   80 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 80 (A_EXPN)


State 114

   70 COMP_OPERATOR: ET .

    $default  reduce using rule 70 (COMP_OPERATOR)


State 115

   71 COMP_OPERATOR: GT .

    $default  reduce using rule 71 (COMP_OPERATOR)


State 116

   72 COMP_OPERATOR: LT .

    $default  reduce using rule 72 (COMP_OPERATOR)


State 117

   73 COMP_OPERATOR: GTE .

    $default  reduce using rule 73 (COMP_OPERATOR)


State 118

   74 COMP_OPERATOR: LTE .

    $default  reduce using rule 74 (COMP_OPERATOR)


State 119

   75 COMP_OPERATOR: NE .

    $default  reduce using rule 75 (COMP_OPERATOR)


State 120

   69 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 149
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 121

   55 IF_STATEMENT: IF LB LOGICAL_EXPN . RB LCB $@9 BODY2 RCB

    RB  shift, and go to state 150


State 122

   69 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    ET      shift, and go to state 114
    GT      shift, and go to state 115
    LT      shift, and go to state 116
    GTE     shift, and go to state 117
    LTE     shift, and go to state 118
    NE      shift, and go to state 119
    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    COMP_OPERATOR    go to state 120
    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 123

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT . SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    SC  shift, and go to state 151


State 124

   47 PROGRAM_STATEMENTS: DO LCB $@6 . BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 152
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 125

   44 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB $@5 BODY2 RCB

    RB  shift, and go to state 153


State 126

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   80       | LB A_EXPN . RB
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 113
    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 127

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   89 ARRAY_ACCESS: VAR LSQRB A_EXPN . RSQRB
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 154
    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 128

   57 ELSE_IF_STATEMENT: ELSE_IF LB . LOGICAL_EXPN RB LCB $@10 BODY2 RCB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 61
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN   go to state 155
    LOGICAL_EXPN1  go to state 63
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 129

   61 ELSE_STATEMENT: ELSE LCB . $@12 BODY2 RCB

    $default  reduce using rule 60 ($@12)

    $@12  go to state 156


State 130

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF . LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB

    LB  shift, and go to state 157


State 131

   53 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_IF_STATEMENT ELSE_STATEMENT .

    $default  reduce using rule 53 (CONDITIONAL_STATEMENTS)


State 132

   62 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN .
   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    $default  reduce using rule 62 (ASSIGNMENT_STATEMENT)

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 133

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   78       | A_EXPN OPR_PREC1 A_EXPN .
   79       | A_EXPN . OPR_PREC2 A_EXPN
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    PLUS      [reduce using rule 78 (A_EXPN)]
    MINUS     [reduce using rule 78 (A_EXPN)]
    MUL       [reduce using rule 78 (A_EXPN)]
    DIV       [reduce using rule 78 (A_EXPN)]
    MOD       [reduce using rule 78 (A_EXPN)]
    EXP       [reduce using rule 78 (A_EXPN)]
    UPLUS     [reduce using rule 78 (A_EXPN)]
    UMINUS    [reduce using rule 78 (A_EXPN)]
    $default  reduce using rule 78 (A_EXPN)

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 134

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   79       | A_EXPN OPR_PREC2 A_EXPN .
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    PLUS      [reduce using rule 79 (A_EXPN)]
    MINUS     [reduce using rule 79 (A_EXPN)]
    MUL       [reduce using rule 79 (A_EXPN)]
    DIV       [reduce using rule 79 (A_EXPN)]
    MOD       [reduce using rule 79 (A_EXPN)]
    EXP       [reduce using rule 79 (A_EXPN)]
    UPLUS     [reduce using rule 79 (A_EXPN)]
    UMINUS    [reduce using rule 79 (A_EXPN)]
    $default  reduce using rule 79 (A_EXPN)

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 135

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   88 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN . RSQRB
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 158
    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 136

   29 ARRAY_SIZE: LSQRB INT_NUMBER . RSQRB

    RSQRB  shift, and go to state 159


State 137

   15 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 138

   23 VAR_LIST2: VAR EQ A_EXPN .
   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    $default  reduce using rule 23 (VAR_LIST2)

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 139

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB . INT_NUMBER RSQRB

    INT_NUMBER  shift, and go to state 160


State 140

   18 VAR_LIST: VAR_LIST2 COMA VAR_LIST .

    $default  reduce using rule 18 (VAR_LIST)


State 141

   17 VAR_LIST: PTR_VAR COMA VAR_LIST .

    $default  reduce using rule 17 (VAR_LIST)


State 142

   16 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 143

   67 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 106
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN1  go to state 161
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 144

   68 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 68 (LOGICAL_EXPN1)


State 145

   63 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   65 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   67              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 162
    AMPER  shift, and go to state 110
    OR     shift, and go to state 111

    LOGICAL_OPERATOR  go to state 112


State 146

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    LCB  shift, and go to state 163


State 147

   76 LOGICAL_OPERATOR: AMPER AMPER .

    $default  reduce using rule 76 (LOGICAL_OPERATOR)


State 148

   65 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   65              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AMPER  shift, and go to state 110
    OR     shift, and go to state 111

    AMPER     [reduce using rule 65 (LOGICAL_EXPN1)]
    OR        [reduce using rule 65 (LOGICAL_EXPN1)]
    $default  reduce using rule 65 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 112


State 149

   69 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    $default  reduce using rule 69 (LOGICAL_EXPN2)

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 150

   55 IF_STATEMENT: IF LB LOGICAL_EXPN RB . LCB $@9 BODY2 RCB

    LCB  shift, and go to state 164


State 151

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC . LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 61
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN   go to state 165
    LOGICAL_EXPN1  go to state 63
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 152

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 . RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 166


State 153

   44 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB $@5 BODY2 RCB

    LCB  shift, and go to state 167


State 154

   89 ARRAY_ACCESS: VAR LSQRB A_EXPN RSQRB .

    $default  reduce using rule 89 (ARRAY_ACCESS)


State 155

   57 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN . RB LCB $@10 BODY2 RCB

    RB  shift, and go to state 168


State 156

   61 ELSE_STATEMENT: ELSE LCB $@12 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 169
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 157

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB . LOGICAL_EXPN RB LCB $@11 BODY2 RCB

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 61
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN   go to state 170
    LOGICAL_EXPN1  go to state 63
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 158

   88 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB .

    $default  reduce using rule 88 (ARRAY_ACCESS)


State 159

   29 ARRAY_SIZE: LSQRB INT_NUMBER RSQRB .

    $default  reduce using rule 29 (ARRAY_SIZE)


State 160

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB INT_NUMBER . RSQRB

    RSQRB  shift, and go to state 171


State 161

   65 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   67              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 172
    AMPER  shift, and go to state 110
    OR     shift, and go to state 111

    LOGICAL_OPERATOR  go to state 112


State 162

   63 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   67 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 63 (LOGICAL_EXPN)
    RB        [reduce using rule 67 (LOGICAL_EXPN1)]
    SC        reduce using rule 63 (LOGICAL_EXPN)
    SC        [reduce using rule 67 (LOGICAL_EXPN1)]
    AMPER     reduce using rule 67 (LOGICAL_EXPN1)
    OR        reduce using rule 67 (LOGICAL_EXPN1)
    $default  reduce using rule 63 (LOGICAL_EXPN)


State 163

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    $default  reduce using rule 38 ($@2)

    $@2  go to state 173


State 164

   55 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB . $@9 BODY2 RCB

    $default  reduce using rule 54 ($@9)

    $@9  go to state 174


State 165

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN . SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    SC  shift, and go to state 175


State 166

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB . $@7 WHILE LB LOGICAL_EXPN RB SC

    $default  reduce using rule 46 ($@7)

    $@7  go to state 176


State 167

   44 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . $@5 BODY2 RCB

    $default  reduce using rule 43 ($@5)

    $@5  go to state 177


State 168

   57 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB . LCB $@10 BODY2 RCB

    LCB  shift, and go to state 178


State 169

   61 ELSE_STATEMENT: ELSE LCB $@12 BODY2 . RCB

    RCB  shift, and go to state 179


State 170

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN . RB LCB $@11 BODY2 RCB

    RB  shift, and go to state 180


State 171

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB INT_NUMBER RSQRB .

    $default  reduce using rule 28 (ARRAY_SIZE)


State 172

   67 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 67 (LOGICAL_EXPN1)


State 173

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 . BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 181
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 174

   55 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 182
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 175

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC . INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB            shift, and go to state 71
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    A_EXPN         go to state 183
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 184


State 176

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 185


State 177

   44 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 186
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 178

   57 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB . $@10 BODY2 RCB

    $default  reduce using rule 56 ($@10)

    $@10  go to state 187


State 179

   61 ELSE_STATEMENT: ELSE LCB $@12 BODY2 RCB .

    $default  reduce using rule 61 (ELSE_STATEMENT)


State 180

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB . LCB $@11 BODY2 RCB

    LCB  shift, and go to state 188


State 181

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 . RCB $@3 COLON LCB $@4 BODY2 RCB

    RCB  shift, and go to state 189


State 182

   55 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 BODY2 . RCB

    RCB  shift, and go to state 190


State 183

   78 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   79       | A_EXPN . OPR_PREC2 A_EXPN
   90 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 83
    MINUS   shift, and go to state 84
    MUL     shift, and go to state 85
    DIV     shift, and go to state 86
    MOD     shift, and go to state 87
    EXP     shift, and go to state 88
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    UNARY_OPERATORS  go to state 91
    OPR_PREC1        go to state 92
    OPR_PREC2        go to state 93


State 184

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN . RB LCB $@8 BODY2 RCB
   81 A_EXPN: INCR_DCR_EXPN .

    RB  shift, and go to state 191

    $default  reduce using rule 81 (A_EXPN)


State 185

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 192


State 186

   44 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 . RCB

    RCB  shift, and go to state 193


State 187

   57 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 194
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 188

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB . $@11 BODY2 RCB

    $default  reduce using rule 58 ($@11)

    $@11  go to state 195


State 189

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB . $@3 COLON LCB $@4 BODY2 RCB

    $default  reduce using rule 39 ($@3)

    $@3  go to state 196


State 190

   55 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@9 BODY2 RCB .

    $default  reduce using rule 55 (IF_STATEMENT)


State 191

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB . LCB $@8 BODY2 RCB

    LCB  shift, and go to state 197


State 192

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB . LOGICAL_EXPN RB SC

    LB            shift, and go to state 60
    AMPER         shift, and go to state 39
    NOT           shift, and go to state 61
    MUL           shift, and go to state 40
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    LOGICAL_EXPN   go to state 198
    LOGICAL_EXPN1  go to state 63
    LOGICAL_EXPN2  go to state 64
    A_EXPN         go to state 122
    ARRAY_ACCESS   go to state 51
    INCR_DCR_EXPN  go to state 66


State 193

   44 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB .

    $default  reduce using rule 44 (PROGRAM_STATEMENTS)


State 194

   57 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 BODY2 . RCB

    RCB  shift, and go to state 199


State 195

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 200
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 196

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 . COLON LCB $@4 BODY2 RCB

    COLON  shift, and go to state 201


State 197

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB . $@8 BODY2 RCB

    $default  reduce using rule 48 ($@8)

    $@8  go to state 202


State 198

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 203


State 199

   57 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@10 BODY2 RCB .

    $default  reduce using rule 57 (ELSE_IF_STATEMENT)


State 200

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 . RCB

    RCB  shift, and go to state 204


State 201

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON . LCB $@4 BODY2 RCB

    LCB  shift, and go to state 205


State 202

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 206
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 203

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 207


State 204

   59 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@11 BODY2 RCB .

    $default  reduce using rule 59 (ELSE_IF_STATEMENT)


State 205

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB . $@4 BODY2 RCB

    $default  reduce using rule 40 ($@4)

    $@4  go to state 208


State 206

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 . RCB

    RCB  shift, and go to state 209


State 207

   47 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 47 (PROGRAM_STATEMENTS)


State 208

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    AMPER         shift, and go to state 39
    MUL           shift, and go to state 40
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 41
    INT_NUMBER    shift, and go to state 42
    FLOAT_NUMBER  shift, and go to state 43

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 210
    DECLARATION_STATEMENTS  go to state 45
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 46
    CONDITIONAL_STATEMENTS  go to state 47
    IF_STATEMENT            go to state 48
    ASSIGNMENT_STATEMENT    go to state 49
    A_EXPN                  go to state 50
    ARRAY_ACCESS            go to state 51
    INCR_DCR_EXPN           go to state 52


State 209

   49 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB .

    $default  reduce using rule 49 (PROGRAM_STATEMENTS)


State 210

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 . RCB

    RCB  shift, and go to state 211


State 211

   41 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB .

    $default  reduce using rule 41 (PROGRAM_STATEMENTS)
