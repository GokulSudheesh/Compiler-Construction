State 125 conflicts: 2 shift/reduce
State 146 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   14 VAR_LIST: VAR COMA VAR_LIST
   15         | ARRAY_DECLARATION COMA VAR_LIST
   16         | VAR
   17         | ARRAY_DECLARATION

   18 ARRAY_DECLARATION: VAR ARRAY_SIZE

   19 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   20           | LSQRB NUMBER RSQRB

   21 MAIN_TYPE: INT

   22 DATA_TYPE: INT
   23          | CHAR
   24          | FLOAT
   25          | DOUBLE

   26 PROGRAM_STATEMENTS: VAR_EXPN1 SC
   27                   | SC
   28                   | VAR_EXPN2 SC
   29                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   30                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   31                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   32                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   33                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   34                   | FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

   35 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   36             | LOGICAL_EXPN1

   37 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   38              | LOGICAL_EXPN2
   39              | NOT LB LOGICAL_EXPN1 RB
   40              | LB LOGICAL_EXPN1 RB

   41 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   42 COMP_OPERATOR: ET
   43              | GT
   44              | LT
   45              | GTE
   46              | LTE
   47              | NE

   48 LOGICAL_OPERATOR: AND
   49                 | OR

   50 VAR_EXPN1: VAR EQ A_EXPN
   51          | VAR_ARRAY_ACCESS_LHS EQ A_EXPN

   52 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS
   53          | VAR UNARY_OPERATORS

   54 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS

   55 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS

   56 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB
   57             | ARRAY_ACCESS LSQRB NUMBER RSQRB
   58             | LSQRB VAR RSQRB
   59             | LSQRB NUMBER RSQRB

   60 A_EXPN: A_EXPN PLUS A_EXPN
   61       | A_EXPN MINUS A_EXPN
   62       | A_EXPN1

   63 A_EXPN1: A_EXPN1 MUL A_EXPN1
   64        | A_EXPN1 DIV A_EXPN1
   65        | A_EXPN1 MOD A_EXPN1
   66        | A_EXPN2

   67 A_EXPN2: A_EXPN2 EXP A_EXPN2
   68        | A_EXPN3

   69 A_EXPN3: LB A_EXPN RB
   70        | NUMBER
   71        | VAR UNARY_OPERATORS
   72        | VAR
   73        | VAR_ARRAY_ACCESS_RHS UNARY_OPERATORS
   74        | VAR_ARRAY_ACCESS_RHS

   75 UNARY_OPERATORS: UPLUS
   76                | UMINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 29 30 31 32 33 34 35 39 40 69
    RB (263) 1 29 30 31 32 33 34 35 39 40 69
    LCB (264) 1 29 30 31 32 33 34
    RCB (265) 1 29 30 31 32 33 34
    LSQRB (266) 19 20 56 57 58 59
    RSQRB (267) 19 20 56 57 58 59
    SC (268) 13 26 27 28 33 34
    COLON (269) 29
    QMARK (270) 29
    COMA (271) 14 15
    IF (272) 30 31
    ELSE (273) 31
    FOR (274) 34
    DO (275) 33
    WHILE (276) 32 33
    VAR <var_name> (277) 6 14 16 18 50 52 53 54 55 56 58 71 72
    NUMBER (278) 19 20 57 59 70
    ET (279) 42
    EQ (280) 50 51
    GT (281) 4 43
    LT (282) 4 44
    GTE (283) 45
    LTE (284) 46
    NE (285) 47
    AND (286) 48
    OR (287) 49
    NOT (288) 35 39
    DQUOTE (289) 5
    PLUS (290) 60
    MINUS (291) 61
    MUL (292) 63
    DIV (293) 6 7 64
    MOD (294) 65
    EXP (295) 67
    UPLUS (296) 75
    UMINUS (297) 76
    INT <data_type> (298) 21 22
    CHAR <data_type> (299) 23
    FLOAT <data_type> (300) 24
    DOUBLE <data_type> (301) 25


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 29 30 31 32 33 34
    DECLARATION_STATEMENTS (54)
        on left: 13
        on right: 9 11
    VAR_LIST (55)
        on left: 14 15 16 17
        on right: 13 14 15
    ARRAY_DECLARATION (56)
        on left: 18
        on right: 15 17
    ARRAY_SIZE (57)
        on left: 19 20
        on right: 18 19
    MAIN_TYPE (58)
        on left: 21
        on right: 1
    DATA_TYPE <data_type> (59)
        on left: 22 23 24 25
        on right: 13
    PROGRAM_STATEMENTS (60)
        on left: 26 27 28 29 30 31 32 33 34
        on right: 12
    LOGICAL_EXPN (61)
        on left: 35 36
        on right: 29 30 31 32 33 34
    LOGICAL_EXPN1 (62)
        on left: 37 38 39 40
        on right: 35 36 37 39 40
    LOGICAL_EXPN2 (63)
        on left: 41
        on right: 38
    COMP_OPERATOR (64)
        on left: 42 43 44 45 46 47
        on right: 41
    LOGICAL_OPERATOR (65)
        on left: 48 49
        on right: 37
    VAR_EXPN1 (66)
        on left: 50 51
        on right: 26 34
    VAR_EXPN2 (67)
        on left: 52 53
        on right: 28 34
    VAR_ARRAY_ACCESS_LHS (68)
        on left: 54
        on right: 51
    VAR_ARRAY_ACCESS_RHS (69)
        on left: 55
        on right: 73 74
    ARRAY_ACCESS (70)
        on left: 56 57 58 59
        on right: 52 54 55 56 57
    A_EXPN (71)
        on left: 60 61 62
        on right: 41 50 51 60 61 69
    A_EXPN1 (72)
        on left: 63 64 65 66
        on right: 62 63 64 65
    A_EXPN2 (73)
        on left: 67 68
        on right: 66 67
    A_EXPN3 (74)
        on left: 69 70 71 72 73 74
        on right: 68
    UNARY_OPERATORS (75)
        on left: 75 76
        on right: 52 53 71 73


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   21 MAIN_TYPE: INT .

    $default  reduce using rule 21 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DATA_TYPE               go to state 30


State 24

   22 DATA_TYPE: INT .

    $default  reduce using rule 22 (DATA_TYPE)


State 25

   23 DATA_TYPE: CHAR .

    $default  reduce using rule 23 (DATA_TYPE)


State 26

   24 DATA_TYPE: FLOAT .

    $default  reduce using rule 24 (DATA_TYPE)


State 27

   25 DATA_TYPE: DOUBLE .

    $default  reduce using rule 25 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 31


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 39
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 30

   13 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    VAR  shift, and go to state 45

    VAR_LIST           go to state 46
    ARRAY_DECLARATION  go to state 47


State 31

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 32

   29 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 51

    LOGICAL_EXPN          go to state 52
    LOGICAL_EXPN1         go to state 53
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 33

   27 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 27 (PROGRAM_STATEMENTS)


State 34

   30 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   31                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 60


State 35

   34 PROGRAM_STATEMENTS: FOR . LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB  shift, and go to state 61


State 36

   33 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 62


State 37

   32 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 63


State 38

   50 VAR_EXPN1: VAR . EQ A_EXPN
   52 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   53          | VAR . UNARY_OPERATORS
   54 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB   shift, and go to state 64
    EQ      shift, and go to state 65
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    ARRAY_ACCESS     go to state 68
    UNARY_OPERATORS  go to state 69


State 39

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 40

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 70
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 41

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 71
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 42

   26 PROGRAM_STATEMENTS: VAR_EXPN1 . SC

    SC  shift, and go to state 72


State 43

   28 PROGRAM_STATEMENTS: VAR_EXPN2 . SC

    SC  shift, and go to state 73


State 44

   51 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS . EQ A_EXPN

    EQ  shift, and go to state 74


State 45

   14 VAR_LIST: VAR . COMA VAR_LIST
   16         | VAR .
   18 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 75
    COMA   shift, and go to state 76

    $default  reduce using rule 16 (VAR_LIST)

    ARRAY_SIZE  go to state 77


State 46

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 78


State 47

   15 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   17         | ARRAY_DECLARATION .

    COMA  shift, and go to state 79

    $default  reduce using rule 17 (VAR_LIST)


State 48

   40 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   69 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 81
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 82
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 49

   55 VAR_ARRAY_ACCESS_RHS: VAR . ARRAY_ACCESS
   71 A_EXPN3: VAR . UNARY_OPERATORS
   72        | VAR .

    LSQRB   shift, and go to state 64
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    $default  reduce using rule 72 (A_EXPN3)

    ARRAY_ACCESS     go to state 83
    UNARY_OPERATORS  go to state 84


State 50

   70 A_EXPN3: NUMBER .

    $default  reduce using rule 70 (A_EXPN3)


State 51

   35 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   39 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 85


State 52

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 86


State 53

   36 LOGICAL_EXPN: LOGICAL_EXPN1 .
   37 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AND  shift, and go to state 87
    OR   shift, and go to state 88

    $default  reduce using rule 36 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 89


State 54

   38 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 38 (LOGICAL_EXPN1)


State 55

   73 A_EXPN3: VAR_ARRAY_ACCESS_RHS . UNARY_OPERATORS
   74        | VAR_ARRAY_ACCESS_RHS .

    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    $default  reduce using rule 74 (A_EXPN3)

    UNARY_OPERATORS  go to state 90


State 56

   41 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   60 A_EXPN: A_EXPN . PLUS A_EXPN
   61       | A_EXPN . MINUS A_EXPN

    ET     shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    GTE    shift, and go to state 94
    LTE    shift, and go to state 95
    NE     shift, and go to state 96
    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    COMP_OPERATOR  go to state 99


State 57

   62 A_EXPN: A_EXPN1 .
   63 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   64        | A_EXPN1 . DIV A_EXPN1
   65        | A_EXPN1 . MOD A_EXPN1

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 62 (A_EXPN)


State 58

   66 A_EXPN1: A_EXPN2 .
   67 A_EXPN2: A_EXPN2 . EXP A_EXPN2

    EXP  shift, and go to state 103

    $default  reduce using rule 66 (A_EXPN1)


State 59

   68 A_EXPN2: A_EXPN3 .

    $default  reduce using rule 68 (A_EXPN2)


State 60

   30 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   31                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 51

    LOGICAL_EXPN          go to state 104
    LOGICAL_EXPN1         go to state 53
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 61

   34 PROGRAM_STATEMENTS: FOR LB . VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 105

    VAR_EXPN1             go to state 106
    VAR_ARRAY_ACCESS_LHS  go to state 44


State 62

   33 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 107
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 63

   32 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 51

    LOGICAL_EXPN          go to state 108
    LOGICAL_EXPN1         go to state 53
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 64

   58 ARRAY_ACCESS: LSQRB . VAR RSQRB
   59             | LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 109
    NUMBER  shift, and go to state 110


State 65

   50 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 112
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 66

   75 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 75 (UNARY_OPERATORS)


State 67

   76 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 76 (UNARY_OPERATORS)


State 68

   52 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   54 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   56 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   57             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 113
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    $default  reduce using rule 54 (VAR_ARRAY_ACCESS_LHS)

    UNARY_OPERATORS  go to state 114


State 69

   53 VAR_EXPN2: VAR UNARY_OPERATORS .

    $default  reduce using rule 53 (VAR_EXPN2)


State 70

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 71

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 72

   26 PROGRAM_STATEMENTS: VAR_EXPN1 SC .

    $default  reduce using rule 26 (PROGRAM_STATEMENTS)


State 73

   28 PROGRAM_STATEMENTS: VAR_EXPN2 SC .

    $default  reduce using rule 28 (PROGRAM_STATEMENTS)


State 74

   51 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ . A_EXPN

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 115
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 75

   20 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 116


State 76

   14 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 45

    VAR_LIST           go to state 117
    ARRAY_DECLARATION  go to state 47


State 77

   18 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   19 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 118

    $default  reduce using rule 18 (ARRAY_DECLARATION)


State 78

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 79

   15 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    VAR  shift, and go to state 45

    VAR_LIST           go to state 119
    ARRAY_DECLARATION  go to state 47


State 80

   39 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 120


State 81

   37 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   40              | LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 121
    AND  shift, and go to state 87
    OR   shift, and go to state 88

    LOGICAL_OPERATOR  go to state 89


State 82

   41 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   60 A_EXPN: A_EXPN . PLUS A_EXPN
   61       | A_EXPN . MINUS A_EXPN
   69 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 122
    ET     shift, and go to state 91
    GT     shift, and go to state 92
    LT     shift, and go to state 93
    GTE    shift, and go to state 94
    LTE    shift, and go to state 95
    NE     shift, and go to state 96
    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    COMP_OPERATOR  go to state 99


State 83

   55 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS .
   56 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   57             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 113

    $default  reduce using rule 55 (VAR_ARRAY_ACCESS_RHS)


State 84

   71 A_EXPN3: VAR UNARY_OPERATORS .

    $default  reduce using rule 71 (A_EXPN3)


State 85

   35 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   39 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 123
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 86

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 124


State 87

   48 LOGICAL_OPERATOR: AND .

    $default  reduce using rule 48 (LOGICAL_OPERATOR)


State 88

   49 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 49 (LOGICAL_OPERATOR)


State 89

   37 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 125
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 90

   73 A_EXPN3: VAR_ARRAY_ACCESS_RHS UNARY_OPERATORS .

    $default  reduce using rule 73 (A_EXPN3)


State 91

   42 COMP_OPERATOR: ET .

    $default  reduce using rule 42 (COMP_OPERATOR)


State 92

   43 COMP_OPERATOR: GT .

    $default  reduce using rule 43 (COMP_OPERATOR)


State 93

   44 COMP_OPERATOR: LT .

    $default  reduce using rule 44 (COMP_OPERATOR)


State 94

   45 COMP_OPERATOR: GTE .

    $default  reduce using rule 45 (COMP_OPERATOR)


State 95

   46 COMP_OPERATOR: LTE .

    $default  reduce using rule 46 (COMP_OPERATOR)


State 96

   47 COMP_OPERATOR: NE .

    $default  reduce using rule 47 (COMP_OPERATOR)


State 97

   60 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 126
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 98

   61 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 127
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 99

   41 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 128
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 100

   63 A_EXPN1: A_EXPN1 MUL . A_EXPN1

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN1               go to state 129
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 101

   64 A_EXPN1: A_EXPN1 DIV . A_EXPN1

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN1               go to state 130
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 102

   65 A_EXPN1: A_EXPN1 MOD . A_EXPN1

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN1               go to state 131
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 103

   67 A_EXPN2: A_EXPN2 EXP . A_EXPN2

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN2               go to state 132
    A_EXPN3               go to state 59


State 104

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   31                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 133


State 105

   50 VAR_EXPN1: VAR . EQ A_EXPN
   54 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB  shift, and go to state 64
    EQ     shift, and go to state 65

    ARRAY_ACCESS  go to state 134


State 106

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 . SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 135


State 107

   33 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 136


State 108

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 137


State 109

   58 ARRAY_ACCESS: LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 138


State 110

   59 ARRAY_ACCESS: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 139


State 111

   69 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 111
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50

    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 140
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 112

   50 VAR_EXPN1: VAR EQ A_EXPN .
   60 A_EXPN: A_EXPN . PLUS A_EXPN
   61       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 50 (VAR_EXPN1)


State 113

   56 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . VAR RSQRB
   57             | ARRAY_ACCESS LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 141
    NUMBER  shift, and go to state 142


State 114

   52 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS .

    $default  reduce using rule 52 (VAR_EXPN2)


State 115

   51 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ A_EXPN .
   60 A_EXPN: A_EXPN . PLUS A_EXPN
   61       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 51 (VAR_EXPN1)


State 116

   20 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 143


State 117

   14 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 14 (VAR_LIST)


State 118

   19 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 144


State 119

   15 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 120

   39 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 145
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 121

   40 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 40 (LOGICAL_EXPN1)


State 122

   69 A_EXPN3: LB A_EXPN RB .

    $default  reduce using rule 69 (A_EXPN3)


State 123

   35 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   37 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   39              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 146
    AND  shift, and go to state 87
    OR   shift, and go to state 88

    LOGICAL_OPERATOR  go to state 89


State 124

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 147


State 125

   37 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   37              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AND  shift, and go to state 87
    OR   shift, and go to state 88

    AND       [reduce using rule 37 (LOGICAL_EXPN1)]
    OR        [reduce using rule 37 (LOGICAL_EXPN1)]
    $default  reduce using rule 37 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 89


State 126

   60 A_EXPN: A_EXPN . PLUS A_EXPN
   60       | A_EXPN PLUS A_EXPN .
   61       | A_EXPN . MINUS A_EXPN

    $default  reduce using rule 60 (A_EXPN)


State 127

   60 A_EXPN: A_EXPN . PLUS A_EXPN
   61       | A_EXPN . MINUS A_EXPN
   61       | A_EXPN MINUS A_EXPN .

    $default  reduce using rule 61 (A_EXPN)


State 128

   41 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   60 A_EXPN: A_EXPN . PLUS A_EXPN
   61       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 41 (LOGICAL_EXPN2)


State 129

   63 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   63        | A_EXPN1 MUL A_EXPN1 .
   64        | A_EXPN1 . DIV A_EXPN1
   65        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 63 (A_EXPN1)


State 130

   63 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   64        | A_EXPN1 . DIV A_EXPN1
   64        | A_EXPN1 DIV A_EXPN1 .
   65        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 64 (A_EXPN1)


State 131

   63 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   64        | A_EXPN1 . DIV A_EXPN1
   65        | A_EXPN1 . MOD A_EXPN1
   65        | A_EXPN1 MOD A_EXPN1 .

    $default  reduce using rule 65 (A_EXPN1)


State 132

   67 A_EXPN2: A_EXPN2 . EXP A_EXPN2
   67        | A_EXPN2 EXP A_EXPN2 .

    EXP  shift, and go to state 103

    $default  reduce using rule 67 (A_EXPN2)


State 133

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   31                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 148


State 134

   54 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   56 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   57             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 113

    $default  reduce using rule 54 (VAR_ARRAY_ACCESS_LHS)


State 135

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC . LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 51

    LOGICAL_EXPN          go to state 149
    LOGICAL_EXPN1         go to state 53
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 136

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 150


State 137

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 151


State 138

   58 ARRAY_ACCESS: LSQRB VAR RSQRB .

    $default  reduce using rule 58 (ARRAY_ACCESS)


State 139

   59 ARRAY_ACCESS: LSQRB NUMBER RSQRB .

    $default  reduce using rule 59 (ARRAY_ACCESS)


State 140

   60 A_EXPN: A_EXPN . PLUS A_EXPN
   61       | A_EXPN . MINUS A_EXPN
   69 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 122
    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98


State 141

   56 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 152


State 142

   57 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 153


State 143

   20 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 20 (ARRAY_SIZE)


State 144

   19 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 154


State 145

   37 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   39              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 155
    AND  shift, and go to state 87
    OR   shift, and go to state 88

    LOGICAL_OPERATOR  go to state 89


State 146

   35 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   39 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 35 (LOGICAL_EXPN)
    RB        [reduce using rule 39 (LOGICAL_EXPN1)]
    SC        reduce using rule 35 (LOGICAL_EXPN)
    SC        [reduce using rule 39 (LOGICAL_EXPN1)]
    AND       reduce using rule 39 (LOGICAL_EXPN1)
    OR        reduce using rule 39 (LOGICAL_EXPN1)
    $default  reduce using rule 35 (LOGICAL_EXPN)


State 147

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 156
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 148

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   31                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 157
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 149

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN . SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 158


State 150

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 159


State 151

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 160
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 152

   56 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB .

    $default  reduce using rule 56 (ARRAY_ACCESS)


State 153

   57 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER RSQRB .

    $default  reduce using rule 57 (ARRAY_ACCESS)


State 154

   19 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 19 (ARRAY_SIZE)


State 155

   39 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 39 (LOGICAL_EXPN1)


State 156

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 161


State 157

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   31                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 162


State 158

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC . VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 163

    VAR_EXPN2  go to state 164


State 159

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 48
    VAR     shift, and go to state 49
    NUMBER  shift, and go to state 50
    NOT     shift, and go to state 51

    LOGICAL_EXPN          go to state 165
    LOGICAL_EXPN1         go to state 53
    LOGICAL_EXPN2         go to state 54
    VAR_ARRAY_ACCESS_RHS  go to state 55
    A_EXPN                go to state 56
    A_EXPN1               go to state 57
    A_EXPN2               go to state 58
    A_EXPN3               go to state 59


State 160

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 166


State 161

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 167


State 162

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   31                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 168

    $default  reduce using rule 30 (PROGRAM_STATEMENTS)


State 163

   52 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   53          | VAR . UNARY_OPERATORS

    LSQRB   shift, and go to state 64
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    ARRAY_ACCESS     go to state 169
    UNARY_OPERATORS  go to state 69


State 164

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 . RB LCB BODY2 RCB

    RB  shift, and go to state 170


State 165

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 171


State 166

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 167

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 172


State 168

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 173


State 169

   52 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   56 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   57             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 113
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    UNARY_OPERATORS  go to state 114


State 170

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB . LCB BODY2 RCB

    LCB  shift, and go to state 174


State 171

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 175


State 172

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 176
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 173

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 177
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 174

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 178
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 175

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 176

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 179


State 177

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 180


State 178

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 . RCB

    RCB  shift, and go to state 181


State 179

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 29 (PROGRAM_STATEMENTS)


State 180

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 31 (PROGRAM_STATEMENTS)


State 181

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)
