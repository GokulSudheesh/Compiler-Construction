State 30 conflicts: 4 shift/reduce
State 43 conflicts: 7 shift/reduce
State 128 conflicts: 2 shift/reduce
State 149 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
   14                       | DECLARATION_STATEMENT

   15 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC

   16 VAR_LIST: VAR COMA VAR_LIST
   17         | ARRAY_DECLARATION COMA VAR_LIST
   18         | VAR
   19         | ARRAY_DECLARATION

   20 ARRAY_DECLARATION: VAR ARRAY_SIZE

   21 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   22           | LSQRB NUMBER RSQRB

   23 MAIN_TYPE: INT

   24 DATA_TYPE: INT
   25          | CHAR
   26          | FLOAT
   27          | DOUBLE

   28 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
   29                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   30                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   31                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   32                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   33                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   34                   | FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB
   35                   | PROGRAM_STATEMENT

   36 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   37             | LOGICAL_EXPN1

   38 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   39              | LOGICAL_EXPN2
   40              | NOT LB LOGICAL_EXPN1 RB
   41              | LB LOGICAL_EXPN1 RB

   42 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   43 COMP_OPERATOR: ET
   44              | GT
   45              | LT
   46              | GTE
   47              | LTE
   48              | NE

   49 LOGICAL_OPERATOR: AND
   50                 | OR

   51 PROGRAM_STATEMENT: VAR_EXPN1 SC
   52                  | SC
   53                  | VAR_EXPN2 SC

   54 VAR_EXPN1: VAR EQ A_EXPN
   55          | VAR_ARRAY_ACCESS_LHS EQ A_EXPN

   56 VAR_EXPN2: VAR ARRAY_ACCESS UPLUS
   57          | VAR ARRAY_ACCESS UMINUS
   58          | VAR UPLUS
   59          | VAR UMINUS

   60 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS

   61 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS

   62 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB
   63             | ARRAY_ACCESS LSQRB NUMBER RSQRB
   64             | LSQRB VAR RSQRB
   65             | LSQRB NUMBER RSQRB

   66 A_EXPN: A_EXPN PLUS A_EXPN
   67       | A_EXPN MINUS A_EXPN
   68       | A_EXPN MUL A_EXPN
   69       | A_EXPN DIV A_EXPN
   70       | A_EXPN MOD A_EXPN
   71       | A_EXPN EXP A_EXPN
   72       | LB A_EXPN RB
   73       | VAR UPLUS
   74       | VAR UMINUS
   75       | VAR
   76       | NUMBER
   77       | VAR_ARRAY_ACCESS_RHS UPLUS
   78       | VAR_ARRAY_ACCESS_RHS UMINUS
   79       | VAR_ARRAY_ACCESS_RHS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 29 30 31 32 33 34 36 40 41 72
    RB (263) 1 29 30 31 32 33 34 36 40 41 72
    LCB (264) 1 29 30 31 32 33 34
    RCB (265) 1 29 30 31 32 33 34
    LSQRB (266) 21 22 62 63 64 65
    RSQRB (267) 21 22 62 63 64 65
    SC (268) 15 33 34 51 52 53
    COLON (269) 29
    QMARK (270) 29
    COMA (271) 16 17
    IF (272) 30 31
    ELSE (273) 31
    FOR (274) 34
    DO (275) 33
    WHILE (276) 32 33
    VAR <var_name> (277) 6 16 18 20 54 56 57 58 59 60 61 62 64 73 74 75
    NUMBER (278) 21 22 63 65 76
    ET (279) 43
    EQ (280) 54 55
    GT (281) 4 44
    LT (282) 4 45
    GTE (283) 46
    LTE (284) 47
    NE (285) 48
    AND (286) 49
    OR (287) 50
    NOT (288) 36 40
    DQUOTE (289) 5
    PLUS (290) 66
    MINUS (291) 67
    MUL (292) 68
    DIV (293) 6 7 69
    MOD (294) 70
    EXP (295) 71
    UPLUS (296) 56 58 73 77
    UMINUS (297) 57 59 74 78
    INT <data_type> (298) 23 24
    CHAR <data_type> (299) 25
    FLOAT <data_type> (300) 26
    DOUBLE <data_type> (301) 27


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 29 30 31 32 33 34
    DECLARATION_STATEMENTS (54)
        on left: 13 14
        on right: 9 11 13
    DECLARATION_STATEMENT (55)
        on left: 15
        on right: 13 14
    VAR_LIST (56)
        on left: 16 17 18 19
        on right: 15 16 17
    ARRAY_DECLARATION (57)
        on left: 20
        on right: 17 19
    ARRAY_SIZE (58)
        on left: 21 22
        on right: 20 21
    MAIN_TYPE (59)
        on left: 23
        on right: 1
    DATA_TYPE <data_type> (60)
        on left: 24 25 26 27
        on right: 15
    PROGRAM_STATEMENTS (61)
        on left: 28 29 30 31 32 33 34 35
        on right: 12 28
    LOGICAL_EXPN (62)
        on left: 36 37
        on right: 29 30 31 32 33 34
    LOGICAL_EXPN1 (63)
        on left: 38 39 40 41
        on right: 36 37 38 40 41
    LOGICAL_EXPN2 (64)
        on left: 42
        on right: 39
    COMP_OPERATOR (65)
        on left: 43 44 45 46 47 48
        on right: 42
    LOGICAL_OPERATOR (66)
        on left: 49 50
        on right: 38
    PROGRAM_STATEMENT (67)
        on left: 51 52 53
        on right: 28 35
    VAR_EXPN1 (68)
        on left: 54 55
        on right: 34 51
    VAR_EXPN2 (69)
        on left: 56 57 58 59
        on right: 34 53
    VAR_ARRAY_ACCESS_LHS (70)
        on left: 60
        on right: 55
    VAR_ARRAY_ACCESS_RHS (71)
        on left: 61
        on right: 77 78 79
    ARRAY_ACCESS (72)
        on left: 62 63 64 65
        on right: 56 57 60 61 62 63
    A_EXPN (73)
        on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79
        on right: 42 54 55 66 67 68 69 70 71 72


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   23 MAIN_TYPE: INT .

    $default  reduce using rule 23 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31


State 24

   24 DATA_TYPE: INT .

    $default  reduce using rule 24 (DATA_TYPE)


State 25

   25 DATA_TYPE: CHAR .

    $default  reduce using rule 25 (DATA_TYPE)


State 26

   26 DATA_TYPE: FLOAT .

    $default  reduce using rule 26 (DATA_TYPE)


State 27

   27 DATA_TYPE: DOUBLE .

    $default  reduce using rule 27 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 32


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 40
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 30

   13 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
   14                       | DECLARATION_STATEMENT .

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    INT       [reduce using rule 14 (DECLARATION_STATEMENTS)]
    CHAR      [reduce using rule 14 (DECLARATION_STATEMENTS)]
    FLOAT     [reduce using rule 14 (DECLARATION_STATEMENTS)]
    DOUBLE    [reduce using rule 14 (DECLARATION_STATEMENTS)]
    $default  reduce using rule 14 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 47
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31


State 31

   15 DECLARATION_STATEMENT: DATA_TYPE . VAR_LIST SC

    VAR  shift, and go to state 48

    VAR_LIST           go to state 49
    ARRAY_DECLARATION  go to state 50


State 32

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 33

   29 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 55
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 34

   52 PROGRAM_STATEMENT: SC .

    $default  reduce using rule 52 (PROGRAM_STATEMENT)


State 35

   30 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   31                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 60


State 36

   34 PROGRAM_STATEMENTS: FOR . LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB  shift, and go to state 61


State 37

   33 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 62


State 38

   32 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 63


State 39

   54 VAR_EXPN1: VAR . EQ A_EXPN
   56 VAR_EXPN2: VAR . ARRAY_ACCESS UPLUS
   57          | VAR . ARRAY_ACCESS UMINUS
   58          | VAR . UPLUS
   59          | VAR . UMINUS
   60 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB   shift, and go to state 64
    EQ      shift, and go to state 65
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    ARRAY_ACCESS  go to state 68


State 40

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 41

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 69
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 42

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 70
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 43

   28 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
   35                   | PROGRAM_STATEMENT .

    LB     shift, and go to state 33
    SC     shift, and go to state 34
    IF     shift, and go to state 35
    FOR    shift, and go to state 36
    DO     shift, and go to state 37
    WHILE  shift, and go to state 38
    VAR    shift, and go to state 39

    LB        [reduce using rule 35 (PROGRAM_STATEMENTS)]
    SC        [reduce using rule 35 (PROGRAM_STATEMENTS)]
    IF        [reduce using rule 35 (PROGRAM_STATEMENTS)]
    FOR       [reduce using rule 35 (PROGRAM_STATEMENTS)]
    DO        [reduce using rule 35 (PROGRAM_STATEMENTS)]
    WHILE     [reduce using rule 35 (PROGRAM_STATEMENTS)]
    VAR       [reduce using rule 35 (PROGRAM_STATEMENTS)]
    $default  reduce using rule 35 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS    go to state 71
    PROGRAM_STATEMENT     go to state 43
    VAR_EXPN1             go to state 44
    VAR_EXPN2             go to state 45
    VAR_ARRAY_ACCESS_LHS  go to state 46


State 44

   51 PROGRAM_STATEMENT: VAR_EXPN1 . SC

    SC  shift, and go to state 72


State 45

   53 PROGRAM_STATEMENT: VAR_EXPN2 . SC

    SC  shift, and go to state 73


State 46

   55 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS . EQ A_EXPN

    EQ  shift, and go to state 74


State 47

   13 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 48

   16 VAR_LIST: VAR . COMA VAR_LIST
   18         | VAR .
   20 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 75
    COMA   shift, and go to state 76

    $default  reduce using rule 18 (VAR_LIST)

    ARRAY_SIZE  go to state 77


State 49

   15 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 78


State 50

   17 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   19         | ARRAY_DECLARATION .

    COMA  shift, and go to state 79

    $default  reduce using rule 19 (VAR_LIST)


State 51

   41 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   72 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 81
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 82


State 52

   61 VAR_ARRAY_ACCESS_RHS: VAR . ARRAY_ACCESS
   73 A_EXPN: VAR . UPLUS
   74       | VAR . UMINUS
   75       | VAR .

    LSQRB   shift, and go to state 64
    UPLUS   shift, and go to state 83
    UMINUS  shift, and go to state 84

    $default  reduce using rule 75 (A_EXPN)

    ARRAY_ACCESS  go to state 85


State 53

   76 A_EXPN: NUMBER .

    $default  reduce using rule 76 (A_EXPN)


State 54

   36 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   40 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 86


State 55

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 87


State 56

   37 LOGICAL_EXPN: LOGICAL_EXPN1 .
   38 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AND  shift, and go to state 88
    OR   shift, and go to state 89

    $default  reduce using rule 37 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 90


State 57

   39 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 39 (LOGICAL_EXPN1)


State 58

   77 A_EXPN: VAR_ARRAY_ACCESS_RHS . UPLUS
   78       | VAR_ARRAY_ACCESS_RHS . UMINUS
   79       | VAR_ARRAY_ACCESS_RHS .

    UPLUS   shift, and go to state 91
    UMINUS  shift, and go to state 92

    $default  reduce using rule 79 (A_EXPN)


State 59

   42 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    ET     shift, and go to state 93
    GT     shift, and go to state 94
    LT     shift, and go to state 95
    GTE    shift, and go to state 96
    LTE    shift, and go to state 97
    NE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    MUL    shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103
    EXP    shift, and go to state 104

    COMP_OPERATOR  go to state 105


State 60

   30 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   31                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 106
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 61

   34 PROGRAM_STATEMENTS: FOR LB . VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 107

    VAR_EXPN1             go to state 108
    VAR_ARRAY_ACCESS_LHS  go to state 46


State 62

   33 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 109
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 63

   32 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 110
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 64

   64 ARRAY_ACCESS: LSQRB . VAR RSQRB
   65             | LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 111
    NUMBER  shift, and go to state 112


State 65

   54 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 114


State 66

   58 VAR_EXPN2: VAR UPLUS .

    $default  reduce using rule 58 (VAR_EXPN2)


State 67

   59 VAR_EXPN2: VAR UMINUS .

    $default  reduce using rule 59 (VAR_EXPN2)


State 68

   56 VAR_EXPN2: VAR ARRAY_ACCESS . UPLUS
   57          | VAR ARRAY_ACCESS . UMINUS
   60 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   62 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   63             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 115
    UPLUS   shift, and go to state 116
    UMINUS  shift, and go to state 117

    $default  reduce using rule 60 (VAR_ARRAY_ACCESS_LHS)


State 69

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 70

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 71

   28 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 28 (PROGRAM_STATEMENTS)


State 72

   51 PROGRAM_STATEMENT: VAR_EXPN1 SC .

    $default  reduce using rule 51 (PROGRAM_STATEMENT)


State 73

   53 PROGRAM_STATEMENT: VAR_EXPN2 SC .

    $default  reduce using rule 53 (PROGRAM_STATEMENT)


State 74

   55 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 118


State 75

   22 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 119


State 76

   16 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 48

    VAR_LIST           go to state 120
    ARRAY_DECLARATION  go to state 50


State 77

   20 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   21 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 121

    $default  reduce using rule 20 (ARRAY_DECLARATION)


State 78

   15 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 15 (DECLARATION_STATEMENT)


State 79

   17 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    VAR  shift, and go to state 48

    VAR_LIST           go to state 122
    ARRAY_DECLARATION  go to state 50


State 80

   40 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 123


State 81

   38 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   41              | LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 124
    AND  shift, and go to state 88
    OR   shift, and go to state 89

    LOGICAL_OPERATOR  go to state 90


State 82

   42 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN
   72       | LB A_EXPN . RB

    RB     shift, and go to state 125
    ET     shift, and go to state 93
    GT     shift, and go to state 94
    LT     shift, and go to state 95
    GTE    shift, and go to state 96
    LTE    shift, and go to state 97
    NE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    MUL    shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103
    EXP    shift, and go to state 104

    COMP_OPERATOR  go to state 105


State 83

   73 A_EXPN: VAR UPLUS .

    $default  reduce using rule 73 (A_EXPN)


State 84

   74 A_EXPN: VAR UMINUS .

    $default  reduce using rule 74 (A_EXPN)


State 85

   61 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS .
   62 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   63             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 115

    $default  reduce using rule 61 (VAR_ARRAY_ACCESS_RHS)


State 86

   36 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   40 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 126
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 87

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 127


State 88

   49 LOGICAL_OPERATOR: AND .

    $default  reduce using rule 49 (LOGICAL_OPERATOR)


State 89

   50 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 50 (LOGICAL_OPERATOR)


State 90

   38 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 128
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 91

   77 A_EXPN: VAR_ARRAY_ACCESS_RHS UPLUS .

    $default  reduce using rule 77 (A_EXPN)


State 92

   78 A_EXPN: VAR_ARRAY_ACCESS_RHS UMINUS .

    $default  reduce using rule 78 (A_EXPN)


State 93

   43 COMP_OPERATOR: ET .

    $default  reduce using rule 43 (COMP_OPERATOR)


State 94

   44 COMP_OPERATOR: GT .

    $default  reduce using rule 44 (COMP_OPERATOR)


State 95

   45 COMP_OPERATOR: LT .

    $default  reduce using rule 45 (COMP_OPERATOR)


State 96

   46 COMP_OPERATOR: GTE .

    $default  reduce using rule 46 (COMP_OPERATOR)


State 97

   47 COMP_OPERATOR: LTE .

    $default  reduce using rule 47 (COMP_OPERATOR)


State 98

   48 COMP_OPERATOR: NE .

    $default  reduce using rule 48 (COMP_OPERATOR)


State 99

   66 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 129


State 100

   67 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 130


State 101

   68 A_EXPN: A_EXPN MUL . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 131


State 102

   69 A_EXPN: A_EXPN DIV . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 132


State 103

   70 A_EXPN: A_EXPN MOD . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 133


State 104

   71 A_EXPN: A_EXPN EXP . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 134


State 105

   42 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 135


State 106

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   31                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 136


State 107

   54 VAR_EXPN1: VAR . EQ A_EXPN
   60 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB  shift, and go to state 64
    EQ     shift, and go to state 65

    ARRAY_ACCESS  go to state 137


State 108

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 . SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 138


State 109

   33 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 139


State 110

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 140


State 111

   64 ARRAY_ACCESS: LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 141


State 112

   65 ARRAY_ACCESS: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 142


State 113

   72 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 113
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 143


State 114

   54 VAR_EXPN1: VAR EQ A_EXPN .
   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    MUL    shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103
    EXP    shift, and go to state 104

    $default  reduce using rule 54 (VAR_EXPN1)


State 115

   62 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . VAR RSQRB
   63             | ARRAY_ACCESS LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 144
    NUMBER  shift, and go to state 145


State 116

   56 VAR_EXPN2: VAR ARRAY_ACCESS UPLUS .

    $default  reduce using rule 56 (VAR_EXPN2)


State 117

   57 VAR_EXPN2: VAR ARRAY_ACCESS UMINUS .

    $default  reduce using rule 57 (VAR_EXPN2)


State 118

   55 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ A_EXPN .
   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    MUL    shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103
    EXP    shift, and go to state 104

    $default  reduce using rule 55 (VAR_EXPN1)


State 119

   22 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 146


State 120

   16 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 121

   21 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 147


State 122

   17 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 17 (VAR_LIST)


State 123

   40 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 80

    LOGICAL_EXPN1         go to state 148
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 124

   41 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 41 (LOGICAL_EXPN1)


State 125

   72 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 72 (A_EXPN)


State 126

   36 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   38 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   40              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 149
    AND  shift, and go to state 88
    OR   shift, and go to state 89

    LOGICAL_OPERATOR  go to state 90


State 127

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 150


State 128

   38 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   38              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AND  shift, and go to state 88
    OR   shift, and go to state 89

    AND       [reduce using rule 38 (LOGICAL_EXPN1)]
    OR        [reduce using rule 38 (LOGICAL_EXPN1)]
    $default  reduce using rule 38 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 90


State 129

   66 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN PLUS A_EXPN .
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103
    EXP  shift, and go to state 104

    $default  reduce using rule 66 (A_EXPN)


State 130

   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   67       | A_EXPN MINUS A_EXPN .
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103
    EXP  shift, and go to state 104

    $default  reduce using rule 67 (A_EXPN)


State 131

   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   68       | A_EXPN MUL A_EXPN .
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 104

    $default  reduce using rule 68 (A_EXPN)


State 132

   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   69       | A_EXPN DIV A_EXPN .
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 104

    $default  reduce using rule 69 (A_EXPN)


State 133

   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   70       | A_EXPN MOD A_EXPN .
   71       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 104

    $default  reduce using rule 70 (A_EXPN)


State 134

   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN
   71       | A_EXPN EXP A_EXPN .

    EXP  shift, and go to state 104

    $default  reduce using rule 71 (A_EXPN)


State 135

   42 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    MUL    shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103
    EXP    shift, and go to state 104

    $default  reduce using rule 42 (LOGICAL_EXPN2)


State 136

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   31                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 151


State 137

   60 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   62 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   63             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 115

    $default  reduce using rule 60 (VAR_ARRAY_ACCESS_LHS)


State 138

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC . LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 152
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 139

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 153


State 140

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 154


State 141

   64 ARRAY_ACCESS: LSQRB VAR RSQRB .

    $default  reduce using rule 64 (ARRAY_ACCESS)


State 142

   65 ARRAY_ACCESS: LSQRB NUMBER RSQRB .

    $default  reduce using rule 65 (ARRAY_ACCESS)


State 143

   66 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN . MUL A_EXPN
   69       | A_EXPN . DIV A_EXPN
   70       | A_EXPN . MOD A_EXPN
   71       | A_EXPN . EXP A_EXPN
   72       | LB A_EXPN . RB

    RB     shift, and go to state 125
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    MUL    shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103
    EXP    shift, and go to state 104


State 144

   62 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 155


State 145

   63 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 156


State 146

   22 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 22 (ARRAY_SIZE)


State 147

   21 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 157


State 148

   38 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   40              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 158
    AND  shift, and go to state 88
    OR   shift, and go to state 89

    LOGICAL_OPERATOR  go to state 90


State 149

   36 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   40 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 36 (LOGICAL_EXPN)
    RB        [reduce using rule 40 (LOGICAL_EXPN1)]
    SC        reduce using rule 36 (LOGICAL_EXPN)
    SC        [reduce using rule 40 (LOGICAL_EXPN1)]
    AND       reduce using rule 40 (LOGICAL_EXPN1)
    OR        reduce using rule 40 (LOGICAL_EXPN1)
    $default  reduce using rule 36 (LOGICAL_EXPN)


State 150

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 159
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 151

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   31                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 160
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 152

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN . SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 161


State 153

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 162


State 154

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 163
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 155

   62 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB .

    $default  reduce using rule 62 (ARRAY_ACCESS)


State 156

   63 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER RSQRB .

    $default  reduce using rule 63 (ARRAY_ACCESS)


State 157

   21 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 21 (ARRAY_SIZE)


State 158

   40 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 40 (LOGICAL_EXPN1)


State 159

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 164


State 160

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   31                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 165


State 161

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC . VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 166

    VAR_EXPN2  go to state 167


State 162

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 168
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 163

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 169


State 164

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 170


State 165

   30 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   31                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 171

    $default  reduce using rule 30 (PROGRAM_STATEMENTS)


State 166

   56 VAR_EXPN2: VAR . ARRAY_ACCESS UPLUS
   57          | VAR . ARRAY_ACCESS UMINUS
   58          | VAR . UPLUS
   59          | VAR . UMINUS

    LSQRB   shift, and go to state 64
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    ARRAY_ACCESS  go to state 172


State 167

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 . RB LCB BODY2 RCB

    RB  shift, and go to state 173


State 168

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 174


State 169

   32 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 170

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 175


State 171

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 176


State 172

   56 VAR_EXPN2: VAR ARRAY_ACCESS . UPLUS
   57          | VAR ARRAY_ACCESS . UMINUS
   62 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   63             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 115
    UPLUS   shift, and go to state 116
    UMINUS  shift, and go to state 117


State 173

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB . LCB BODY2 RCB

    LCB  shift, and go to state 177


State 174

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 178


State 175

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 179
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 176

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 180
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 177

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 181
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 178

   33 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 179

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 182


State 180

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 183


State 181

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 . RCB

    RCB  shift, and go to state 184


State 182

   29 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 29 (PROGRAM_STATEMENTS)


State 183

   31 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 31 (PROGRAM_STATEMENTS)


State 184

   34 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)
