State 141 conflicts: 2 shift/reduce
State 159 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   14 VAR_LIST: VAR COMA VAR_LIST
   15         | ARRAY_DECLARATION COMA VAR_LIST
   16         | PTR_VAR COMA VAR_LIST
   17         | VAR
   18         | ARRAY_DECLARATION
   19         | PTR_VAR

   20 PTR_VAR: PTR_DEPTH VAR

   21 PTR_DEPTH: MUL PTR_DEPTH
   22          | MUL

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   25           | LSQRB NUMBER RSQRB

   26 MAIN_TYPE: INT

   27 DATA_TYPE: INT
   28          | CHAR
   29          | FLOAT
   30          | DOUBLE

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC
   32                   | SC
   33                   | VAR_EXPN2 SC
   34                   | POINTER_STATEMENTS SC
   35                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   37                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   38                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   39                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   40                   | FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

   41 POINTER_STATEMENTS: POINTER_STATEMENTS_LHS EQ A_EXPN

   42 POINTER_STATEMENTS_LHS: MUL A_EXPN

   43 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   44             | LOGICAL_EXPN1

   45 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   46              | LOGICAL_EXPN2
   47              | NOT LB LOGICAL_EXPN1 RB
   48              | LB LOGICAL_EXPN1 RB

   49 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH COMP_OPERATOR LOGICAL_EXPN2_ARTH

   50 LOGICAL_EXPN2_ARTH: A_EXPN

   51 COMP_OPERATOR: ET
   52              | GT
   53              | LT
   54              | GTE
   55              | LTE
   56              | NE

   57 LOGICAL_OPERATOR: AMPER AMPER
   58                 | OR

   59 VAR_EXPN1: VAR EQ A_EXPN
   60          | VAR_ARRAY_ACCESS_LHS EQ A_EXPN

   61 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS
   62          | VAR UNARY_OPERATORS

   63 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS

   64 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS

   65 $@1: %empty

   66 ARRAY_ACCESS: ARRAY_ACCESS LSQRB $@1 A_EXPN RSQRB

   67 $@2: %empty

   68 ARRAY_ACCESS: LSQRB $@2 A_EXPN RSQRB

   69 A_EXPN: A_EXPN PLUS A_EXPN
   70       | A_EXPN MINUS A_EXPN
   71       | A_EXPN MUL A_EXPN
   72       | A_EXPN DIV A_EXPN
   73       | A_EXPN MOD A_EXPN
   74       | A_EXPN EXP A_EXPN
   75       | LB A_EXPN RB
   76       | NUMBER
   77       | A_EXPN UNARY_OPERATORS
   78       | VAR
   79       | MUL A_EXPN
   80       | VAR_ARRAY_ACCESS_RHS
   81       | AMPER A_EXPN

   82 UNARY_OPERATORS: UPLUS
   83                | UMINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 35 36 37 38 39 40 43 47 48 75
    RB (263) 1 35 36 37 38 39 40 43 47 48 75
    LCB (264) 1 35 36 37 38 39 40
    RCB (265) 1 35 36 37 38 39 40
    LSQRB (266) 24 25 66 68
    RSQRB (267) 24 25 66 68
    SC (268) 13 31 32 33 34 39 40
    COLON (269) 35
    QMARK (270) 35
    COMA (271) 14 15 16
    IF (272) 36 37
    ELSE (273) 37
    FOR (274) 40
    DO (275) 39
    WHILE (276) 38 39
    ET (277) 51
    EQ (278) 41 59 60
    GT (279) 4 52
    LT (280) 4 53
    GTE (281) 54
    LTE (282) 55
    NE (283) 56
    AMPER (284) 57 81
    OR (285) 58
    NOT (286) 43 47
    DQUOTE (287) 5
    PLUS (288) 69
    MINUS (289) 70
    MUL (290) 21 22 42 71 79
    DIV (291) 6 7 72
    MOD (292) 73
    EXP (293) 74
    UPLUS (294) 82
    UMINUS (295) 83
    INT <data_type> (296) 26 27
    CHAR <data_type> (297) 28
    FLOAT <data_type> (298) 29
    DOUBLE <data_type> (299) 30
    VAR <var_name> (300) 6 14 17 20 23 59 61 62 63 64 78
    NUMBER <integer_val> (301) 24 25 76


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 35 36 37 38 39 40
    DECLARATION_STATEMENTS (54)
        on left: 13
        on right: 9 11
    VAR_LIST (55)
        on left: 14 15 16 17 18 19
        on right: 13 14 15 16
    PTR_VAR (56)
        on left: 20
        on right: 16 19
    PTR_DEPTH (57)
        on left: 21 22
        on right: 20 21
    ARRAY_DECLARATION (58)
        on left: 23
        on right: 15 18
    ARRAY_SIZE (59)
        on left: 24 25
        on right: 23 24
    MAIN_TYPE (60)
        on left: 26
        on right: 1
    DATA_TYPE <data_type> (61)
        on left: 27 28 29 30
        on right: 13
    PROGRAM_STATEMENTS (62)
        on left: 31 32 33 34 35 36 37 38 39 40
        on right: 12
    POINTER_STATEMENTS (63)
        on left: 41
        on right: 34
    POINTER_STATEMENTS_LHS <EXPN_type> (64)
        on left: 42
        on right: 41
    LOGICAL_EXPN (65)
        on left: 43 44
        on right: 35 36 37 38 39 40
    LOGICAL_EXPN1 (66)
        on left: 45 46 47 48
        on right: 43 44 45 47 48
    LOGICAL_EXPN2 (67)
        on left: 49
        on right: 46
    LOGICAL_EXPN2_ARTH (68)
        on left: 50
        on right: 49
    COMP_OPERATOR (69)
        on left: 51 52 53 54 55 56
        on right: 49
    LOGICAL_OPERATOR (70)
        on left: 57 58
        on right: 45
    VAR_EXPN1 (71)
        on left: 59 60
        on right: 31 40
    VAR_EXPN2 (72)
        on left: 61 62
        on right: 33 40
    VAR_ARRAY_ACCESS_LHS <var_name> (73)
        on left: 63
        on right: 60
    VAR_ARRAY_ACCESS_RHS <var_name> (74)
        on left: 64
        on right: 80
    ARRAY_ACCESS (75)
        on left: 66 68
        on right: 61 63 64 66
    $@1 (76)
        on left: 65
        on right: 66
    $@2 (77)
        on left: 67
        on right: 68
    A_EXPN <EXPN_type> (78)
        on left: 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 41 42 50 59 60 66 68 69 70 71 72 73 74 75 77 79 81
    UNARY_OPERATORS (79)
        on left: 82 83
        on right: 61 62 77


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   26 MAIN_TYPE: INT .

    $default  reduce using rule 26 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DATA_TYPE               go to state 30


State 24

   27 DATA_TYPE: INT .

    $default  reduce using rule 27 (DATA_TYPE)


State 25

   28 DATA_TYPE: CHAR .

    $default  reduce using rule 28 (DATA_TYPE)


State 26

   29 DATA_TYPE: FLOAT .

    $default  reduce using rule 29 (DATA_TYPE)


State 27

   30 DATA_TYPE: DOUBLE .

    $default  reduce using rule 30 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 31


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 40
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 30

   13 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    MUL  shift, and go to state 48
    VAR  shift, and go to state 49

    VAR_LIST           go to state 50
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 31

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 32

   35 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 56
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN          go to state 60
    LOGICAL_EXPN1         go to state 61
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 33

   32 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 34

   36 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   37                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 66


State 35

   40 PROGRAM_STATEMENTS: FOR . LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB  shift, and go to state 67


State 36

   39 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 68


State 37

   38 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 69


State 38

   42 POINTER_STATEMENTS_LHS: MUL . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 71


State 39

   59 VAR_EXPN1: VAR . EQ A_EXPN
   61 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   62          | VAR . UNARY_OPERATORS
   63 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB   shift, and go to state 72
    EQ      shift, and go to state 73
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    ARRAY_ACCESS     go to state 76
    UNARY_OPERATORS  go to state 77


State 40

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 41

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 78
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 42

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 79
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 43

   34 PROGRAM_STATEMENTS: POINTER_STATEMENTS . SC

    SC  shift, and go to state 80


State 44

   41 POINTER_STATEMENTS: POINTER_STATEMENTS_LHS . EQ A_EXPN

    EQ  shift, and go to state 81


State 45

   31 PROGRAM_STATEMENTS: VAR_EXPN1 . SC

    SC  shift, and go to state 82


State 46

   33 PROGRAM_STATEMENTS: VAR_EXPN2 . SC

    SC  shift, and go to state 83


State 47

   60 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS . EQ A_EXPN

    EQ  shift, and go to state 84


State 48

   21 PTR_DEPTH: MUL . PTR_DEPTH
   22          | MUL .

    MUL  shift, and go to state 48

    $default  reduce using rule 22 (PTR_DEPTH)

    PTR_DEPTH  go to state 85


State 49

   14 VAR_LIST: VAR . COMA VAR_LIST
   17         | VAR .
   23 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 86
    COMA   shift, and go to state 87

    $default  reduce using rule 17 (VAR_LIST)

    ARRAY_SIZE  go to state 88


State 50

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 89


State 51

   16 VAR_LIST: PTR_VAR . COMA VAR_LIST
   19         | PTR_VAR .

    COMA  shift, and go to state 90

    $default  reduce using rule 19 (VAR_LIST)


State 52

   20 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 91


State 53

   15 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   18         | ARRAY_DECLARATION .

    COMA  shift, and go to state 92

    $default  reduce using rule 18 (VAR_LIST)


State 54

   48 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   75 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 93
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN1         go to state 94
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 95


State 55

   81 A_EXPN: AMPER . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 96


State 56

   43 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   47 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 97


State 57

   79 A_EXPN: MUL . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 98


State 58

   64 VAR_ARRAY_ACCESS_RHS: VAR . ARRAY_ACCESS
   78 A_EXPN: VAR .

    LSQRB  shift, and go to state 72

    $default  reduce using rule 78 (A_EXPN)

    ARRAY_ACCESS  go to state 99


State 59

   76 A_EXPN: NUMBER .

    $default  reduce using rule 76 (A_EXPN)


State 60

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 100


State 61

   44 LOGICAL_EXPN: LOGICAL_EXPN1 .
   45 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AMPER  shift, and go to state 101
    OR     shift, and go to state 102

    $default  reduce using rule 44 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 103


State 62

   46 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 46 (LOGICAL_EXPN1)


State 63

   49 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH . COMP_OPERATOR LOGICAL_EXPN2_ARTH

    ET   shift, and go to state 104
    GT   shift, and go to state 105
    LT   shift, and go to state 106
    GTE  shift, and go to state 107
    LTE  shift, and go to state 108
    NE   shift, and go to state 109

    COMP_OPERATOR  go to state 110


State 64

   80 A_EXPN: VAR_ARRAY_ACCESS_RHS .

    $default  reduce using rule 80 (A_EXPN)


State 65

   50 LOGICAL_EXPN2_ARTH: A_EXPN .
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 50 (LOGICAL_EXPN2_ARTH)

    UNARY_OPERATORS  go to state 117


State 66

   36 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   37                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 56
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN          go to state 118
    LOGICAL_EXPN1         go to state 61
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 67

   40 PROGRAM_STATEMENTS: FOR LB . VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 119

    VAR_EXPN1             go to state 120
    VAR_ARRAY_ACCESS_LHS  go to state 47


State 68

   39 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 121
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 69

   38 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 56
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN          go to state 122
    LOGICAL_EXPN1         go to state 61
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 70

   75 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 123


State 71

   42 POINTER_STATEMENTS_LHS: MUL A_EXPN .
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 42 (POINTER_STATEMENTS_LHS)

    UNARY_OPERATORS  go to state 117


State 72

   68 ARRAY_ACCESS: LSQRB . $@2 A_EXPN RSQRB

    $default  reduce using rule 67 ($@2)

    $@2  go to state 124


State 73

   59 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 125


State 74

   82 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 82 (UNARY_OPERATORS)


State 75

   83 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 83 (UNARY_OPERATORS)


State 76

   61 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   63 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   66 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB $@1 A_EXPN RSQRB

    LSQRB   shift, and go to state 126
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 63 (VAR_ARRAY_ACCESS_LHS)

    UNARY_OPERATORS  go to state 127


State 77

   62 VAR_EXPN2: VAR UNARY_OPERATORS .

    $default  reduce using rule 62 (VAR_EXPN2)


State 78

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 79

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 80

   34 PROGRAM_STATEMENTS: POINTER_STATEMENTS SC .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)


State 81

   41 POINTER_STATEMENTS: POINTER_STATEMENTS_LHS EQ . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 128


State 82

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC .

    $default  reduce using rule 31 (PROGRAM_STATEMENTS)


State 83

   33 PROGRAM_STATEMENTS: VAR_EXPN2 SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 84

   60 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 129


State 85

   21 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 21 (PTR_DEPTH)


State 86

   25 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 130


State 87

   14 VAR_LIST: VAR COMA . VAR_LIST

    MUL  shift, and go to state 48
    VAR  shift, and go to state 49

    VAR_LIST           go to state 131
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 88

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   24 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 132

    $default  reduce using rule 23 (ARRAY_DECLARATION)


State 89

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 90

   16 VAR_LIST: PTR_VAR COMA . VAR_LIST

    MUL  shift, and go to state 48
    VAR  shift, and go to state 49

    VAR_LIST           go to state 133
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 91

   20 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 20 (PTR_VAR)


State 92

   15 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    MUL  shift, and go to state 48
    VAR  shift, and go to state 49

    VAR_LIST           go to state 134
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 93

   47 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 135


State 94

   45 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   48              | LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 136
    AMPER  shift, and go to state 101
    OR     shift, and go to state 102

    LOGICAL_OPERATOR  go to state 103


State 95

   50 LOGICAL_EXPN2_ARTH: A_EXPN .
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   75       | LB A_EXPN . RB
   77       | A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 137
    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 50 (LOGICAL_EXPN2_ARTH)

    UNARY_OPERATORS  go to state 117


State 96

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS
   81       | AMPER A_EXPN .

    $default  reduce using rule 81 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 97

   43 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   47 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 93
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN1         go to state 138
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 98

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS
   79       | MUL A_EXPN .

    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 79 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 99

   64 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS .
   66 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB $@1 A_EXPN RSQRB

    LSQRB  shift, and go to state 126

    $default  reduce using rule 64 (VAR_ARRAY_ACCESS_RHS)


State 100

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 139


State 101

   57 LOGICAL_OPERATOR: AMPER . AMPER

    AMPER  shift, and go to state 140


State 102

   58 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 58 (LOGICAL_OPERATOR)


State 103

   45 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 93
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN1         go to state 141
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 104

   51 COMP_OPERATOR: ET .

    $default  reduce using rule 51 (COMP_OPERATOR)


State 105

   52 COMP_OPERATOR: GT .

    $default  reduce using rule 52 (COMP_OPERATOR)


State 106

   53 COMP_OPERATOR: LT .

    $default  reduce using rule 53 (COMP_OPERATOR)


State 107

   54 COMP_OPERATOR: GTE .

    $default  reduce using rule 54 (COMP_OPERATOR)


State 108

   55 COMP_OPERATOR: LTE .

    $default  reduce using rule 55 (COMP_OPERATOR)


State 109

   56 COMP_OPERATOR: NE .

    $default  reduce using rule 56 (COMP_OPERATOR)


State 110

   49 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH COMP_OPERATOR . LOGICAL_EXPN2_ARTH

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN2_ARTH    go to state 142
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 111

   69 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 143


State 112

   70 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 144


State 113

   71 A_EXPN: A_EXPN MUL . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 145


State 114

   72 A_EXPN: A_EXPN DIV . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 146


State 115

   73 A_EXPN: A_EXPN MOD . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 147


State 116

   74 A_EXPN: A_EXPN EXP . A_EXPN

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 148


State 117

   77 A_EXPN: A_EXPN UNARY_OPERATORS .

    $default  reduce using rule 77 (A_EXPN)


State 118

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   37                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 149


State 119

   59 VAR_EXPN1: VAR . EQ A_EXPN
   63 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB  shift, and go to state 72
    EQ     shift, and go to state 73

    ARRAY_ACCESS  go to state 150


State 120

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 . SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 151


State 121

   39 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 152


State 122

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 153


State 123

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   75       | LB A_EXPN . RB
   77       | A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 137
    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    UNARY_OPERATORS  go to state 117


State 124

   68 ARRAY_ACCESS: LSQRB $@2 . A_EXPN RSQRB

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 154


State 125

   59 VAR_EXPN1: VAR EQ A_EXPN .
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 59 (VAR_EXPN1)

    UNARY_OPERATORS  go to state 117


State 126

   66 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . $@1 A_EXPN RSQRB

    $default  reduce using rule 65 ($@1)

    $@1  go to state 155


State 127

   61 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS .

    $default  reduce using rule 61 (VAR_EXPN2)


State 128

   41 POINTER_STATEMENTS: POINTER_STATEMENTS_LHS EQ A_EXPN .
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 41 (POINTER_STATEMENTS)

    UNARY_OPERATORS  go to state 117


State 129

   60 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ A_EXPN .
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 60 (VAR_EXPN1)

    UNARY_OPERATORS  go to state 117


State 130

   25 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 156


State 131

   14 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 14 (VAR_LIST)


State 132

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 157


State 133

   16 VAR_LIST: PTR_VAR COMA VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 134

   15 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 135

   47 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 93
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN1         go to state 158
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 136

   48 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 48 (LOGICAL_EXPN1)


State 137

   75 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 75 (A_EXPN)


State 138

   43 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   45 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   47              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 159
    AMPER  shift, and go to state 101
    OR     shift, and go to state 102

    LOGICAL_OPERATOR  go to state 103


State 139

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 160


State 140

   57 LOGICAL_OPERATOR: AMPER AMPER .

    $default  reduce using rule 57 (LOGICAL_OPERATOR)


State 141

   45 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   45              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AMPER  shift, and go to state 101
    OR     shift, and go to state 102

    AMPER     [reduce using rule 45 (LOGICAL_EXPN1)]
    OR        [reduce using rule 45 (LOGICAL_EXPN1)]
    $default  reduce using rule 45 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 103


State 142

   49 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH COMP_OPERATOR LOGICAL_EXPN2_ARTH .

    $default  reduce using rule 49 (LOGICAL_EXPN2)


State 143

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   69       | A_EXPN PLUS A_EXPN .
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 69 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 144

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   70       | A_EXPN MINUS A_EXPN .
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 70 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 145

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   71       | A_EXPN MUL A_EXPN .
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 71 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 146

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   72       | A_EXPN DIV A_EXPN .
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 72 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 147

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   73       | A_EXPN MOD A_EXPN .
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    $default  reduce using rule 73 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 148

   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   74       | A_EXPN EXP A_EXPN .
   77       | A_EXPN . UNARY_OPERATORS

    EXP  shift, and go to state 116

    $default  reduce using rule 74 (A_EXPN)

    UNARY_OPERATORS  go to state 117


State 149

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   37                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 161


State 150

   63 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   66 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB $@1 A_EXPN RSQRB

    LSQRB  shift, and go to state 126

    $default  reduce using rule 63 (VAR_ARRAY_ACCESS_LHS)


State 151

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC . LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 56
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN          go to state 162
    LOGICAL_EXPN1         go to state 61
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 152

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 163


State 153

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 164


State 154

   68 ARRAY_ACCESS: LSQRB $@2 A_EXPN . RSQRB
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 165
    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    UNARY_OPERATORS  go to state 117


State 155

   66 ARRAY_ACCESS: ARRAY_ACCESS LSQRB $@1 . A_EXPN RSQRB

    LB      shift, and go to state 70
    AMPER   shift, and go to state 55
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 166


State 156

   25 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 25 (ARRAY_SIZE)


State 157

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 167


State 158

   45 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   47              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 168
    AMPER  shift, and go to state 101
    OR     shift, and go to state 102

    LOGICAL_OPERATOR  go to state 103


State 159

   43 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   47 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 43 (LOGICAL_EXPN)
    RB        [reduce using rule 47 (LOGICAL_EXPN1)]
    SC        reduce using rule 43 (LOGICAL_EXPN)
    SC        [reduce using rule 47 (LOGICAL_EXPN1)]
    AMPER     reduce using rule 47 (LOGICAL_EXPN1)
    OR        reduce using rule 47 (LOGICAL_EXPN1)
    $default  reduce using rule 43 (LOGICAL_EXPN)


State 160

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 169
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 161

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   37                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 170
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 162

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN . SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 171


State 163

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 172


State 164

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 173
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 165

   68 ARRAY_ACCESS: LSQRB $@2 A_EXPN RSQRB .

    $default  reduce using rule 68 (ARRAY_ACCESS)


State 166

   66 ARRAY_ACCESS: ARRAY_ACCESS LSQRB $@1 A_EXPN . RSQRB
   69 A_EXPN: A_EXPN . PLUS A_EXPN
   70       | A_EXPN . MINUS A_EXPN
   71       | A_EXPN . MUL A_EXPN
   72       | A_EXPN . DIV A_EXPN
   73       | A_EXPN . MOD A_EXPN
   74       | A_EXPN . EXP A_EXPN
   77       | A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 174
    PLUS    shift, and go to state 111
    MINUS   shift, and go to state 112
    MUL     shift, and go to state 113
    DIV     shift, and go to state 114
    MOD     shift, and go to state 115
    EXP     shift, and go to state 116
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    UNARY_OPERATORS  go to state 117


State 167

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 24 (ARRAY_SIZE)


State 168

   47 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 47 (LOGICAL_EXPN1)


State 169

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 175


State 170

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   37                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 176


State 171

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC . VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 177

    VAR_EXPN2  go to state 178


State 172

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 54
    AMPER   shift, and go to state 55
    NOT     shift, and go to state 56
    MUL     shift, and go to state 57
    VAR     shift, and go to state 58
    NUMBER  shift, and go to state 59

    LOGICAL_EXPN          go to state 179
    LOGICAL_EXPN1         go to state 61
    LOGICAL_EXPN2         go to state 62
    LOGICAL_EXPN2_ARTH    go to state 63
    VAR_ARRAY_ACCESS_RHS  go to state 64
    A_EXPN                go to state 65


State 173

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 180


State 174

   66 ARRAY_ACCESS: ARRAY_ACCESS LSQRB $@1 A_EXPN RSQRB .

    $default  reduce using rule 66 (ARRAY_ACCESS)


State 175

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 181


State 176

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   37                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 182

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 177

   61 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   62          | VAR . UNARY_OPERATORS

    LSQRB   shift, and go to state 72
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    ARRAY_ACCESS     go to state 183
    UNARY_OPERATORS  go to state 77


State 178

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 . RB LCB BODY2 RCB

    RB  shift, and go to state 184


State 179

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 185


State 180

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)


State 181

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 186


State 182

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 187


State 183

   61 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   66 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB $@1 A_EXPN RSQRB

    LSQRB   shift, and go to state 126
    UPLUS   shift, and go to state 74
    UMINUS  shift, and go to state 75

    UNARY_OPERATORS  go to state 127


State 184

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB . LCB BODY2 RCB

    LCB  shift, and go to state 188


State 185

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 189


State 186

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 190
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 187

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 191
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 188

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    MUL     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 39

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 192
    DECLARATION_STATEMENTS  go to state 41
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 42
    POINTER_STATEMENTS      go to state 43
    POINTER_STATEMENTS_LHS  go to state 44
    VAR_EXPN1               go to state 45
    VAR_EXPN2               go to state 46
    VAR_ARRAY_ACCESS_LHS    go to state 47


State 189

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)


State 190

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 193


State 191

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 194


State 192

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 . RCB

    RCB  shift, and go to state 195


State 193

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 194

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 195

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB .

    $default  reduce using rule 40 (PROGRAM_STATEMENTS)
