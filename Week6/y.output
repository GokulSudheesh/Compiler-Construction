State 118 conflicts: 8 shift/reduce
State 119 conflicts: 8 shift/reduce
State 131 conflicts: 2 shift/reduce
State 142 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   14 VAR_LIST: VAR COMA VAR_LIST
   15         | ARRAY_DECLARATION COMA VAR_LIST
   16         | PTR_VAR COMA VAR_LIST
   17         | VAR
   18         | ARRAY_DECLARATION
   19         | PTR_VAR

   20 PTR_VAR: PTR_DEPTH VAR

   21 PTR_DEPTH: MUL PTR_DEPTH
   22          | MUL

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   25           | LSQRB NUMBER RSQRB

   26 MAIN_TYPE: INT

   27 DATA_TYPE: INT
   28          | CHAR
   29          | FLOAT
   30          | DOUBLE

   31 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC
   32                   | SC
   33                   | INCR_DCR_EXPN SC
   34                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   35                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   37                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   38                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   39                   | FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB BODY2 RCB

   40 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN

   41 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   42             | LOGICAL_EXPN1

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   44              | LOGICAL_EXPN2
   45              | NOT LB LOGICAL_EXPN1 RB
   46              | LB LOGICAL_EXPN1 RB

   47 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   48 COMP_OPERATOR: ET
   49              | GT
   50              | LT
   51              | GTE
   52              | LTE
   53              | NE

   54 LOGICAL_OPERATOR: AMPER AMPER
   55                 | OR

   56 A_EXPN: A_EXPN OPR_PREC1 A_EXPN
   57       | A_EXPN OPR_PREC2 A_EXPN
   58       | LB A_EXPN RB
   59       | INCR_DCR_EXPN
   60       | VAR
   61       | NUMBER
   62       | MUL A_EXPN
   63       | ARRAY_ACCESS
   64       | AMPER A_EXPN

   65 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB
   66             | VAR LSQRB A_EXPN RSQRB

   67 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS

   68 UNARY_OPERATORS: UPLUS
   69                | UMINUS

   70 OPR_PREC1: PLUS
   71          | MINUS

   72 OPR_PREC2: DIV
   73          | MUL
   74          | EXP
   75          | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 34 35 36 37 38 39 41 45 46 58
    RB (263) 1 34 35 36 37 38 39 41 45 46 58
    LCB (264) 1 34 35 36 37 38 39
    RCB (265) 1 34 35 36 37 38 39
    LSQRB (266) 24 25 65 66
    RSQRB (267) 24 25 65 66
    SC (268) 13 31 32 33 38 39
    COLON (269) 34
    QMARK (270) 34
    COMA (271) 14 15 16
    IF (272) 35 36
    ELSE (273) 36
    FOR (274) 39
    DO (275) 38
    WHILE (276) 37 38
    ET (277) 48
    EQ (278) 40
    GT (279) 4 49
    LT (280) 4 50
    GTE (281) 51
    LTE (282) 52
    NE (283) 53
    AMPER (284) 54 64
    OR (285) 55
    NOT (286) 41 45
    DQUOTE (287) 5
    PLUS (288) 70
    MINUS (289) 71
    MUL (290) 21 22 62 73
    DIV (291) 6 7 72
    MOD (292) 75
    EXP (293) 74
    UPLUS (294) 68
    UMINUS (295) 69
    INT <data_type> (296) 26 27
    CHAR <data_type> (297) 28
    FLOAT <data_type> (298) 29
    DOUBLE <data_type> (299) 30
    VAR <var_name> (300) 6 14 17 20 23 60 66
    NUMBER <integer_val> (301) 24 25 61


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 34 35 36 37 38 39
    DECLARATION_STATEMENTS (54)
        on left: 13
        on right: 9 11
    VAR_LIST (55)
        on left: 14 15 16 17 18 19
        on right: 13 14 15 16
    PTR_VAR (56)
        on left: 20
        on right: 16 19
    PTR_DEPTH (57)
        on left: 21 22
        on right: 20 21
    ARRAY_DECLARATION (58)
        on left: 23
        on right: 15 18
    ARRAY_SIZE (59)
        on left: 24 25
        on right: 23 24
    MAIN_TYPE (60)
        on left: 26
        on right: 1
    DATA_TYPE <data_type> (61)
        on left: 27 28 29 30
        on right: 13
    PROGRAM_STATEMENTS (62)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 12
    ASSIGNMENT_STATEMENT (63)
        on left: 40
        on right: 31 39
    LOGICAL_EXPN (64)
        on left: 41 42
        on right: 34 35 36 37 38 39
    LOGICAL_EXPN1 (65)
        on left: 43 44 45 46
        on right: 41 42 43 45 46
    LOGICAL_EXPN2 (66)
        on left: 47
        on right: 44
    COMP_OPERATOR (67)
        on left: 48 49 50 51 52 53
        on right: 47
    LOGICAL_OPERATOR (68)
        on left: 54 55
        on right: 43
    A_EXPN <EXPN_type> (69)
        on left: 56 57 58 59 60 61 62 63 64
        on right: 40 47 56 57 58 62 64 65 66 67
    ARRAY_ACCESS <EXPN_type> (70)
        on left: 65 66
        on right: 63 65
    INCR_DCR_EXPN <EXPN_type> (71)
        on left: 67
        on right: 33 39 59
    UNARY_OPERATORS (72)
        on left: 68 69
        on right: 67
    OPR_PREC1 (73)
        on left: 70 71
        on right: 56
    OPR_PREC2 (74)
        on left: 72 73 74 75
        on right: 57


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   26 MAIN_TYPE: INT .

    $default  reduce using rule 26 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DATA_TYPE               go to state 30


State 24

   27 DATA_TYPE: INT .

    $default  reduce using rule 27 (DATA_TYPE)


State 25

   28 DATA_TYPE: CHAR .

    $default  reduce using rule 28 (DATA_TYPE)


State 26

   29 DATA_TYPE: FLOAT .

    $default  reduce using rule 29 (DATA_TYPE)


State 27

   30 DATA_TYPE: DOUBLE .

    $default  reduce using rule 30 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 31


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 42
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 30

   13 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    MUL  shift, and go to state 49
    VAR  shift, and go to state 50

    VAR_LIST           go to state 51
    PTR_VAR            go to state 52
    PTR_DEPTH          go to state 53
    ARRAY_DECLARATION  go to state 54


State 31

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 32

   34 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   58 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 56
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN   go to state 57
    LOGICAL_EXPN1  go to state 58
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 60
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 33

   32 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 34

   35 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 62


State 35

   39 PROGRAM_STATEMENTS: FOR . LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 63


State 36

   38 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 64


State 37

   37 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 65


State 38

   64 A_EXPN: AMPER . A_EXPN

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 67
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 39

   62 A_EXPN: MUL . A_EXPN

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 68
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 40

   60 A_EXPN: VAR .
   66 ARRAY_ACCESS: VAR . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 69

    $default  reduce using rule 60 (A_EXPN)


State 41

   61 A_EXPN: NUMBER .

    $default  reduce using rule 61 (A_EXPN)


State 42

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 43

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 70
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 44

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 71
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 45

   31 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT . SC

    SC  shift, and go to state 72


State 46

   40 ASSIGNMENT_STATEMENT: A_EXPN . EQ A_EXPN
   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EQ      shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 47

   63 A_EXPN: ARRAY_ACCESS .
   65 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 85

    $default  reduce using rule 63 (A_EXPN)


State 48

   33 PROGRAM_STATEMENTS: INCR_DCR_EXPN . SC
   59 A_EXPN: INCR_DCR_EXPN .

    SC  shift, and go to state 86

    $default  reduce using rule 59 (A_EXPN)


State 49

   21 PTR_DEPTH: MUL . PTR_DEPTH
   22          | MUL .

    MUL  shift, and go to state 49

    $default  reduce using rule 22 (PTR_DEPTH)

    PTR_DEPTH  go to state 87


State 50

   14 VAR_LIST: VAR . COMA VAR_LIST
   17         | VAR .
   23 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 88
    COMA   shift, and go to state 89

    $default  reduce using rule 17 (VAR_LIST)

    ARRAY_SIZE  go to state 90


State 51

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 91


State 52

   16 VAR_LIST: PTR_VAR . COMA VAR_LIST
   19         | PTR_VAR .

    COMA  shift, and go to state 92

    $default  reduce using rule 19 (VAR_LIST)


State 53

   20 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 93


State 54

   15 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   18         | ARRAY_DECLARATION .

    COMA  shift, and go to state 94

    $default  reduce using rule 18 (VAR_LIST)


State 55

   46 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   58 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 95
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN1  go to state 96
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 60
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 56

   41 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   45 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 97


State 57

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 98


State 58

   42 LOGICAL_EXPN: LOGICAL_EXPN1 .
   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AMPER  shift, and go to state 99
    OR     shift, and go to state 100

    $default  reduce using rule 42 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 101


State 59

   44 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 44 (LOGICAL_EXPN1)


State 60

   47 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   58       | LB A_EXPN . RB
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 102
    ET      shift, and go to state 103
    GT      shift, and go to state 104
    LT      shift, and go to state 105
    GTE     shift, and go to state 106
    LTE     shift, and go to state 107
    NE      shift, and go to state 108
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    COMP_OPERATOR    go to state 109
    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 61

   59 A_EXPN: INCR_DCR_EXPN .

    $default  reduce using rule 59 (A_EXPN)


State 62

   35 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 56
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN   go to state 110
    LOGICAL_EXPN1  go to state 58
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 111
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 63

   39 PROGRAM_STATEMENTS: FOR LB . ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    ASSIGNMENT_STATEMENT  go to state 112
    A_EXPN                go to state 46
    ARRAY_ACCESS          go to state 47
    INCR_DCR_EXPN         go to state 61


State 64

   38 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 113
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 65

   37 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 56
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN   go to state 114
    LOGICAL_EXPN1  go to state 58
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 111
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 66

   58 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 115
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 67

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   64       | AMPER A_EXPN .
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    $default  reduce using rule 64 (A_EXPN)

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 68

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   62       | MUL A_EXPN .
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    $default  reduce using rule 62 (A_EXPN)

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 69

   66 ARRAY_ACCESS: VAR LSQRB . A_EXPN RSQRB

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 116
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 70

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 71

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 72

   31 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC .

    $default  reduce using rule 31 (PROGRAM_STATEMENTS)


State 73

   40 ASSIGNMENT_STATEMENT: A_EXPN EQ . A_EXPN

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 117
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 74

   70 OPR_PREC1: PLUS .

    $default  reduce using rule 70 (OPR_PREC1)


State 75

   71 OPR_PREC1: MINUS .

    $default  reduce using rule 71 (OPR_PREC1)


State 76

   73 OPR_PREC2: MUL .

    $default  reduce using rule 73 (OPR_PREC2)


State 77

   72 OPR_PREC2: DIV .

    $default  reduce using rule 72 (OPR_PREC2)


State 78

   75 OPR_PREC2: MOD .

    $default  reduce using rule 75 (OPR_PREC2)


State 79

   74 OPR_PREC2: EXP .

    $default  reduce using rule 74 (OPR_PREC2)


State 80

   68 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 68 (UNARY_OPERATORS)


State 81

   69 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 69 (UNARY_OPERATORS)


State 82

   67 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS .

    $default  reduce using rule 67 (INCR_DCR_EXPN)


State 83

   56 A_EXPN: A_EXPN OPR_PREC1 . A_EXPN

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 118
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 84

   57 A_EXPN: A_EXPN OPR_PREC2 . A_EXPN

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 119
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 85

   65 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . A_EXPN RSQRB

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 120
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 86

   33 PROGRAM_STATEMENTS: INCR_DCR_EXPN SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 87

   21 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 21 (PTR_DEPTH)


State 88

   25 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 121


State 89

   14 VAR_LIST: VAR COMA . VAR_LIST

    MUL  shift, and go to state 49
    VAR  shift, and go to state 50

    VAR_LIST           go to state 122
    PTR_VAR            go to state 52
    PTR_DEPTH          go to state 53
    ARRAY_DECLARATION  go to state 54


State 90

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   24 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 123

    $default  reduce using rule 23 (ARRAY_DECLARATION)


State 91

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 92

   16 VAR_LIST: PTR_VAR COMA . VAR_LIST

    MUL  shift, and go to state 49
    VAR  shift, and go to state 50

    VAR_LIST           go to state 124
    PTR_VAR            go to state 52
    PTR_DEPTH          go to state 53
    ARRAY_DECLARATION  go to state 54


State 93

   20 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 20 (PTR_VAR)


State 94

   15 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    MUL  shift, and go to state 49
    VAR  shift, and go to state 50

    VAR_LIST           go to state 125
    PTR_VAR            go to state 52
    PTR_DEPTH          go to state 53
    ARRAY_DECLARATION  go to state 54


State 95

   45 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 126


State 96

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   46              | LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 127
    AMPER  shift, and go to state 99
    OR     shift, and go to state 100

    LOGICAL_OPERATOR  go to state 101


State 97

   41 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   45 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 95
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN1  go to state 128
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 111
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 98

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 129


State 99

   54 LOGICAL_OPERATOR: AMPER . AMPER

    AMPER  shift, and go to state 130


State 100

   55 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 55 (LOGICAL_OPERATOR)


State 101

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 95
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN1  go to state 131
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 111
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 102

   58 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 58 (A_EXPN)


State 103

   48 COMP_OPERATOR: ET .

    $default  reduce using rule 48 (COMP_OPERATOR)


State 104

   49 COMP_OPERATOR: GT .

    $default  reduce using rule 49 (COMP_OPERATOR)


State 105

   50 COMP_OPERATOR: LT .

    $default  reduce using rule 50 (COMP_OPERATOR)


State 106

   51 COMP_OPERATOR: GTE .

    $default  reduce using rule 51 (COMP_OPERATOR)


State 107

   52 COMP_OPERATOR: LTE .

    $default  reduce using rule 52 (COMP_OPERATOR)


State 108

   53 COMP_OPERATOR: NE .

    $default  reduce using rule 53 (COMP_OPERATOR)


State 109

   47 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 132
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 110

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 133


State 111

   47 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    ET      shift, and go to state 103
    GT      shift, and go to state 104
    LT      shift, and go to state 105
    GTE     shift, and go to state 106
    LTE     shift, and go to state 107
    NE      shift, and go to state 108
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    COMP_OPERATOR    go to state 109
    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 112

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT . SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB BODY2 RCB

    SC  shift, and go to state 134


State 113

   38 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 135


State 114

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 136


State 115

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   58       | LB A_EXPN . RB
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 102
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 116

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   66 ARRAY_ACCESS: VAR LSQRB A_EXPN . RSQRB
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 137
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 117

   40 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN .
   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    $default  reduce using rule 40 (ASSIGNMENT_STATEMENT)

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 118

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   56       | A_EXPN OPR_PREC1 A_EXPN .
   57       | A_EXPN . OPR_PREC2 A_EXPN
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    PLUS      [reduce using rule 56 (A_EXPN)]
    MINUS     [reduce using rule 56 (A_EXPN)]
    MUL       [reduce using rule 56 (A_EXPN)]
    DIV       [reduce using rule 56 (A_EXPN)]
    MOD       [reduce using rule 56 (A_EXPN)]
    EXP       [reduce using rule 56 (A_EXPN)]
    UPLUS     [reduce using rule 56 (A_EXPN)]
    UMINUS    [reduce using rule 56 (A_EXPN)]
    $default  reduce using rule 56 (A_EXPN)

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 119

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   57       | A_EXPN OPR_PREC2 A_EXPN .
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    PLUS      [reduce using rule 57 (A_EXPN)]
    MINUS     [reduce using rule 57 (A_EXPN)]
    MUL       [reduce using rule 57 (A_EXPN)]
    DIV       [reduce using rule 57 (A_EXPN)]
    MOD       [reduce using rule 57 (A_EXPN)]
    EXP       [reduce using rule 57 (A_EXPN)]
    UPLUS     [reduce using rule 57 (A_EXPN)]
    UMINUS    [reduce using rule 57 (A_EXPN)]
    $default  reduce using rule 57 (A_EXPN)

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 120

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   65 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN . RSQRB
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 138
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 121

   25 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 139


State 122

   14 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 14 (VAR_LIST)


State 123

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 140


State 124

   16 VAR_LIST: PTR_VAR COMA VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 125

   15 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 126

   45 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 95
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN1  go to state 141
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 111
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 127

   46 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 46 (LOGICAL_EXPN1)


State 128

   41 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   45              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 142
    AMPER  shift, and go to state 99
    OR     shift, and go to state 100

    LOGICAL_OPERATOR  go to state 101


State 129

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 143


State 130

   54 LOGICAL_OPERATOR: AMPER AMPER .

    $default  reduce using rule 54 (LOGICAL_OPERATOR)


State 131

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   43              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AMPER  shift, and go to state 99
    OR     shift, and go to state 100

    AMPER     [reduce using rule 43 (LOGICAL_EXPN1)]
    OR        [reduce using rule 43 (LOGICAL_EXPN1)]
    $default  reduce using rule 43 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 101


State 132

   47 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    $default  reduce using rule 47 (LOGICAL_EXPN2)

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 133

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 144


State 134

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC . LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 56
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN   go to state 145
    LOGICAL_EXPN1  go to state 58
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 111
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 135

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 146


State 136

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 147


State 137

   66 ARRAY_ACCESS: VAR LSQRB A_EXPN RSQRB .

    $default  reduce using rule 66 (ARRAY_ACCESS)


State 138

   65 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB .

    $default  reduce using rule 65 (ARRAY_ACCESS)


State 139

   25 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 25 (ARRAY_SIZE)


State 140

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 148


State 141

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   45              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 149
    AMPER  shift, and go to state 99
    OR     shift, and go to state 100

    LOGICAL_OPERATOR  go to state 101


State 142

   41 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   45 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 41 (LOGICAL_EXPN)
    RB        [reduce using rule 45 (LOGICAL_EXPN1)]
    SC        reduce using rule 41 (LOGICAL_EXPN)
    SC        [reduce using rule 45 (LOGICAL_EXPN1)]
    AMPER     reduce using rule 45 (LOGICAL_EXPN1)
    OR        reduce using rule 45 (LOGICAL_EXPN1)
    $default  reduce using rule 41 (LOGICAL_EXPN)


State 143

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 150
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 144

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 151
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 145

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN . SC INCR_DCR_EXPN RB LCB BODY2 RCB

    SC  shift, and go to state 152


State 146

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 153


State 147

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 154
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 148

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 24 (ARRAY_SIZE)


State 149

   45 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 45 (LOGICAL_EXPN1)


State 150

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 155


State 151

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 156


State 152

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC . INCR_DCR_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 66
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    A_EXPN         go to state 157
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 158


State 153

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 55
    AMPER   shift, and go to state 38
    NOT     shift, and go to state 56
    MUL     shift, and go to state 39
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    LOGICAL_EXPN   go to state 159
    LOGICAL_EXPN1  go to state 58
    LOGICAL_EXPN2  go to state 59
    A_EXPN         go to state 111
    ARRAY_ACCESS   go to state 47
    INCR_DCR_EXPN  go to state 61


State 154

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 160


State 155

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 161


State 156

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 162

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 157

   56 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   57       | A_EXPN . OPR_PREC2 A_EXPN
   67 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MOD     shift, and go to state 78
    EXP     shift, and go to state 79
    UPLUS   shift, and go to state 80
    UMINUS  shift, and go to state 81

    UNARY_OPERATORS  go to state 82
    OPR_PREC1        go to state 83
    OPR_PREC2        go to state 84


State 158

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN . RB LCB BODY2 RCB
   59 A_EXPN: INCR_DCR_EXPN .

    RB  shift, and go to state 163

    $default  reduce using rule 59 (A_EXPN)


State 159

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 164


State 160

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 161

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 165


State 162

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 166


State 163

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 167


State 164

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 168


State 165

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 169
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 166

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 170
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 167

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    AMPER   shift, and go to state 38
    MUL     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 40
    NUMBER  shift, and go to state 41

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 171
    DECLARATION_STATEMENTS  go to state 43
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 44
    ASSIGNMENT_STATEMENT    go to state 45
    A_EXPN                  go to state 46
    ARRAY_ACCESS            go to state 47
    INCR_DCR_EXPN           go to state 48


State 168

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)


State 169

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 172


State 170

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 173


State 171

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 174


State 172

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)


State 173

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 174

   39 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)
