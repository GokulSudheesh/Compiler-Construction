State 30 conflicts: 4 shift/reduce
State 43 conflicts: 7 shift/reduce
State 134 conflicts: 2 shift/reduce
State 155 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
   14                       | DECLARATION_STATEMENT

   15 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC

   16 VAR_LIST: VAR COMA VAR_LIST
   17         | ARRAY_DECLARATION COMA VAR_LIST
   18         | PTR_VAR VAR_LIST
   19         | VAR
   20         | ARRAY_DECLARATION
   21         | PTR_VAR

   22 PTR_VAR: PTR_DEPTH VAR

   23 PTR_DEPTH: MUL PTR_DEPTH
   24          | MUL

   25 ARRAY_DECLARATION: VAR ARRAY_SIZE

   26 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   27           | LSQRB NUMBER RSQRB

   28 MAIN_TYPE: INT

   29 DATA_TYPE: INT
   30          | CHAR
   31          | FLOAT
   32          | DOUBLE

   33 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
   34                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   35                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   37                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   38                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   39                   | FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB
   40                   | PROGRAM_STATEMENT

   41 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   42             | LOGICAL_EXPN1

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   44              | LOGICAL_EXPN2
   45              | NOT LB LOGICAL_EXPN1 RB
   46              | LB LOGICAL_EXPN1 RB

   47 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   48 COMP_OPERATOR: ET
   49              | GT
   50              | LT
   51              | GTE
   52              | LTE
   53              | NE

   54 LOGICAL_OPERATOR: AND
   55                 | OR

   56 PROGRAM_STATEMENT: VAR_EXPN1 SC
   57                  | SC
   58                  | VAR_EXPN2 SC

   59 VAR_EXPN1: VAR EQ A_EXPN
   60          | VAR_ARRAY_ACCESS_LHS EQ A_EXPN

   61 VAR_EXPN2: VAR ARRAY_ACCESS UPLUS
   62          | VAR ARRAY_ACCESS UMINUS
   63          | VAR UPLUS
   64          | VAR UMINUS

   65 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS

   66 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS

   67 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB
   68             | ARRAY_ACCESS LSQRB NUMBER RSQRB
   69             | LSQRB VAR RSQRB
   70             | LSQRB NUMBER RSQRB

   71 A_EXPN: A_EXPN PLUS A_EXPN
   72       | A_EXPN MINUS A_EXPN
   73       | A_EXPN MUL A_EXPN
   74       | A_EXPN DIV A_EXPN
   75       | A_EXPN MOD A_EXPN
   76       | A_EXPN EXP A_EXPN
   77       | LB A_EXPN RB
   78       | VAR UPLUS
   79       | VAR UMINUS
   80       | VAR
   81       | NUMBER
   82       | VAR_ARRAY_ACCESS_RHS UPLUS
   83       | VAR_ARRAY_ACCESS_RHS UMINUS
   84       | VAR_ARRAY_ACCESS_RHS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 34 35 36 37 38 39 41 45 46 77
    RB (263) 1 34 35 36 37 38 39 41 45 46 77
    LCB (264) 1 34 35 36 37 38 39
    RCB (265) 1 34 35 36 37 38 39
    LSQRB (266) 26 27 67 68 69 70
    RSQRB (267) 26 27 67 68 69 70
    SC (268) 15 38 39 56 57 58
    COLON (269) 34
    QMARK (270) 34
    COMA (271) 16 17
    IF (272) 35 36
    ELSE (273) 36
    FOR (274) 39
    DO (275) 38
    WHILE (276) 37 38
    VAR <var_name> (277) 6 16 19 22 25 59 61 62 63 64 65 66 67 69 78 79 80
    NUMBER (278) 26 27 68 70 81
    ET (279) 48
    EQ (280) 59 60
    GT (281) 4 49
    LT (282) 4 50
    GTE (283) 51
    LTE (284) 52
    NE (285) 53
    AND (286) 54
    OR (287) 55
    NOT (288) 41 45
    DQUOTE (289) 5
    PLUS (290) 71
    MINUS (291) 72
    MUL (292) 23 24 73
    DIV (293) 6 7 74
    MOD (294) 75
    EXP (295) 76
    UPLUS (296) 61 63 78 82
    UMINUS (297) 62 64 79 83
    INT <data_type> (298) 28 29
    CHAR <data_type> (299) 30
    FLOAT <data_type> (300) 31
    DOUBLE <data_type> (301) 32


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 34 35 36 37 38 39
    DECLARATION_STATEMENTS (54)
        on left: 13 14
        on right: 9 11 13
    DECLARATION_STATEMENT (55)
        on left: 15
        on right: 13 14
    VAR_LIST (56)
        on left: 16 17 18 19 20 21
        on right: 15 16 17 18
    PTR_VAR (57)
        on left: 22
        on right: 18 21
    PTR_DEPTH (58)
        on left: 23 24
        on right: 22 23
    ARRAY_DECLARATION (59)
        on left: 25
        on right: 17 20
    ARRAY_SIZE (60)
        on left: 26 27
        on right: 25 26
    MAIN_TYPE (61)
        on left: 28
        on right: 1
    DATA_TYPE <data_type> (62)
        on left: 29 30 31 32
        on right: 15
    PROGRAM_STATEMENTS (63)
        on left: 33 34 35 36 37 38 39 40
        on right: 12 33
    LOGICAL_EXPN (64)
        on left: 41 42
        on right: 34 35 36 37 38 39
    LOGICAL_EXPN1 (65)
        on left: 43 44 45 46
        on right: 41 42 43 45 46
    LOGICAL_EXPN2 (66)
        on left: 47
        on right: 44
    COMP_OPERATOR (67)
        on left: 48 49 50 51 52 53
        on right: 47
    LOGICAL_OPERATOR (68)
        on left: 54 55
        on right: 43
    PROGRAM_STATEMENT (69)
        on left: 56 57 58
        on right: 33 40
    VAR_EXPN1 (70)
        on left: 59 60
        on right: 39 56
    VAR_EXPN2 (71)
        on left: 61 62 63 64
        on right: 39 58
    VAR_ARRAY_ACCESS_LHS (72)
        on left: 65
        on right: 60
    VAR_ARRAY_ACCESS_RHS (73)
        on left: 66
        on right: 82 83 84
    ARRAY_ACCESS (74)
        on left: 67 68 69 70
        on right: 61 62 65 66 67 68
    A_EXPN (75)
        on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 47 59 60 71 72 73 74 75 76 77


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   28 MAIN_TYPE: INT .

    $default  reduce using rule 28 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31


State 24

   29 DATA_TYPE: INT .

    $default  reduce using rule 29 (DATA_TYPE)


State 25

   30 DATA_TYPE: CHAR .

    $default  reduce using rule 30 (DATA_TYPE)


State 26

   31 DATA_TYPE: FLOAT .

    $default  reduce using rule 31 (DATA_TYPE)


State 27

   32 DATA_TYPE: DOUBLE .

    $default  reduce using rule 32 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 32


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 40
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 30

   13 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
   14                       | DECLARATION_STATEMENT .

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    INT       [reduce using rule 14 (DECLARATION_STATEMENTS)]
    CHAR      [reduce using rule 14 (DECLARATION_STATEMENTS)]
    FLOAT     [reduce using rule 14 (DECLARATION_STATEMENTS)]
    DOUBLE    [reduce using rule 14 (DECLARATION_STATEMENTS)]
    $default  reduce using rule 14 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 47
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31


State 31

   15 DECLARATION_STATEMENT: DATA_TYPE . VAR_LIST SC

    VAR  shift, and go to state 48
    MUL  shift, and go to state 49

    VAR_LIST           go to state 50
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 32

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 33

   34 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 57

    LOGICAL_EXPN          go to state 58
    LOGICAL_EXPN1         go to state 59
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 34

   57 PROGRAM_STATEMENT: SC .

    $default  reduce using rule 57 (PROGRAM_STATEMENT)


State 35

   35 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 63


State 36

   39 PROGRAM_STATEMENTS: FOR . LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB  shift, and go to state 64


State 37

   38 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 65


State 38

   37 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 66


State 39

   59 VAR_EXPN1: VAR . EQ A_EXPN
   61 VAR_EXPN2: VAR . ARRAY_ACCESS UPLUS
   62          | VAR . ARRAY_ACCESS UMINUS
   63          | VAR . UPLUS
   64          | VAR . UMINUS
   65 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB   shift, and go to state 67
    EQ      shift, and go to state 68
    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    ARRAY_ACCESS  go to state 71


State 40

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 41

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 72
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 42

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 73
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 43

   33 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
   40                   | PROGRAM_STATEMENT .

    LB     shift, and go to state 33
    SC     shift, and go to state 34
    IF     shift, and go to state 35
    FOR    shift, and go to state 36
    DO     shift, and go to state 37
    WHILE  shift, and go to state 38
    VAR    shift, and go to state 39

    LB        [reduce using rule 40 (PROGRAM_STATEMENTS)]
    SC        [reduce using rule 40 (PROGRAM_STATEMENTS)]
    IF        [reduce using rule 40 (PROGRAM_STATEMENTS)]
    FOR       [reduce using rule 40 (PROGRAM_STATEMENTS)]
    DO        [reduce using rule 40 (PROGRAM_STATEMENTS)]
    WHILE     [reduce using rule 40 (PROGRAM_STATEMENTS)]
    VAR       [reduce using rule 40 (PROGRAM_STATEMENTS)]
    $default  reduce using rule 40 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS    go to state 74
    PROGRAM_STATEMENT     go to state 43
    VAR_EXPN1             go to state 44
    VAR_EXPN2             go to state 45
    VAR_ARRAY_ACCESS_LHS  go to state 46


State 44

   56 PROGRAM_STATEMENT: VAR_EXPN1 . SC

    SC  shift, and go to state 75


State 45

   58 PROGRAM_STATEMENT: VAR_EXPN2 . SC

    SC  shift, and go to state 76


State 46

   60 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS . EQ A_EXPN

    EQ  shift, and go to state 77


State 47

   13 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 48

   16 VAR_LIST: VAR . COMA VAR_LIST
   19         | VAR .
   25 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 78
    COMA   shift, and go to state 79

    $default  reduce using rule 19 (VAR_LIST)

    ARRAY_SIZE  go to state 80


State 49

   23 PTR_DEPTH: MUL . PTR_DEPTH
   24          | MUL .

    MUL  shift, and go to state 49

    $default  reduce using rule 24 (PTR_DEPTH)

    PTR_DEPTH  go to state 81


State 50

   15 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 82


State 51

   18 VAR_LIST: PTR_VAR . VAR_LIST
   21         | PTR_VAR .

    VAR  shift, and go to state 48
    MUL  shift, and go to state 49

    $default  reduce using rule 21 (VAR_LIST)

    VAR_LIST           go to state 83
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 52

   22 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 84


State 53

   17 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   20         | ARRAY_DECLARATION .

    COMA  shift, and go to state 85

    $default  reduce using rule 20 (VAR_LIST)


State 54

   46 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   77 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 87
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 88


State 55

   66 VAR_ARRAY_ACCESS_RHS: VAR . ARRAY_ACCESS
   78 A_EXPN: VAR . UPLUS
   79       | VAR . UMINUS
   80       | VAR .

    LSQRB   shift, and go to state 67
    UPLUS   shift, and go to state 89
    UMINUS  shift, and go to state 90

    $default  reduce using rule 80 (A_EXPN)

    ARRAY_ACCESS  go to state 91


State 56

   81 A_EXPN: NUMBER .

    $default  reduce using rule 81 (A_EXPN)


State 57

   41 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   45 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 92


State 58

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 93


State 59

   42 LOGICAL_EXPN: LOGICAL_EXPN1 .
   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AND  shift, and go to state 94
    OR   shift, and go to state 95

    $default  reduce using rule 42 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 96


State 60

   44 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 44 (LOGICAL_EXPN1)


State 61

   82 A_EXPN: VAR_ARRAY_ACCESS_RHS . UPLUS
   83       | VAR_ARRAY_ACCESS_RHS . UMINUS
   84       | VAR_ARRAY_ACCESS_RHS .

    UPLUS   shift, and go to state 97
    UMINUS  shift, and go to state 98

    $default  reduce using rule 84 (A_EXPN)


State 62

   47 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    ET     shift, and go to state 99
    GT     shift, and go to state 100
    LT     shift, and go to state 101
    GTE    shift, and go to state 102
    LTE    shift, and go to state 103
    NE     shift, and go to state 104
    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    MUL    shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109
    EXP    shift, and go to state 110

    COMP_OPERATOR  go to state 111


State 63

   35 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 57

    LOGICAL_EXPN          go to state 112
    LOGICAL_EXPN1         go to state 59
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 64

   39 PROGRAM_STATEMENTS: FOR LB . VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 113

    VAR_EXPN1             go to state 114
    VAR_ARRAY_ACCESS_LHS  go to state 46


State 65

   38 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 115
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 66

   37 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 57

    LOGICAL_EXPN          go to state 116
    LOGICAL_EXPN1         go to state 59
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 67

   69 ARRAY_ACCESS: LSQRB . VAR RSQRB
   70             | LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 117
    NUMBER  shift, and go to state 118


State 68

   59 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 120


State 69

   63 VAR_EXPN2: VAR UPLUS .

    $default  reduce using rule 63 (VAR_EXPN2)


State 70

   64 VAR_EXPN2: VAR UMINUS .

    $default  reduce using rule 64 (VAR_EXPN2)


State 71

   61 VAR_EXPN2: VAR ARRAY_ACCESS . UPLUS
   62          | VAR ARRAY_ACCESS . UMINUS
   65 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   67 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   68             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 121
    UPLUS   shift, and go to state 122
    UMINUS  shift, and go to state 123

    $default  reduce using rule 65 (VAR_ARRAY_ACCESS_LHS)


State 72

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 73

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 74

   33 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 75

   56 PROGRAM_STATEMENT: VAR_EXPN1 SC .

    $default  reduce using rule 56 (PROGRAM_STATEMENT)


State 76

   58 PROGRAM_STATEMENT: VAR_EXPN2 SC .

    $default  reduce using rule 58 (PROGRAM_STATEMENT)


State 77

   60 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 124


State 78

   27 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 125


State 79

   16 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 48
    MUL  shift, and go to state 49

    VAR_LIST           go to state 126
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 80

   25 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   26 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 127

    $default  reduce using rule 25 (ARRAY_DECLARATION)


State 81

   23 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 23 (PTR_DEPTH)


State 82

   15 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 15 (DECLARATION_STATEMENT)


State 83

   18 VAR_LIST: PTR_VAR VAR_LIST .

    $default  reduce using rule 18 (VAR_LIST)


State 84

   22 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 22 (PTR_VAR)


State 85

   17 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    VAR  shift, and go to state 48
    MUL  shift, and go to state 49

    VAR_LIST           go to state 128
    PTR_VAR            go to state 51
    PTR_DEPTH          go to state 52
    ARRAY_DECLARATION  go to state 53


State 86

   45 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 129


State 87

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   46              | LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 130
    AND  shift, and go to state 94
    OR   shift, and go to state 95

    LOGICAL_OPERATOR  go to state 96


State 88

   47 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN
   77       | LB A_EXPN . RB

    RB     shift, and go to state 131
    ET     shift, and go to state 99
    GT     shift, and go to state 100
    LT     shift, and go to state 101
    GTE    shift, and go to state 102
    LTE    shift, and go to state 103
    NE     shift, and go to state 104
    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    MUL    shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109
    EXP    shift, and go to state 110

    COMP_OPERATOR  go to state 111


State 89

   78 A_EXPN: VAR UPLUS .

    $default  reduce using rule 78 (A_EXPN)


State 90

   79 A_EXPN: VAR UMINUS .

    $default  reduce using rule 79 (A_EXPN)


State 91

   66 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS .
   67 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   68             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 121

    $default  reduce using rule 66 (VAR_ARRAY_ACCESS_RHS)


State 92

   41 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   45 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 132
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 93

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 133


State 94

   54 LOGICAL_OPERATOR: AND .

    $default  reduce using rule 54 (LOGICAL_OPERATOR)


State 95

   55 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 55 (LOGICAL_OPERATOR)


State 96

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 134
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 97

   82 A_EXPN: VAR_ARRAY_ACCESS_RHS UPLUS .

    $default  reduce using rule 82 (A_EXPN)


State 98

   83 A_EXPN: VAR_ARRAY_ACCESS_RHS UMINUS .

    $default  reduce using rule 83 (A_EXPN)


State 99

   48 COMP_OPERATOR: ET .

    $default  reduce using rule 48 (COMP_OPERATOR)


State 100

   49 COMP_OPERATOR: GT .

    $default  reduce using rule 49 (COMP_OPERATOR)


State 101

   50 COMP_OPERATOR: LT .

    $default  reduce using rule 50 (COMP_OPERATOR)


State 102

   51 COMP_OPERATOR: GTE .

    $default  reduce using rule 51 (COMP_OPERATOR)


State 103

   52 COMP_OPERATOR: LTE .

    $default  reduce using rule 52 (COMP_OPERATOR)


State 104

   53 COMP_OPERATOR: NE .

    $default  reduce using rule 53 (COMP_OPERATOR)


State 105

   71 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 135


State 106

   72 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 136


State 107

   73 A_EXPN: A_EXPN MUL . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 137


State 108

   74 A_EXPN: A_EXPN DIV . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 138


State 109

   75 A_EXPN: A_EXPN MOD . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 139


State 110

   76 A_EXPN: A_EXPN EXP . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 140


State 111

   47 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 141


State 112

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 142


State 113

   59 VAR_EXPN1: VAR . EQ A_EXPN
   65 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB  shift, and go to state 67
    EQ     shift, and go to state 68

    ARRAY_ACCESS  go to state 143


State 114

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 . SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 144


State 115

   38 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 145


State 116

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 146


State 117

   69 ARRAY_ACCESS: LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 147


State 118

   70 ARRAY_ACCESS: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 148


State 119

   77 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 119
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 149


State 120

   59 VAR_EXPN1: VAR EQ A_EXPN .
   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    MUL    shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109
    EXP    shift, and go to state 110

    $default  reduce using rule 59 (VAR_EXPN1)


State 121

   67 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . VAR RSQRB
   68             | ARRAY_ACCESS LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 150
    NUMBER  shift, and go to state 151


State 122

   61 VAR_EXPN2: VAR ARRAY_ACCESS UPLUS .

    $default  reduce using rule 61 (VAR_EXPN2)


State 123

   62 VAR_EXPN2: VAR ARRAY_ACCESS UMINUS .

    $default  reduce using rule 62 (VAR_EXPN2)


State 124

   60 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ A_EXPN .
   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    MUL    shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109
    EXP    shift, and go to state 110

    $default  reduce using rule 60 (VAR_EXPN1)


State 125

   27 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 152


State 126

   16 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 127

   26 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 153


State 128

   17 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 17 (VAR_LIST)


State 129

   45 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 154
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 130

   46 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 46 (LOGICAL_EXPN1)


State 131

   77 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 77 (A_EXPN)


State 132

   41 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   45              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 155
    AND  shift, and go to state 94
    OR   shift, and go to state 95

    LOGICAL_OPERATOR  go to state 96


State 133

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 156


State 134

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   43              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AND  shift, and go to state 94
    OR   shift, and go to state 95

    AND       [reduce using rule 43 (LOGICAL_EXPN1)]
    OR        [reduce using rule 43 (LOGICAL_EXPN1)]
    $default  reduce using rule 43 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 96


State 135

   71 A_EXPN: A_EXPN . PLUS A_EXPN
   71       | A_EXPN PLUS A_EXPN .
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109
    EXP  shift, and go to state 110

    $default  reduce using rule 71 (A_EXPN)


State 136

   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   72       | A_EXPN MINUS A_EXPN .
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109
    EXP  shift, and go to state 110

    $default  reduce using rule 72 (A_EXPN)


State 137

   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   73       | A_EXPN MUL A_EXPN .
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 110

    $default  reduce using rule 73 (A_EXPN)


State 138

   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   74       | A_EXPN DIV A_EXPN .
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 110

    $default  reduce using rule 74 (A_EXPN)


State 139

   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   75       | A_EXPN MOD A_EXPN .
   76       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 110

    $default  reduce using rule 75 (A_EXPN)


State 140

   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN
   76       | A_EXPN EXP A_EXPN .

    EXP  shift, and go to state 110

    $default  reduce using rule 76 (A_EXPN)


State 141

   47 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    MUL    shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109
    EXP    shift, and go to state 110

    $default  reduce using rule 47 (LOGICAL_EXPN2)


State 142

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 157


State 143

   65 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   67 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   68             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 121

    $default  reduce using rule 65 (VAR_ARRAY_ACCESS_LHS)


State 144

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC . LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 57

    LOGICAL_EXPN          go to state 158
    LOGICAL_EXPN1         go to state 59
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 145

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 159


State 146

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 160


State 147

   69 ARRAY_ACCESS: LSQRB VAR RSQRB .

    $default  reduce using rule 69 (ARRAY_ACCESS)


State 148

   70 ARRAY_ACCESS: LSQRB NUMBER RSQRB .

    $default  reduce using rule 70 (ARRAY_ACCESS)


State 149

   71 A_EXPN: A_EXPN . PLUS A_EXPN
   72       | A_EXPN . MINUS A_EXPN
   73       | A_EXPN . MUL A_EXPN
   74       | A_EXPN . DIV A_EXPN
   75       | A_EXPN . MOD A_EXPN
   76       | A_EXPN . EXP A_EXPN
   77       | LB A_EXPN . RB

    RB     shift, and go to state 131
    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    MUL    shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109
    EXP    shift, and go to state 110


State 150

   67 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 161


State 151

   68 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 162


State 152

   27 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 27 (ARRAY_SIZE)


State 153

   26 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 163


State 154

   43 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   45              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 164
    AND  shift, and go to state 94
    OR   shift, and go to state 95

    LOGICAL_OPERATOR  go to state 96


State 155

   41 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   45 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 41 (LOGICAL_EXPN)
    RB        [reduce using rule 45 (LOGICAL_EXPN1)]
    SC        reduce using rule 41 (LOGICAL_EXPN)
    SC        [reduce using rule 45 (LOGICAL_EXPN1)]
    AND       reduce using rule 45 (LOGICAL_EXPN1)
    OR        reduce using rule 45 (LOGICAL_EXPN1)
    $default  reduce using rule 41 (LOGICAL_EXPN)


State 156

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 165
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 157

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 166
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 158

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN . SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 167


State 159

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 168


State 160

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 169
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 161

   67 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB .

    $default  reduce using rule 67 (ARRAY_ACCESS)


State 162

   68 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER RSQRB .

    $default  reduce using rule 68 (ARRAY_ACCESS)


State 163

   26 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 26 (ARRAY_SIZE)


State 164

   45 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 45 (LOGICAL_EXPN1)


State 165

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 170


State 166

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 171


State 167

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC . VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 172

    VAR_EXPN2  go to state 173


State 168

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56
    NOT     shift, and go to state 57

    LOGICAL_EXPN          go to state 174
    LOGICAL_EXPN1         go to state 59
    LOGICAL_EXPN2         go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62


State 169

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 175


State 170

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 176


State 171

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 177

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 172

   61 VAR_EXPN2: VAR . ARRAY_ACCESS UPLUS
   62          | VAR . ARRAY_ACCESS UMINUS
   63          | VAR . UPLUS
   64          | VAR . UMINUS

    LSQRB   shift, and go to state 67
    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    ARRAY_ACCESS  go to state 178


State 173

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 . RB LCB BODY2 RCB

    RB  shift, and go to state 179


State 174

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 180


State 175

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 176

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 181


State 177

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 182


State 178

   61 VAR_EXPN2: VAR ARRAY_ACCESS . UPLUS
   62          | VAR ARRAY_ACCESS . UMINUS
   67 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   68             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 121
    UPLUS   shift, and go to state 122
    UMINUS  shift, and go to state 123


State 179

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB . LCB BODY2 RCB

    LCB  shift, and go to state 183


State 180

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 184


State 181

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 185
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 182

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 186
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 183

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB . BODY2 RCB

    LB      shift, and go to state 33
    SC      shift, and go to state 34
    IF      shift, and go to state 35
    FOR     shift, and go to state 36
    DO      shift, and go to state 37
    WHILE   shift, and go to state 38
    VAR     shift, and go to state 39
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 187
    DECLARATION_STATEMENTS  go to state 41
    DECLARATION_STATEMENT   go to state 30
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 42
    PROGRAM_STATEMENT       go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 184

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)


State 185

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 188


State 186

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 189


State 187

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 . RCB

    RCB  shift, and go to state 190


State 188

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)


State 189

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 190

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)
