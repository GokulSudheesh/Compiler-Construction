State 132 conflicts: 2 shift/reduce
State 153 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   14 VAR_LIST: VAR COMA VAR_LIST
   15         | ARRAY_DECLARATION COMA VAR_LIST
   16         | PTR_VAR VAR_LIST
   17         | VAR
   18         | ARRAY_DECLARATION
   19         | PTR_VAR

   20 PTR_VAR: PTR_DEPTH VAR

   21 PTR_DEPTH: MUL PTR_DEPTH
   22          | MUL

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   25           | LSQRB NUMBER RSQRB

   26 MAIN_TYPE: INT

   27 DATA_TYPE: INT
   28          | CHAR
   29          | FLOAT
   30          | DOUBLE

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC
   32                   | SC
   33                   | VAR_EXPN2 SC
   34                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   35                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   37                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   38                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   39                   | FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

   40 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   41             | LOGICAL_EXPN1

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   43              | LOGICAL_EXPN2
   44              | NOT LB LOGICAL_EXPN1 RB
   45              | LB LOGICAL_EXPN1 RB

   46 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   47 COMP_OPERATOR: ET
   48              | GT
   49              | LT
   50              | GTE
   51              | LTE
   52              | NE

   53 LOGICAL_OPERATOR: AMPER AMPER
   54                 | OR

   55 VAR_EXPN1: VAR EQ A_EXPN
   56          | VAR_ARRAY_ACCESS_LHS EQ A_EXPN

   57 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS
   58          | VAR UNARY_OPERATORS

   59 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS

   60 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS

   61 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB
   62             | ARRAY_ACCESS LSQRB NUMBER RSQRB
   63             | LSQRB VAR RSQRB
   64             | LSQRB NUMBER RSQRB

   65 A_EXPN: A_EXPN PLUS A_EXPN
   66       | A_EXPN MINUS A_EXPN
   67       | A_EXPN1

   68 A_EXPN1: A_EXPN1 MUL A_EXPN1
   69        | A_EXPN1 DIV A_EXPN1
   70        | A_EXPN1 MOD A_EXPN1
   71        | A_EXPN2

   72 A_EXPN2: A_EXPN2 EXP A_EXPN2
   73        | A_EXPN3

   74 A_EXPN3: LB A_EXPN RB
   75        | NUMBER
   76        | VAR UNARY_OPERATORS
   77        | VAR
   78        | VAR_ARRAY_ACCESS_RHS UNARY_OPERATORS
   79        | VAR_ARRAY_ACCESS_RHS

   80 UNARY_OPERATORS: UPLUS
   81                | UMINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 34 35 36 37 38 39 40 44 45 74
    RB (263) 1 34 35 36 37 38 39 40 44 45 74
    LCB (264) 1 34 35 36 37 38 39
    RCB (265) 1 34 35 36 37 38 39
    LSQRB (266) 24 25 61 62 63 64
    RSQRB (267) 24 25 61 62 63 64
    SC (268) 13 31 32 33 38 39
    COLON (269) 34
    QMARK (270) 34
    COMA (271) 14 15
    IF (272) 35 36
    ELSE (273) 36
    FOR (274) 39
    DO (275) 38
    WHILE (276) 37 38
    VAR <var_name> (277) 6 14 17 20 23 55 57 58 59 60 61 63 76 77
    NUMBER (278) 24 25 62 64 75
    ET (279) 47
    EQ (280) 55 56
    GT (281) 4 48
    LT (282) 4 49
    GTE (283) 50
    LTE (284) 51
    NE (285) 52
    AMPER (286) 53
    OR (287) 54
    NOT (288) 40 44
    DQUOTE (289) 5
    PLUS (290) 65
    MINUS (291) 66
    MUL (292) 21 22 68
    DIV (293) 6 7 69
    MOD (294) 70
    EXP (295) 72
    UPLUS (296) 80
    UMINUS (297) 81
    INT <data_type> (298) 26 27
    CHAR <data_type> (299) 28
    FLOAT <data_type> (300) 29
    DOUBLE <data_type> (301) 30


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 34 35 36 37 38 39
    DECLARATION_STATEMENTS (54)
        on left: 13
        on right: 9 11
    VAR_LIST (55)
        on left: 14 15 16 17 18 19
        on right: 13 14 15 16
    PTR_VAR (56)
        on left: 20
        on right: 16 19
    PTR_DEPTH (57)
        on left: 21 22
        on right: 20 21
    ARRAY_DECLARATION (58)
        on left: 23
        on right: 15 18
    ARRAY_SIZE (59)
        on left: 24 25
        on right: 23 24
    MAIN_TYPE (60)
        on left: 26
        on right: 1
    DATA_TYPE <data_type> (61)
        on left: 27 28 29 30
        on right: 13
    PROGRAM_STATEMENTS (62)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 12
    LOGICAL_EXPN (63)
        on left: 40 41
        on right: 34 35 36 37 38 39
    LOGICAL_EXPN1 (64)
        on left: 42 43 44 45
        on right: 40 41 42 44 45
    LOGICAL_EXPN2 (65)
        on left: 46
        on right: 43
    COMP_OPERATOR (66)
        on left: 47 48 49 50 51 52
        on right: 46
    LOGICAL_OPERATOR (67)
        on left: 53 54
        on right: 42
    VAR_EXPN1 (68)
        on left: 55 56
        on right: 31 39
    VAR_EXPN2 (69)
        on left: 57 58
        on right: 33 39
    VAR_ARRAY_ACCESS_LHS (70)
        on left: 59
        on right: 56
    VAR_ARRAY_ACCESS_RHS (71)
        on left: 60
        on right: 78 79
    ARRAY_ACCESS (72)
        on left: 61 62 63 64
        on right: 57 59 60 61 62
    A_EXPN (73)
        on left: 65 66 67
        on right: 46 55 56 65 66 74
    A_EXPN1 (74)
        on left: 68 69 70 71
        on right: 67 68 69 70
    A_EXPN2 (75)
        on left: 72 73
        on right: 71 72
    A_EXPN3 (76)
        on left: 74 75 76 77 78 79
        on right: 73
    UNARY_OPERATORS (77)
        on left: 80 81
        on right: 57 58 76 78


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   26 MAIN_TYPE: INT .

    $default  reduce using rule 26 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DATA_TYPE               go to state 30


State 24

   27 DATA_TYPE: INT .

    $default  reduce using rule 27 (DATA_TYPE)


State 25

   28 DATA_TYPE: CHAR .

    $default  reduce using rule 28 (DATA_TYPE)


State 26

   29 DATA_TYPE: FLOAT .

    $default  reduce using rule 29 (DATA_TYPE)


State 27

   30 DATA_TYPE: DOUBLE .

    $default  reduce using rule 30 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 31


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 39
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 30

   13 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    VAR  shift, and go to state 45
    MUL  shift, and go to state 46

    VAR_LIST           go to state 47
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 31

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 32

   34 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 55
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 33

   32 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 34

   35 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 63


State 35

   39 PROGRAM_STATEMENTS: FOR . LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB  shift, and go to state 64


State 36

   38 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 65


State 37

   37 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 66


State 38

   55 VAR_EXPN1: VAR . EQ A_EXPN
   57 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   58          | VAR . UNARY_OPERATORS
   59 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB   shift, and go to state 67
    EQ      shift, and go to state 68
    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    ARRAY_ACCESS     go to state 71
    UNARY_OPERATORS  go to state 72


State 39

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 40

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 73
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 41

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 74
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 42

   31 PROGRAM_STATEMENTS: VAR_EXPN1 . SC

    SC  shift, and go to state 75


State 43

   33 PROGRAM_STATEMENTS: VAR_EXPN2 . SC

    SC  shift, and go to state 76


State 44

   56 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS . EQ A_EXPN

    EQ  shift, and go to state 77


State 45

   14 VAR_LIST: VAR . COMA VAR_LIST
   17         | VAR .
   23 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 78
    COMA   shift, and go to state 79

    $default  reduce using rule 17 (VAR_LIST)

    ARRAY_SIZE  go to state 80


State 46

   21 PTR_DEPTH: MUL . PTR_DEPTH
   22          | MUL .

    MUL  shift, and go to state 46

    $default  reduce using rule 22 (PTR_DEPTH)

    PTR_DEPTH  go to state 81


State 47

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 82


State 48

   16 VAR_LIST: PTR_VAR . VAR_LIST
   19         | PTR_VAR .

    VAR  shift, and go to state 45
    MUL  shift, and go to state 46

    $default  reduce using rule 19 (VAR_LIST)

    VAR_LIST           go to state 83
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 49

   20 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 84


State 50

   15 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   18         | ARRAY_DECLARATION .

    COMA  shift, and go to state 85

    $default  reduce using rule 18 (VAR_LIST)


State 51

   45 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   74 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 87
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 88
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 52

   60 VAR_ARRAY_ACCESS_RHS: VAR . ARRAY_ACCESS
   76 A_EXPN3: VAR . UNARY_OPERATORS
   77        | VAR .

    LSQRB   shift, and go to state 67
    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    $default  reduce using rule 77 (A_EXPN3)

    ARRAY_ACCESS     go to state 89
    UNARY_OPERATORS  go to state 90


State 53

   75 A_EXPN3: NUMBER .

    $default  reduce using rule 75 (A_EXPN3)


State 54

   40 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   44 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 91


State 55

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 92


State 56

   41 LOGICAL_EXPN: LOGICAL_EXPN1 .
   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AMPER  shift, and go to state 93
    OR     shift, and go to state 94

    $default  reduce using rule 41 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 95


State 57

   43 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 43 (LOGICAL_EXPN1)


State 58

   78 A_EXPN3: VAR_ARRAY_ACCESS_RHS . UNARY_OPERATORS
   79        | VAR_ARRAY_ACCESS_RHS .

    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    $default  reduce using rule 79 (A_EXPN3)

    UNARY_OPERATORS  go to state 96


State 59

   46 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   65 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN . MINUS A_EXPN

    ET     shift, and go to state 97
    GT     shift, and go to state 98
    LT     shift, and go to state 99
    GTE    shift, and go to state 100
    LTE    shift, and go to state 101
    NE     shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104

    COMP_OPERATOR  go to state 105


State 60

   67 A_EXPN: A_EXPN1 .
   68 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   69        | A_EXPN1 . DIV A_EXPN1
   70        | A_EXPN1 . MOD A_EXPN1

    MUL  shift, and go to state 106
    DIV  shift, and go to state 107
    MOD  shift, and go to state 108

    $default  reduce using rule 67 (A_EXPN)


State 61

   71 A_EXPN1: A_EXPN2 .
   72 A_EXPN2: A_EXPN2 . EXP A_EXPN2

    EXP  shift, and go to state 109

    $default  reduce using rule 71 (A_EXPN1)


State 62

   73 A_EXPN2: A_EXPN3 .

    $default  reduce using rule 73 (A_EXPN2)


State 63

   35 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 110
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 64

   39 PROGRAM_STATEMENTS: FOR LB . VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 111

    VAR_EXPN1             go to state 112
    VAR_ARRAY_ACCESS_LHS  go to state 44


State 65

   38 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 113
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 66

   37 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 114
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 67

   63 ARRAY_ACCESS: LSQRB . VAR RSQRB
   64             | LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 115
    NUMBER  shift, and go to state 116


State 68

   55 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 118
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 69

   80 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 80 (UNARY_OPERATORS)


State 70

   81 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 81 (UNARY_OPERATORS)


State 71

   57 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   59 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   61 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   62             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 119
    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    $default  reduce using rule 59 (VAR_ARRAY_ACCESS_LHS)

    UNARY_OPERATORS  go to state 120


State 72

   58 VAR_EXPN2: VAR UNARY_OPERATORS .

    $default  reduce using rule 58 (VAR_EXPN2)


State 73

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 74

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 75

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC .

    $default  reduce using rule 31 (PROGRAM_STATEMENTS)


State 76

   33 PROGRAM_STATEMENTS: VAR_EXPN2 SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 77

   56 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ . A_EXPN

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 121
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 78

   25 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 122


State 79

   14 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 45
    MUL  shift, and go to state 46

    VAR_LIST           go to state 123
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 80

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   24 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 124

    $default  reduce using rule 23 (ARRAY_DECLARATION)


State 81

   21 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 21 (PTR_DEPTH)


State 82

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 83

   16 VAR_LIST: PTR_VAR VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 84

   20 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 20 (PTR_VAR)


State 85

   15 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    VAR  shift, and go to state 45
    MUL  shift, and go to state 46

    VAR_LIST           go to state 125
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 86

   44 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 126


State 87

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   45              | LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 127
    AMPER  shift, and go to state 93
    OR     shift, and go to state 94

    LOGICAL_OPERATOR  go to state 95


State 88

   46 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   65 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN . MINUS A_EXPN
   74 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 128
    ET     shift, and go to state 97
    GT     shift, and go to state 98
    LT     shift, and go to state 99
    GTE    shift, and go to state 100
    LTE    shift, and go to state 101
    NE     shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104

    COMP_OPERATOR  go to state 105


State 89

   60 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS .
   61 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   62             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 119

    $default  reduce using rule 60 (VAR_ARRAY_ACCESS_RHS)


State 90

   76 A_EXPN3: VAR UNARY_OPERATORS .

    $default  reduce using rule 76 (A_EXPN3)


State 91

   40 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   44 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 129
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 92

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 130


State 93

   53 LOGICAL_OPERATOR: AMPER . AMPER

    AMPER  shift, and go to state 131


State 94

   54 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 54 (LOGICAL_OPERATOR)


State 95

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 132
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 96

   78 A_EXPN3: VAR_ARRAY_ACCESS_RHS UNARY_OPERATORS .

    $default  reduce using rule 78 (A_EXPN3)


State 97

   47 COMP_OPERATOR: ET .

    $default  reduce using rule 47 (COMP_OPERATOR)


State 98

   48 COMP_OPERATOR: GT .

    $default  reduce using rule 48 (COMP_OPERATOR)


State 99

   49 COMP_OPERATOR: LT .

    $default  reduce using rule 49 (COMP_OPERATOR)


State 100

   50 COMP_OPERATOR: GTE .

    $default  reduce using rule 50 (COMP_OPERATOR)


State 101

   51 COMP_OPERATOR: LTE .

    $default  reduce using rule 51 (COMP_OPERATOR)


State 102

   52 COMP_OPERATOR: NE .

    $default  reduce using rule 52 (COMP_OPERATOR)


State 103

   65 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 133
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 104

   66 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 134
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 105

   46 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 135
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 106

   68 A_EXPN1: A_EXPN1 MUL . A_EXPN1

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN1               go to state 136
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 107

   69 A_EXPN1: A_EXPN1 DIV . A_EXPN1

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN1               go to state 137
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 108

   70 A_EXPN1: A_EXPN1 MOD . A_EXPN1

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN1               go to state 138
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 109

   72 A_EXPN2: A_EXPN2 EXP . A_EXPN2

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN2               go to state 139
    A_EXPN3               go to state 62


State 110

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 140


State 111

   55 VAR_EXPN1: VAR . EQ A_EXPN
   59 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB  shift, and go to state 67
    EQ     shift, and go to state 68

    ARRAY_ACCESS  go to state 141


State 112

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 . SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 142


State 113

   38 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 143


State 114

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 144


State 115

   63 ARRAY_ACCESS: LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 145


State 116

   64 ARRAY_ACCESS: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 146


State 117

   74 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 117
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 147
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 118

   55 VAR_EXPN1: VAR EQ A_EXPN .
   65 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104

    $default  reduce using rule 55 (VAR_EXPN1)


State 119

   61 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . VAR RSQRB
   62             | ARRAY_ACCESS LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 148
    NUMBER  shift, and go to state 149


State 120

   57 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS .

    $default  reduce using rule 57 (VAR_EXPN2)


State 121

   56 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ A_EXPN .
   65 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104

    $default  reduce using rule 56 (VAR_EXPN1)


State 122

   25 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 150


State 123

   14 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 14 (VAR_LIST)


State 124

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 151


State 125

   15 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 126

   44 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 86

    LOGICAL_EXPN1         go to state 152
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 127

   45 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 45 (LOGICAL_EXPN1)


State 128

   74 A_EXPN3: LB A_EXPN RB .

    $default  reduce using rule 74 (A_EXPN3)


State 129

   40 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   44              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 153
    AMPER  shift, and go to state 93
    OR     shift, and go to state 94

    LOGICAL_OPERATOR  go to state 95


State 130

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 154


State 131

   53 LOGICAL_OPERATOR: AMPER AMPER .

    $default  reduce using rule 53 (LOGICAL_OPERATOR)


State 132

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   42              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AMPER  shift, and go to state 93
    OR     shift, and go to state 94

    AMPER     [reduce using rule 42 (LOGICAL_EXPN1)]
    OR        [reduce using rule 42 (LOGICAL_EXPN1)]
    $default  reduce using rule 42 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 95


State 133

   65 A_EXPN: A_EXPN . PLUS A_EXPN
   65       | A_EXPN PLUS A_EXPN .
   66       | A_EXPN . MINUS A_EXPN

    $default  reduce using rule 65 (A_EXPN)


State 134

   65 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN . MINUS A_EXPN
   66       | A_EXPN MINUS A_EXPN .

    $default  reduce using rule 66 (A_EXPN)


State 135

   46 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   65 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104

    $default  reduce using rule 46 (LOGICAL_EXPN2)


State 136

   68 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   68        | A_EXPN1 MUL A_EXPN1 .
   69        | A_EXPN1 . DIV A_EXPN1
   70        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 68 (A_EXPN1)


State 137

   68 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   69        | A_EXPN1 . DIV A_EXPN1
   69        | A_EXPN1 DIV A_EXPN1 .
   70        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 69 (A_EXPN1)


State 138

   68 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   69        | A_EXPN1 . DIV A_EXPN1
   70        | A_EXPN1 . MOD A_EXPN1
   70        | A_EXPN1 MOD A_EXPN1 .

    $default  reduce using rule 70 (A_EXPN1)


State 139

   72 A_EXPN2: A_EXPN2 . EXP A_EXPN2
   72        | A_EXPN2 EXP A_EXPN2 .

    EXP  shift, and go to state 109

    $default  reduce using rule 72 (A_EXPN2)


State 140

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 155


State 141

   59 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   61 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   62             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 119

    $default  reduce using rule 59 (VAR_ARRAY_ACCESS_LHS)


State 142

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC . LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 156
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 143

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 157


State 144

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 158


State 145

   63 ARRAY_ACCESS: LSQRB VAR RSQRB .

    $default  reduce using rule 63 (ARRAY_ACCESS)


State 146

   64 ARRAY_ACCESS: LSQRB NUMBER RSQRB .

    $default  reduce using rule 64 (ARRAY_ACCESS)


State 147

   65 A_EXPN: A_EXPN . PLUS A_EXPN
   66       | A_EXPN . MINUS A_EXPN
   74 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 128
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104


State 148

   61 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 159


State 149

   62 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 160


State 150

   25 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 25 (ARRAY_SIZE)


State 151

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 161


State 152

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   44              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 162
    AMPER  shift, and go to state 93
    OR     shift, and go to state 94

    LOGICAL_OPERATOR  go to state 95


State 153

   40 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   44 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 40 (LOGICAL_EXPN)
    RB        [reduce using rule 44 (LOGICAL_EXPN1)]
    SC        reduce using rule 40 (LOGICAL_EXPN)
    SC        [reduce using rule 44 (LOGICAL_EXPN1)]
    AMPER     reduce using rule 44 (LOGICAL_EXPN1)
    OR        reduce using rule 44 (LOGICAL_EXPN1)
    $default  reduce using rule 40 (LOGICAL_EXPN)


State 154

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 163
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 155

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 164
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 156

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN . SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 165


State 157

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 166


State 158

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 167
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 159

   61 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB .

    $default  reduce using rule 61 (ARRAY_ACCESS)


State 160

   62 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER RSQRB .

    $default  reduce using rule 62 (ARRAY_ACCESS)


State 161

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 24 (ARRAY_SIZE)


State 162

   44 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 44 (LOGICAL_EXPN1)


State 163

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 168


State 164

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 169


State 165

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC . VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 170

    VAR_EXPN2  go to state 171


State 166

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 51
    VAR     shift, and go to state 52
    NUMBER  shift, and go to state 53
    NOT     shift, and go to state 54

    LOGICAL_EXPN          go to state 172
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59
    A_EXPN1               go to state 60
    A_EXPN2               go to state 61
    A_EXPN3               go to state 62


State 167

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 173


State 168

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 174


State 169

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 175

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 170

   57 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   58          | VAR . UNARY_OPERATORS

    LSQRB   shift, and go to state 67
    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    ARRAY_ACCESS     go to state 176
    UNARY_OPERATORS  go to state 72


State 171

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 . RB LCB BODY2 RCB

    RB  shift, and go to state 177


State 172

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 178


State 173

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 174

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 179


State 175

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 180


State 176

   57 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   61 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   62             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 119
    UPLUS   shift, and go to state 69
    UMINUS  shift, and go to state 70

    UNARY_OPERATORS  go to state 120


State 177

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB . LCB BODY2 RCB

    LCB  shift, and go to state 181


State 178

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 182


State 179

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 183
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 180

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 184
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 181

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    VAR     shift, and go to state 38
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 185
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 182

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)


State 183

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 186


State 184

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 187


State 185

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 . RCB

    RCB  shift, and go to state 188


State 186

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)


State 187

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 188

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)
