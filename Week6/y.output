State 139 conflicts: 2 shift/reduce
State 167 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   14 VAR_LIST: VAR COMA VAR_LIST
   15         | ARRAY_DECLARATION COMA VAR_LIST
   16         | PTR_VAR VAR_LIST
   17         | VAR
   18         | ARRAY_DECLARATION
   19         | PTR_VAR

   20 PTR_VAR: PTR_DEPTH VAR

   21 PTR_DEPTH: MUL PTR_DEPTH
   22          | MUL

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   25           | LSQRB NUMBER RSQRB

   26 MAIN_TYPE: INT

   27 DATA_TYPE: INT
   28          | CHAR
   29          | FLOAT
   30          | DOUBLE

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC
   32                   | SC
   33                   | VAR_EXPN2 SC
   34                   | POINTER_STATEMENTS
   35                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   37                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   38                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   39                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   40                   | FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

   41 POINTER_STATEMENTS: POINTER_STATEMENT1

   42 POINTER_STATEMENT1: VAR EQ POINTER_STATEMENT1RHS SC

   43 POINTER_STATEMENT1RHS: REFERENCE_VAR POINTER_STATEMENT1RHS_ARTH
   44                      | REFERENCE_VAR
   45                      | LB POINTER_STATEMENT1RHS RB

   46 REFERENCE_VAR: AMPER VAR

   47 POINTER_STATEMENT1RHS_ARTH: PLUS A_EXPN
   48                           | MINUS A_EXPN

   49 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   50             | LOGICAL_EXPN1

   51 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   52              | LOGICAL_EXPN2
   53              | NOT LB LOGICAL_EXPN1 RB
   54              | LB LOGICAL_EXPN1 RB

   55 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH COMP_OPERATOR LOGICAL_EXPN2_ARTH

   56 LOGICAL_EXPN2_ARTH: A_EXPN

   57 COMP_OPERATOR: ET
   58              | GT
   59              | LT
   60              | GTE
   61              | LTE
   62              | NE

   63 LOGICAL_OPERATOR: AMPER AMPER
   64                 | OR

   65 VAR_EXPN1: VAR EQ A_EXPN
   66          | VAR_ARRAY_ACCESS_LHS EQ A_EXPN

   67 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS
   68          | VAR UNARY_OPERATORS

   69 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS

   70 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS

   71 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB
   72             | ARRAY_ACCESS LSQRB NUMBER RSQRB
   73             | LSQRB VAR RSQRB
   74             | LSQRB NUMBER RSQRB

   75 A_EXPN: A_EXPN PLUS A_EXPN
   76       | A_EXPN MINUS A_EXPN
   77       | A_EXPN1

   78 A_EXPN1: A_EXPN1 MUL A_EXPN1
   79        | A_EXPN1 DIV A_EXPN1
   80        | A_EXPN1 MOD A_EXPN1
   81        | A_EXPN2

   82 A_EXPN2: A_EXPN2 EXP A_EXPN2
   83        | A_EXPN3

   84 A_EXPN3: LB A_EXPN RB
   85        | NUMBER
   86        | VAR UNARY_OPERATORS
   87        | VAR
   88        | VAR_ARRAY_ACCESS_RHS UNARY_OPERATORS
   89        | VAR_ARRAY_ACCESS_RHS

   90 UNARY_OPERATORS: UPLUS
   91                | UMINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 35 36 37 38 39 40 45 49 53 54 84
    RB (263) 1 35 36 37 38 39 40 45 49 53 54 84
    LCB (264) 1 35 36 37 38 39 40
    RCB (265) 1 35 36 37 38 39 40
    LSQRB (266) 24 25 71 72 73 74
    RSQRB (267) 24 25 71 72 73 74
    SC (268) 13 31 32 33 39 40 42
    COLON (269) 35
    QMARK (270) 35
    COMA (271) 14 15
    IF (272) 36 37
    ELSE (273) 37
    FOR (274) 40
    DO (275) 39
    WHILE (276) 38 39
    ET (277) 57
    EQ (278) 42 65 66
    GT (279) 4 58
    LT (280) 4 59
    GTE (281) 60
    LTE (282) 61
    NE (283) 62
    AMPER (284) 46 63
    OR (285) 64
    NOT (286) 49 53
    DQUOTE (287) 5
    PLUS (288) 47 75
    MINUS (289) 48 76
    MUL (290) 21 22 78
    DIV (291) 6 7 79
    MOD (292) 80
    EXP (293) 82
    UPLUS (294) 90
    UMINUS (295) 91
    INT <data_type> (296) 26 27
    CHAR <data_type> (297) 28
    FLOAT <data_type> (298) 29
    DOUBLE <data_type> (299) 30
    VAR <var_name> (300) 6 14 17 20 23 42 46 65 67 68 69 70 71 73 86 87
    NUMBER <integer_val> (301) 24 25 72 74 85


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 35 36 37 38 39 40
    DECLARATION_STATEMENTS (54)
        on left: 13
        on right: 9 11
    VAR_LIST (55)
        on left: 14 15 16 17 18 19
        on right: 13 14 15 16
    PTR_VAR (56)
        on left: 20
        on right: 16 19
    PTR_DEPTH (57)
        on left: 21 22
        on right: 20 21
    ARRAY_DECLARATION (58)
        on left: 23
        on right: 15 18
    ARRAY_SIZE (59)
        on left: 24 25
        on right: 23 24
    MAIN_TYPE (60)
        on left: 26
        on right: 1
    DATA_TYPE <data_type> (61)
        on left: 27 28 29 30
        on right: 13
    PROGRAM_STATEMENTS (62)
        on left: 31 32 33 34 35 36 37 38 39 40
        on right: 12
    POINTER_STATEMENTS (63)
        on left: 41
        on right: 34
    POINTER_STATEMENT1 (64)
        on left: 42
        on right: 41
    POINTER_STATEMENT1RHS (65)
        on left: 43 44 45
        on right: 42 45
    REFERENCE_VAR (66)
        on left: 46
        on right: 43 44
    POINTER_STATEMENT1RHS_ARTH (67)
        on left: 47 48
        on right: 43
    LOGICAL_EXPN (68)
        on left: 49 50
        on right: 35 36 37 38 39 40
    LOGICAL_EXPN1 (69)
        on left: 51 52 53 54
        on right: 49 50 51 53 54
    LOGICAL_EXPN2 (70)
        on left: 55
        on right: 52
    LOGICAL_EXPN2_ARTH (71)
        on left: 56
        on right: 55
    COMP_OPERATOR (72)
        on left: 57 58 59 60 61 62
        on right: 55
    LOGICAL_OPERATOR (73)
        on left: 63 64
        on right: 51
    VAR_EXPN1 (74)
        on left: 65 66
        on right: 31 40
    VAR_EXPN2 (75)
        on left: 67 68
        on right: 33 40
    VAR_ARRAY_ACCESS_LHS (76)
        on left: 69
        on right: 66
    VAR_ARRAY_ACCESS_RHS (77)
        on left: 70
        on right: 88 89
    ARRAY_ACCESS (78)
        on left: 71 72 73 74
        on right: 67 69 70 71 72
    A_EXPN (79)
        on left: 75 76 77
        on right: 47 48 56 65 66 75 76 84
    A_EXPN1 (80)
        on left: 78 79 80 81
        on right: 77 78 79 80
    A_EXPN2 (81)
        on left: 82 83
        on right: 81 82
    A_EXPN3 (82)
        on left: 84 85 86 87 88 89
        on right: 83
    UNARY_OPERATORS (83)
        on left: 90 91
        on right: 67 68 86 88


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   26 MAIN_TYPE: INT .

    $default  reduce using rule 26 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DATA_TYPE               go to state 30


State 24

   27 DATA_TYPE: INT .

    $default  reduce using rule 27 (DATA_TYPE)


State 25

   28 DATA_TYPE: CHAR .

    $default  reduce using rule 28 (DATA_TYPE)


State 26

   29 DATA_TYPE: FLOAT .

    $default  reduce using rule 29 (DATA_TYPE)


State 27

   30 DATA_TYPE: DOUBLE .

    $default  reduce using rule 30 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 31


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 39
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 30

   13 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    MUL  shift, and go to state 47
    VAR  shift, and go to state 48

    VAR_LIST           go to state 49
    PTR_VAR            go to state 50
    PTR_DEPTH          go to state 51
    ARRAY_DECLARATION  go to state 52


State 31

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 32

   35 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 53
    NOT     shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN          go to state 57
    LOGICAL_EXPN1         go to state 58
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 33

   32 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 34

   36 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   37                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 66


State 35

   40 PROGRAM_STATEMENTS: FOR . LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB  shift, and go to state 67


State 36

   39 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 68


State 37

   38 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 69


State 38

   42 POINTER_STATEMENT1: VAR . EQ POINTER_STATEMENT1RHS SC
   65 VAR_EXPN1: VAR . EQ A_EXPN
   67 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   68          | VAR . UNARY_OPERATORS
   69 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB   shift, and go to state 70
    EQ      shift, and go to state 71
    UPLUS   shift, and go to state 72
    UMINUS  shift, and go to state 73

    ARRAY_ACCESS     go to state 74
    UNARY_OPERATORS  go to state 75


State 39

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 40

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 76
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 41

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 77
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 42

   34 PROGRAM_STATEMENTS: POINTER_STATEMENTS .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)


State 43

   41 POINTER_STATEMENTS: POINTER_STATEMENT1 .

    $default  reduce using rule 41 (POINTER_STATEMENTS)


State 44

   31 PROGRAM_STATEMENTS: VAR_EXPN1 . SC

    SC  shift, and go to state 78


State 45

   33 PROGRAM_STATEMENTS: VAR_EXPN2 . SC

    SC  shift, and go to state 79


State 46

   66 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS . EQ A_EXPN

    EQ  shift, and go to state 80


State 47

   21 PTR_DEPTH: MUL . PTR_DEPTH
   22          | MUL .

    MUL  shift, and go to state 47

    $default  reduce using rule 22 (PTR_DEPTH)

    PTR_DEPTH  go to state 81


State 48

   14 VAR_LIST: VAR . COMA VAR_LIST
   17         | VAR .
   23 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 82
    COMA   shift, and go to state 83

    $default  reduce using rule 17 (VAR_LIST)

    ARRAY_SIZE  go to state 84


State 49

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 85


State 50

   16 VAR_LIST: PTR_VAR . VAR_LIST
   19         | PTR_VAR .

    MUL  shift, and go to state 47
    VAR  shift, and go to state 48

    $default  reduce using rule 19 (VAR_LIST)

    VAR_LIST           go to state 86
    PTR_VAR            go to state 50
    PTR_DEPTH          go to state 51
    ARRAY_DECLARATION  go to state 52


State 51

   20 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 87


State 52

   15 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   18         | ARRAY_DECLARATION .

    COMA  shift, and go to state 88

    $default  reduce using rule 18 (VAR_LIST)


State 53

   54 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   84 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 53
    NOT     shift, and go to state 89
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN1         go to state 90
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 91
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 54

   49 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   53 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 92


State 55

   70 VAR_ARRAY_ACCESS_RHS: VAR . ARRAY_ACCESS
   86 A_EXPN3: VAR . UNARY_OPERATORS
   87        | VAR .

    LSQRB   shift, and go to state 70
    UPLUS   shift, and go to state 72
    UMINUS  shift, and go to state 73

    $default  reduce using rule 87 (A_EXPN3)

    ARRAY_ACCESS     go to state 93
    UNARY_OPERATORS  go to state 94


State 56

   85 A_EXPN3: NUMBER .

    $default  reduce using rule 85 (A_EXPN3)


State 57

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 95


State 58

   50 LOGICAL_EXPN: LOGICAL_EXPN1 .
   51 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AMPER  shift, and go to state 96
    OR     shift, and go to state 97

    $default  reduce using rule 50 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 98


State 59

   52 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 52 (LOGICAL_EXPN1)


State 60

   55 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH . COMP_OPERATOR LOGICAL_EXPN2_ARTH

    ET   shift, and go to state 99
    GT   shift, and go to state 100
    LT   shift, and go to state 101
    GTE  shift, and go to state 102
    LTE  shift, and go to state 103
    NE   shift, and go to state 104

    COMP_OPERATOR  go to state 105


State 61

   88 A_EXPN3: VAR_ARRAY_ACCESS_RHS . UNARY_OPERATORS
   89        | VAR_ARRAY_ACCESS_RHS .

    UPLUS   shift, and go to state 72
    UMINUS  shift, and go to state 73

    $default  reduce using rule 89 (A_EXPN3)

    UNARY_OPERATORS  go to state 106


State 62

   56 LOGICAL_EXPN2_ARTH: A_EXPN .
   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108

    $default  reduce using rule 56 (LOGICAL_EXPN2_ARTH)


State 63

   77 A_EXPN: A_EXPN1 .
   78 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   79        | A_EXPN1 . DIV A_EXPN1
   80        | A_EXPN1 . MOD A_EXPN1

    MUL  shift, and go to state 109
    DIV  shift, and go to state 110
    MOD  shift, and go to state 111

    $default  reduce using rule 77 (A_EXPN)


State 64

   81 A_EXPN1: A_EXPN2 .
   82 A_EXPN2: A_EXPN2 . EXP A_EXPN2

    EXP  shift, and go to state 112

    $default  reduce using rule 81 (A_EXPN1)


State 65

   83 A_EXPN2: A_EXPN3 .

    $default  reduce using rule 83 (A_EXPN2)


State 66

   36 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   37                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 53
    NOT     shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN          go to state 113
    LOGICAL_EXPN1         go to state 58
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 67

   40 PROGRAM_STATEMENTS: FOR LB . VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 114

    VAR_EXPN1             go to state 115
    VAR_ARRAY_ACCESS_LHS  go to state 46


State 68

   39 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 116
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 69

   38 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 53
    NOT     shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN          go to state 117
    LOGICAL_EXPN1         go to state 58
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 70

   73 ARRAY_ACCESS: LSQRB . VAR RSQRB
   74             | LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 118
    NUMBER  shift, and go to state 119


State 71

   42 POINTER_STATEMENT1: VAR EQ . POINTER_STATEMENT1RHS SC
   65 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 120
    AMPER   shift, and go to state 121
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    POINTER_STATEMENT1RHS  go to state 122
    REFERENCE_VAR          go to state 123
    VAR_ARRAY_ACCESS_RHS   go to state 61
    A_EXPN                 go to state 124
    A_EXPN1                go to state 63
    A_EXPN2                go to state 64
    A_EXPN3                go to state 65


State 72

   90 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 90 (UNARY_OPERATORS)


State 73

   91 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 91 (UNARY_OPERATORS)


State 74

   67 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   69 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   71 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   72             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 125
    UPLUS   shift, and go to state 72
    UMINUS  shift, and go to state 73

    $default  reduce using rule 69 (VAR_ARRAY_ACCESS_LHS)

    UNARY_OPERATORS  go to state 126


State 75

   68 VAR_EXPN2: VAR UNARY_OPERATORS .

    $default  reduce using rule 68 (VAR_EXPN2)


State 76

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 77

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 78

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC .

    $default  reduce using rule 31 (PROGRAM_STATEMENTS)


State 79

   33 PROGRAM_STATEMENTS: VAR_EXPN2 SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 80

   66 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ . A_EXPN

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 128
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 81

   21 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 21 (PTR_DEPTH)


State 82

   25 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 129


State 83

   14 VAR_LIST: VAR COMA . VAR_LIST

    MUL  shift, and go to state 47
    VAR  shift, and go to state 48

    VAR_LIST           go to state 130
    PTR_VAR            go to state 50
    PTR_DEPTH          go to state 51
    ARRAY_DECLARATION  go to state 52


State 84

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   24 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 131

    $default  reduce using rule 23 (ARRAY_DECLARATION)


State 85

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 86

   16 VAR_LIST: PTR_VAR VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 87

   20 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 20 (PTR_VAR)


State 88

   15 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    MUL  shift, and go to state 47
    VAR  shift, and go to state 48

    VAR_LIST           go to state 132
    PTR_VAR            go to state 50
    PTR_DEPTH          go to state 51
    ARRAY_DECLARATION  go to state 52


State 89

   53 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 133


State 90

   51 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   54              | LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 134
    AMPER  shift, and go to state 96
    OR     shift, and go to state 97

    LOGICAL_OPERATOR  go to state 98


State 91

   56 LOGICAL_EXPN2_ARTH: A_EXPN .
   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN
   84 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 135
    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108

    $default  reduce using rule 56 (LOGICAL_EXPN2_ARTH)


State 92

   49 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   53 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 53
    NOT     shift, and go to state 89
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN1         go to state 136
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 93

   70 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS .
   71 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   72             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 125

    $default  reduce using rule 70 (VAR_ARRAY_ACCESS_RHS)


State 94

   86 A_EXPN3: VAR UNARY_OPERATORS .

    $default  reduce using rule 86 (A_EXPN3)


State 95

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 137


State 96

   63 LOGICAL_OPERATOR: AMPER . AMPER

    AMPER  shift, and go to state 138


State 97

   64 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 64 (LOGICAL_OPERATOR)


State 98

   51 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 53
    NOT     shift, and go to state 89
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN1         go to state 139
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 99

   57 COMP_OPERATOR: ET .

    $default  reduce using rule 57 (COMP_OPERATOR)


State 100

   58 COMP_OPERATOR: GT .

    $default  reduce using rule 58 (COMP_OPERATOR)


State 101

   59 COMP_OPERATOR: LT .

    $default  reduce using rule 59 (COMP_OPERATOR)


State 102

   60 COMP_OPERATOR: GTE .

    $default  reduce using rule 60 (COMP_OPERATOR)


State 103

   61 COMP_OPERATOR: LTE .

    $default  reduce using rule 61 (COMP_OPERATOR)


State 104

   62 COMP_OPERATOR: NE .

    $default  reduce using rule 62 (COMP_OPERATOR)


State 105

   55 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH COMP_OPERATOR . LOGICAL_EXPN2_ARTH

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN2_ARTH    go to state 140
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 106

   88 A_EXPN3: VAR_ARRAY_ACCESS_RHS UNARY_OPERATORS .

    $default  reduce using rule 88 (A_EXPN3)


State 107

   75 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 141
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 108

   76 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 142
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 109

   78 A_EXPN1: A_EXPN1 MUL . A_EXPN1

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN1               go to state 143
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 110

   79 A_EXPN1: A_EXPN1 DIV . A_EXPN1

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN1               go to state 144
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 111

   80 A_EXPN1: A_EXPN1 MOD . A_EXPN1

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN1               go to state 145
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 112

   82 A_EXPN2: A_EXPN2 EXP . A_EXPN2

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN2               go to state 146
    A_EXPN3               go to state 65


State 113

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   37                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 147


State 114

   65 VAR_EXPN1: VAR . EQ A_EXPN
   69 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB  shift, and go to state 70
    EQ     shift, and go to state 148

    ARRAY_ACCESS  go to state 149


State 115

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 . SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 150


State 116

   39 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 151


State 117

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 152


State 118

   73 ARRAY_ACCESS: LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 153


State 119

   74 ARRAY_ACCESS: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 154


State 120

   45 POINTER_STATEMENT1RHS: LB . POINTER_STATEMENT1RHS RB
   84 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 120
    AMPER   shift, and go to state 121
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    POINTER_STATEMENT1RHS  go to state 155
    REFERENCE_VAR          go to state 123
    VAR_ARRAY_ACCESS_RHS   go to state 61
    A_EXPN                 go to state 156
    A_EXPN1                go to state 63
    A_EXPN2                go to state 64
    A_EXPN3                go to state 65


State 121

   46 REFERENCE_VAR: AMPER . VAR

    VAR  shift, and go to state 157


State 122

   42 POINTER_STATEMENT1: VAR EQ POINTER_STATEMENT1RHS . SC

    SC  shift, and go to state 158


State 123

   43 POINTER_STATEMENT1RHS: REFERENCE_VAR . POINTER_STATEMENT1RHS_ARTH
   44                      | REFERENCE_VAR .

    PLUS   shift, and go to state 159
    MINUS  shift, and go to state 160

    $default  reduce using rule 44 (POINTER_STATEMENT1RHS)

    POINTER_STATEMENT1RHS_ARTH  go to state 161


State 124

   65 VAR_EXPN1: VAR EQ A_EXPN .
   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108

    $default  reduce using rule 65 (VAR_EXPN1)


State 125

   71 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . VAR RSQRB
   72             | ARRAY_ACCESS LSQRB . NUMBER RSQRB

    VAR     shift, and go to state 162
    NUMBER  shift, and go to state 163


State 126

   67 VAR_EXPN2: VAR ARRAY_ACCESS UNARY_OPERATORS .

    $default  reduce using rule 67 (VAR_EXPN2)


State 127

   84 A_EXPN3: LB . A_EXPN RB

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 156
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 128

   66 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ A_EXPN .
   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108

    $default  reduce using rule 66 (VAR_EXPN1)


State 129

   25 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 164


State 130

   14 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 14 (VAR_LIST)


State 131

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 165


State 132

   15 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 133

   53 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 53
    NOT     shift, and go to state 89
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN1         go to state 166
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 134

   54 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 54 (LOGICAL_EXPN1)


State 135

   84 A_EXPN3: LB A_EXPN RB .

    $default  reduce using rule 84 (A_EXPN3)


State 136

   49 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   51 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   53              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 167
    AMPER  shift, and go to state 96
    OR     shift, and go to state 97

    LOGICAL_OPERATOR  go to state 98


State 137

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 168


State 138

   63 LOGICAL_OPERATOR: AMPER AMPER .

    $default  reduce using rule 63 (LOGICAL_OPERATOR)


State 139

   51 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   51              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AMPER  shift, and go to state 96
    OR     shift, and go to state 97

    AMPER     [reduce using rule 51 (LOGICAL_EXPN1)]
    OR        [reduce using rule 51 (LOGICAL_EXPN1)]
    $default  reduce using rule 51 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 98


State 140

   55 LOGICAL_EXPN2: LOGICAL_EXPN2_ARTH COMP_OPERATOR LOGICAL_EXPN2_ARTH .

    $default  reduce using rule 55 (LOGICAL_EXPN2)


State 141

   75 A_EXPN: A_EXPN . PLUS A_EXPN
   75       | A_EXPN PLUS A_EXPN .
   76       | A_EXPN . MINUS A_EXPN

    $default  reduce using rule 75 (A_EXPN)


State 142

   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN
   76       | A_EXPN MINUS A_EXPN .

    $default  reduce using rule 76 (A_EXPN)


State 143

   78 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   78        | A_EXPN1 MUL A_EXPN1 .
   79        | A_EXPN1 . DIV A_EXPN1
   80        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 78 (A_EXPN1)


State 144

   78 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   79        | A_EXPN1 . DIV A_EXPN1
   79        | A_EXPN1 DIV A_EXPN1 .
   80        | A_EXPN1 . MOD A_EXPN1

    $default  reduce using rule 79 (A_EXPN1)


State 145

   78 A_EXPN1: A_EXPN1 . MUL A_EXPN1
   79        | A_EXPN1 . DIV A_EXPN1
   80        | A_EXPN1 . MOD A_EXPN1
   80        | A_EXPN1 MOD A_EXPN1 .

    $default  reduce using rule 80 (A_EXPN1)


State 146

   82 A_EXPN2: A_EXPN2 . EXP A_EXPN2
   82        | A_EXPN2 EXP A_EXPN2 .

    EXP  shift, and go to state 112

    $default  reduce using rule 82 (A_EXPN2)


State 147

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   37                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 169


State 148

   65 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 124
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 149

   69 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   71 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   72             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 125

    $default  reduce using rule 69 (VAR_ARRAY_ACCESS_LHS)


State 150

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC . LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB      shift, and go to state 53
    NOT     shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN          go to state 170
    LOGICAL_EXPN1         go to state 58
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 151

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 171


State 152

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 172


State 153

   73 ARRAY_ACCESS: LSQRB VAR RSQRB .

    $default  reduce using rule 73 (ARRAY_ACCESS)


State 154

   74 ARRAY_ACCESS: LSQRB NUMBER RSQRB .

    $default  reduce using rule 74 (ARRAY_ACCESS)


State 155

   45 POINTER_STATEMENT1RHS: LB POINTER_STATEMENT1RHS . RB

    RB  shift, and go to state 173


State 156

   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN
   84 A_EXPN3: LB A_EXPN . RB

    RB     shift, and go to state 135
    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108


State 157

   46 REFERENCE_VAR: AMPER VAR .

    $default  reduce using rule 46 (REFERENCE_VAR)


State 158

   42 POINTER_STATEMENT1: VAR EQ POINTER_STATEMENT1RHS SC .

    $default  reduce using rule 42 (POINTER_STATEMENT1)


State 159

   47 POINTER_STATEMENT1RHS_ARTH: PLUS . A_EXPN

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 174
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 160

   48 POINTER_STATEMENT1RHS_ARTH: MINUS . A_EXPN

    LB      shift, and go to state 127
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 175
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 161

   43 POINTER_STATEMENT1RHS: REFERENCE_VAR POINTER_STATEMENT1RHS_ARTH .

    $default  reduce using rule 43 (POINTER_STATEMENT1RHS)


State 162

   71 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 176


State 163

   72 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 177


State 164

   25 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 25 (ARRAY_SIZE)


State 165

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 178


State 166

   51 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   53              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 179
    AMPER  shift, and go to state 96
    OR     shift, and go to state 97

    LOGICAL_OPERATOR  go to state 98


State 167

   49 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   53 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 49 (LOGICAL_EXPN)
    RB        [reduce using rule 53 (LOGICAL_EXPN1)]
    SC        reduce using rule 49 (LOGICAL_EXPN)
    SC        [reduce using rule 53 (LOGICAL_EXPN1)]
    AMPER     reduce using rule 53 (LOGICAL_EXPN1)
    OR        reduce using rule 53 (LOGICAL_EXPN1)
    $default  reduce using rule 49 (LOGICAL_EXPN)


State 168

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 180
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 169

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   37                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 181
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 170

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN . SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 182


State 171

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 183


State 172

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 184
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 173

   45 POINTER_STATEMENT1RHS: LB POINTER_STATEMENT1RHS RB .

    $default  reduce using rule 45 (POINTER_STATEMENT1RHS)


State 174

   47 POINTER_STATEMENT1RHS_ARTH: PLUS A_EXPN .
   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108

    $default  reduce using rule 47 (POINTER_STATEMENT1RHS_ARTH)


State 175

   48 POINTER_STATEMENT1RHS_ARTH: MINUS A_EXPN .
   75 A_EXPN: A_EXPN . PLUS A_EXPN
   76       | A_EXPN . MINUS A_EXPN

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108

    $default  reduce using rule 48 (POINTER_STATEMENT1RHS_ARTH)


State 176

   71 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB .

    $default  reduce using rule 71 (ARRAY_ACCESS)


State 177

   72 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER RSQRB .

    $default  reduce using rule 72 (ARRAY_ACCESS)


State 178

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 24 (ARRAY_SIZE)


State 179

   53 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 53 (LOGICAL_EXPN1)


State 180

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 185


State 181

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   37                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 186


State 182

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC . VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 187

    VAR_EXPN2  go to state 188


State 183

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 53
    NOT     shift, and go to state 54
    VAR     shift, and go to state 55
    NUMBER  shift, and go to state 56

    LOGICAL_EXPN          go to state 189
    LOGICAL_EXPN1         go to state 58
    LOGICAL_EXPN2         go to state 59
    LOGICAL_EXPN2_ARTH    go to state 60
    VAR_ARRAY_ACCESS_RHS  go to state 61
    A_EXPN                go to state 62
    A_EXPN1               go to state 63
    A_EXPN2               go to state 64
    A_EXPN3               go to state 65


State 184

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 190


State 185

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 191


State 186

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   37                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 192

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 187

   67 VAR_EXPN2: VAR . ARRAY_ACCESS UNARY_OPERATORS
   68          | VAR . UNARY_OPERATORS

    LSQRB   shift, and go to state 70
    UPLUS   shift, and go to state 72
    UMINUS  shift, and go to state 73

    ARRAY_ACCESS     go to state 193
    UNARY_OPERATORS  go to state 75


State 188

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 . RB LCB BODY2 RCB

    RB  shift, and go to state 194


State 189

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 195


State 190

   38 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)


State 191

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 196


State 192

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 197


State 193

   67 VAR_EXPN2: VAR ARRAY_ACCESS . UNARY_OPERATORS
   71 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   72             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 125
    UPLUS   shift, and go to state 72
    UMINUS  shift, and go to state 73

    UNARY_OPERATORS  go to state 126


State 194

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB . LCB BODY2 RCB

    LCB  shift, and go to state 198


State 195

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 199


State 196

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 200
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 197

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 201
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 198

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 202
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    POINTER_STATEMENTS      go to state 42
    POINTER_STATEMENT1      go to state 43
    VAR_EXPN1               go to state 44
    VAR_EXPN2               go to state 45
    VAR_ARRAY_ACCESS_LHS    go to state 46


State 199

   39 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)


State 200

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 203


State 201

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 204


State 202

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 . RCB

    RCB  shift, and go to state 205


State 203

   35 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 204

   37 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 205

   40 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB .

    $default  reduce using rule 40 (PROGRAM_STATEMENTS)
