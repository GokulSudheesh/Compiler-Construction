State 130 conflicts: 2 shift/reduce
State 151 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 HEADERS: HEADER HEADERS
    3        | HEADER

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT
    5       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    6 HEADER2: HEADER2 VAR DIV
    7        | DIV
    8        | %empty

    9 BODY: DECLARATION_STATEMENTS BODY2

   10 BODY2: %empty
   11      | DECLARATION_STATEMENTS BODY2
   12      | PROGRAM_STATEMENTS BODY2

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   14 VAR_LIST: VAR COMA VAR_LIST
   15         | ARRAY_DECLARATION COMA VAR_LIST
   16         | PTR_VAR VAR_LIST
   17         | VAR
   18         | ARRAY_DECLARATION
   19         | PTR_VAR

   20 PTR_VAR: PTR_DEPTH VAR

   21 PTR_DEPTH: MUL PTR_DEPTH
   22          | MUL

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB
   25           | LSQRB NUMBER RSQRB

   26 MAIN_TYPE: INT

   27 DATA_TYPE: INT
   28          | CHAR
   29          | FLOAT
   30          | DOUBLE

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC
   32                   | SC
   33                   | VAR_EXPN2 SC
   34                   | LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB
   35                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB
   37                   | WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB
   38                   | DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC
   39                   | FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

   40 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   41             | LOGICAL_EXPN1

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   43              | LOGICAL_EXPN2
   44              | NOT LB LOGICAL_EXPN1 RB
   45              | LB LOGICAL_EXPN1 RB

   46 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   47 COMP_OPERATOR: ET
   48              | GT
   49              | LT
   50              | GTE
   51              | LTE
   52              | NE

   53 LOGICAL_OPERATOR: AND
   54                 | OR

   55 VAR_EXPN1: VAR EQ A_EXPN
   56          | VAR_ARRAY_ACCESS_LHS EQ A_EXPN

   57 VAR_EXPN2: VAR ARRAY_ACCESS UPLUS
   58          | VAR ARRAY_ACCESS UMINUS
   59          | VAR UPLUS
   60          | VAR UMINUS

   61 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS

   62 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS

   63 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB
   64             | ARRAY_ACCESS LSQRB NUMBER RSQRB
   65             | LSQRB VAR RSQRB
   66             | LSQRB NUMBER RSQRB

   67 A_EXPN: A_EXPN PLUS A_EXPN
   68       | A_EXPN MINUS A_EXPN
   69       | A_EXPN MUL A_EXPN
   70       | A_EXPN DIV A_EXPN
   71       | A_EXPN MOD A_EXPN
   72       | A_EXPN EXP A_EXPN
   73       | LB A_EXPN RB
   74       | VAR UPLUS
   75       | VAR UMINUS
   76       | VAR
   77       | NUMBER
   78       | VAR_ARRAY_ACCESS_RHS UPLUS
   79       | VAR_ARRAY_ACCESS_RHS UMINUS
   80       | VAR_ARRAY_ACCESS_RHS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 4 5
    INCLUDE (259) 4 5
    HEADER_FILE (260) 4 5
    MAIN (261) 1
    LB (262) 1 34 35 36 37 38 39 40 44 45 73
    RB (263) 1 34 35 36 37 38 39 40 44 45 73
    LCB (264) 1 34 35 36 37 38 39
    RCB (265) 1 34 35 36 37 38 39
    LSQRB (266) 24 25 63 64 65 66
    RSQRB (267) 24 25 63 64 65 66
    SC (268) 13 31 32 33 38 39
    COLON (269) 34
    QMARK (270) 34
    COMA (271) 14 15
    IF (272) 35 36
    ELSE (273) 36
    FOR (274) 39
    DO (275) 38
    WHILE (276) 37 38
    NUMBER (277) 24 25 64 66 77
    ET (278) 47
    EQ (279) 55 56
    GT (280) 4 48
    LT (281) 4 49
    GTE (282) 50
    LTE (283) 51
    NE (284) 52
    AND (285) 53
    OR (286) 54
    NOT (287) 40 44
    DQUOTE (288) 5
    PLUS (289) 67
    MINUS (290) 68
    MUL (291) 21 22 69
    DIV (292) 6 7 70
    MOD (293) 71
    EXP (294) 72
    UPLUS (295) 57 59 74 78
    UMINUS (296) 58 60 75 79
    INT <data_type> (297) 26 27
    CHAR <data_type> (298) 28
    FLOAT <data_type> (299) 29
    DOUBLE <data_type> (300) 30
    VAR <var_name> (301) 6 14 17 20 23 55 57 58 59 60 61 62 63 65 74 75 76


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prm (48)
        on left: 1
        on right: 0
    HEADERS (49)
        on left: 2 3
        on right: 1 2
    HEADER (50)
        on left: 4 5
        on right: 2 3
    HEADER2 (51)
        on left: 6 7 8
        on right: 5 6
    BODY (52)
        on left: 9
        on right: 1
    BODY2 (53)
        on left: 10 11 12
        on right: 9 11 12 34 35 36 37 38 39
    DECLARATION_STATEMENTS (54)
        on left: 13
        on right: 9 11
    VAR_LIST (55)
        on left: 14 15 16 17 18 19
        on right: 13 14 15 16
    PTR_VAR (56)
        on left: 20
        on right: 16 19
    PTR_DEPTH (57)
        on left: 21 22
        on right: 20 21
    ARRAY_DECLARATION (58)
        on left: 23
        on right: 15 18
    ARRAY_SIZE (59)
        on left: 24 25
        on right: 23 24
    MAIN_TYPE (60)
        on left: 26
        on right: 1
    DATA_TYPE <data_type> (61)
        on left: 27 28 29 30
        on right: 13
    PROGRAM_STATEMENTS (62)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 12
    LOGICAL_EXPN (63)
        on left: 40 41
        on right: 34 35 36 37 38 39
    LOGICAL_EXPN1 (64)
        on left: 42 43 44 45
        on right: 40 41 42 44 45
    LOGICAL_EXPN2 (65)
        on left: 46
        on right: 43
    COMP_OPERATOR (66)
        on left: 47 48 49 50 51 52
        on right: 46
    LOGICAL_OPERATOR (67)
        on left: 53 54
        on right: 42
    VAR_EXPN1 (68)
        on left: 55 56
        on right: 31 39
    VAR_EXPN2 (69)
        on left: 57 58 59 60
        on right: 33 39
    VAR_ARRAY_ACCESS_LHS (70)
        on left: 61
        on right: 56
    VAR_ARRAY_ACCESS_RHS (71)
        on left: 62
        on right: 78 79 80
    ARRAY_ACCESS (72)
        on left: 63 64 65 66
        on right: 57 58 61 62 63 64
    A_EXPN (73)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 46 55 56 67 68 69 70 71 72 73


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    4 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    5       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    1 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    2 HEADERS: HEADER . HEADERS
    3        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 3 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    4 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    5       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   26 MAIN_TYPE: INT .

    $default  reduce using rule 26 (MAIN_TYPE)


State 8

    1 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 12


State 9

    2 HEADERS: HEADER HEADERS .

    $default  reduce using rule 2 (HEADERS)


State 10

    4 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    5 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 8 (HEADER2)

    HEADER2  go to state 15


State 12

    1 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 16


State 13

    4 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    7 HEADER2: DIV .

    $default  reduce using rule 7 (HEADER2)


State 15

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    6 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    1 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 20


State 17

    4 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 4 (HEADER)


State 18

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    6 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    1 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 23


State 21

    5 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 5 (HEADER)


State 22

    6 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 6 (HEADER2)


State 23

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27

    BODY                    go to state 28
    DECLARATION_STATEMENTS  go to state 29
    DATA_TYPE               go to state 30


State 24

   27 DATA_TYPE: INT .

    $default  reduce using rule 27 (DATA_TYPE)


State 25

   28 DATA_TYPE: CHAR .

    $default  reduce using rule 28 (DATA_TYPE)


State 26

   29 DATA_TYPE: FLOAT .

    $default  reduce using rule 29 (DATA_TYPE)


State 27

   30 DATA_TYPE: DOUBLE .

    $default  reduce using rule 30 (DATA_TYPE)


State 28

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 31


State 29

    9 BODY: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 39
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 30

   13 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    MUL  shift, and go to state 45
    VAR  shift, and go to state 46

    VAR_LIST           go to state 47
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 31

    1 prm: HEADERS MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 32

   34 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 53
    VAR     shift, and go to state 54

    LOGICAL_EXPN          go to state 55
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 33

   32 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 32 (PROGRAM_STATEMENTS)


State 34

   35 PROGRAM_STATEMENTS: IF . LB LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF . LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB  shift, and go to state 60


State 35

   39 PROGRAM_STATEMENTS: FOR . LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB  shift, and go to state 61


State 36

   38 PROGRAM_STATEMENTS: DO . LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 62


State 37

   37 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB BODY2 RCB

    LB  shift, and go to state 63


State 38

   55 VAR_EXPN1: VAR . EQ A_EXPN
   57 VAR_EXPN2: VAR . ARRAY_ACCESS UPLUS
   58          | VAR . ARRAY_ACCESS UMINUS
   59          | VAR . UPLUS
   60          | VAR . UMINUS
   61 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB   shift, and go to state 64
    EQ      shift, and go to state 65
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    ARRAY_ACCESS  go to state 68


State 39

    9 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 9 (BODY)


State 40

   11 BODY2: DECLARATION_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 69
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 41

   12 BODY2: PROGRAM_STATEMENTS . BODY2

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 70
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 42

   31 PROGRAM_STATEMENTS: VAR_EXPN1 . SC

    SC  shift, and go to state 71


State 43

   33 PROGRAM_STATEMENTS: VAR_EXPN2 . SC

    SC  shift, and go to state 72


State 44

   56 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS . EQ A_EXPN

    EQ  shift, and go to state 73


State 45

   21 PTR_DEPTH: MUL . PTR_DEPTH
   22          | MUL .

    MUL  shift, and go to state 45

    $default  reduce using rule 22 (PTR_DEPTH)

    PTR_DEPTH  go to state 74


State 46

   14 VAR_LIST: VAR . COMA VAR_LIST
   17         | VAR .
   23 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 75
    COMA   shift, and go to state 76

    $default  reduce using rule 17 (VAR_LIST)

    ARRAY_SIZE  go to state 77


State 47

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 78


State 48

   16 VAR_LIST: PTR_VAR . VAR_LIST
   19         | PTR_VAR .

    MUL  shift, and go to state 45
    VAR  shift, and go to state 46

    $default  reduce using rule 19 (VAR_LIST)

    VAR_LIST           go to state 79
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 49

   20 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 80


State 50

   15 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   18         | ARRAY_DECLARATION .

    COMA  shift, and go to state 81

    $default  reduce using rule 18 (VAR_LIST)


State 51

   45 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   73 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 82
    VAR     shift, and go to state 54

    LOGICAL_EXPN1         go to state 83
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 84


State 52

   77 A_EXPN: NUMBER .

    $default  reduce using rule 77 (A_EXPN)


State 53

   40 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   44 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 85


State 54

   62 VAR_ARRAY_ACCESS_RHS: VAR . ARRAY_ACCESS
   74 A_EXPN: VAR . UPLUS
   75       | VAR . UMINUS
   76       | VAR .

    LSQRB   shift, and go to state 64
    UPLUS   shift, and go to state 86
    UMINUS  shift, and go to state 87

    $default  reduce using rule 76 (A_EXPN)

    ARRAY_ACCESS  go to state 88


State 55

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    RB  shift, and go to state 89


State 56

   41 LOGICAL_EXPN: LOGICAL_EXPN1 .
   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AND  shift, and go to state 90
    OR   shift, and go to state 91

    $default  reduce using rule 41 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 92


State 57

   43 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 43 (LOGICAL_EXPN1)


State 58

   78 A_EXPN: VAR_ARRAY_ACCESS_RHS . UPLUS
   79       | VAR_ARRAY_ACCESS_RHS . UMINUS
   80       | VAR_ARRAY_ACCESS_RHS .

    UPLUS   shift, and go to state 93
    UMINUS  shift, and go to state 94

    $default  reduce using rule 80 (A_EXPN)


State 59

   46 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    ET     shift, and go to state 95
    GT     shift, and go to state 96
    LT     shift, and go to state 97
    GTE    shift, and go to state 98
    LTE    shift, and go to state 99
    NE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MUL    shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EXP    shift, and go to state 106

    COMP_OPERATOR  go to state 107


State 60

   35 PROGRAM_STATEMENTS: IF LB . LOGICAL_EXPN RB LCB BODY2 RCB
   36                   | IF LB . LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 53
    VAR     shift, and go to state 54

    LOGICAL_EXPN          go to state 108
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 61

   39 PROGRAM_STATEMENTS: FOR LB . VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 109

    VAR_EXPN1             go to state 110
    VAR_ARRAY_ACCESS_LHS  go to state 44


State 62

   38 PROGRAM_STATEMENTS: DO LCB . BODY2 RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 111
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 63

   37 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB BODY2 RCB

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 53
    VAR     shift, and go to state 54

    LOGICAL_EXPN          go to state 112
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 64

   65 ARRAY_ACCESS: LSQRB . VAR RSQRB
   66             | LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 113
    VAR     shift, and go to state 114


State 65

   55 VAR_EXPN1: VAR EQ . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 116


State 66

   59 VAR_EXPN2: VAR UPLUS .

    $default  reduce using rule 59 (VAR_EXPN2)


State 67

   60 VAR_EXPN2: VAR UMINUS .

    $default  reduce using rule 60 (VAR_EXPN2)


State 68

   57 VAR_EXPN2: VAR ARRAY_ACCESS . UPLUS
   58          | VAR ARRAY_ACCESS . UMINUS
   61 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   63 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   64             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 117
    UPLUS   shift, and go to state 118
    UMINUS  shift, and go to state 119

    $default  reduce using rule 61 (VAR_ARRAY_ACCESS_LHS)


State 69

   11 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 11 (BODY2)


State 70

   12 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 71

   31 PROGRAM_STATEMENTS: VAR_EXPN1 SC .

    $default  reduce using rule 31 (PROGRAM_STATEMENTS)


State 72

   33 PROGRAM_STATEMENTS: VAR_EXPN2 SC .

    $default  reduce using rule 33 (PROGRAM_STATEMENTS)


State 73

   56 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 120


State 74

   21 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 21 (PTR_DEPTH)


State 75

   25 ARRAY_SIZE: LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 121


State 76

   14 VAR_LIST: VAR COMA . VAR_LIST

    MUL  shift, and go to state 45
    VAR  shift, and go to state 46

    VAR_LIST           go to state 122
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 77

   23 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   24 ARRAY_SIZE: ARRAY_SIZE . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 123

    $default  reduce using rule 23 (ARRAY_DECLARATION)


State 78

   13 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 13 (DECLARATION_STATEMENTS)


State 79

   16 VAR_LIST: PTR_VAR VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 80

   20 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 20 (PTR_VAR)


State 81

   15 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    MUL  shift, and go to state 45
    VAR  shift, and go to state 46

    VAR_LIST           go to state 124
    PTR_VAR            go to state 48
    PTR_DEPTH          go to state 49
    ARRAY_DECLARATION  go to state 50


State 82

   44 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 125


State 83

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   45              | LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 126
    AND  shift, and go to state 90
    OR   shift, and go to state 91

    LOGICAL_OPERATOR  go to state 92


State 84

   46 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN
   73       | LB A_EXPN . RB

    RB     shift, and go to state 127
    ET     shift, and go to state 95
    GT     shift, and go to state 96
    LT     shift, and go to state 97
    GTE    shift, and go to state 98
    LTE    shift, and go to state 99
    NE     shift, and go to state 100
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MUL    shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EXP    shift, and go to state 106

    COMP_OPERATOR  go to state 107


State 85

   40 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   44 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 82
    VAR     shift, and go to state 54

    LOGICAL_EXPN1         go to state 128
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 86

   74 A_EXPN: VAR UPLUS .

    $default  reduce using rule 74 (A_EXPN)


State 87

   75 A_EXPN: VAR UMINUS .

    $default  reduce using rule 75 (A_EXPN)


State 88

   62 VAR_ARRAY_ACCESS_RHS: VAR ARRAY_ACCESS .
   63 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   64             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 117

    $default  reduce using rule 62 (VAR_ARRAY_ACCESS_RHS)


State 89

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB BODY2 RCB COLON LCB BODY2 RCB

    QMARK  shift, and go to state 129


State 90

   53 LOGICAL_OPERATOR: AND .

    $default  reduce using rule 53 (LOGICAL_OPERATOR)


State 91

   54 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 54 (LOGICAL_OPERATOR)


State 92

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 82
    VAR     shift, and go to state 54

    LOGICAL_EXPN1         go to state 130
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 93

   78 A_EXPN: VAR_ARRAY_ACCESS_RHS UPLUS .

    $default  reduce using rule 78 (A_EXPN)


State 94

   79 A_EXPN: VAR_ARRAY_ACCESS_RHS UMINUS .

    $default  reduce using rule 79 (A_EXPN)


State 95

   47 COMP_OPERATOR: ET .

    $default  reduce using rule 47 (COMP_OPERATOR)


State 96

   48 COMP_OPERATOR: GT .

    $default  reduce using rule 48 (COMP_OPERATOR)


State 97

   49 COMP_OPERATOR: LT .

    $default  reduce using rule 49 (COMP_OPERATOR)


State 98

   50 COMP_OPERATOR: GTE .

    $default  reduce using rule 50 (COMP_OPERATOR)


State 99

   51 COMP_OPERATOR: LTE .

    $default  reduce using rule 51 (COMP_OPERATOR)


State 100

   52 COMP_OPERATOR: NE .

    $default  reduce using rule 52 (COMP_OPERATOR)


State 101

   67 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 131


State 102

   68 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 132


State 103

   69 A_EXPN: A_EXPN MUL . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 133


State 104

   70 A_EXPN: A_EXPN DIV . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 134


State 105

   71 A_EXPN: A_EXPN MOD . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 135


State 106

   72 A_EXPN: A_EXPN EXP . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 136


State 107

   46 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 137


State 108

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN . RB LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN . RB LCB BODY2 RCB ELSE LCB BODY2 RCB

    RB  shift, and go to state 138


State 109

   55 VAR_EXPN1: VAR . EQ A_EXPN
   61 VAR_ARRAY_ACCESS_LHS: VAR . ARRAY_ACCESS

    LSQRB  shift, and go to state 64
    EQ     shift, and go to state 65

    ARRAY_ACCESS  go to state 139


State 110

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 . SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 140


State 111

   38 PROGRAM_STATEMENTS: DO LCB BODY2 . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 141


State 112

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB BODY2 RCB

    RB  shift, and go to state 142


State 113

   66 ARRAY_ACCESS: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 143


State 114

   65 ARRAY_ACCESS: LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 144


State 115

   73 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 115
    NUMBER  shift, and go to state 52
    VAR     shift, and go to state 54

    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 145


State 116

   55 VAR_EXPN1: VAR EQ A_EXPN .
   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MUL    shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EXP    shift, and go to state 106

    $default  reduce using rule 55 (VAR_EXPN1)


State 117

   63 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . VAR RSQRB
   64             | ARRAY_ACCESS LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 146
    VAR     shift, and go to state 147


State 118

   57 VAR_EXPN2: VAR ARRAY_ACCESS UPLUS .

    $default  reduce using rule 57 (VAR_EXPN2)


State 119

   58 VAR_EXPN2: VAR ARRAY_ACCESS UMINUS .

    $default  reduce using rule 58 (VAR_EXPN2)


State 120

   56 VAR_EXPN1: VAR_ARRAY_ACCESS_LHS EQ A_EXPN .
   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MUL    shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EXP    shift, and go to state 106

    $default  reduce using rule 56 (VAR_EXPN1)


State 121

   25 ARRAY_SIZE: LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 148


State 122

   14 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 14 (VAR_LIST)


State 123

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB . NUMBER RSQRB

    NUMBER  shift, and go to state 149


State 124

   15 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 125

   44 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 82
    VAR     shift, and go to state 54

    LOGICAL_EXPN1         go to state 150
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 126

   45 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 45 (LOGICAL_EXPN1)


State 127

   73 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 73 (A_EXPN)


State 128

   40 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   44              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 151
    AND  shift, and go to state 90
    OR   shift, and go to state 91

    LOGICAL_OPERATOR  go to state 92


State 129

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB BODY2 RCB COLON LCB BODY2 RCB

    LCB  shift, and go to state 152


State 130

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   42              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AND  shift, and go to state 90
    OR   shift, and go to state 91

    AND       [reduce using rule 42 (LOGICAL_EXPN1)]
    OR        [reduce using rule 42 (LOGICAL_EXPN1)]
    $default  reduce using rule 42 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 92


State 131

   67 A_EXPN: A_EXPN . PLUS A_EXPN
   67       | A_EXPN PLUS A_EXPN .
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    MUL  shift, and go to state 103
    DIV  shift, and go to state 104
    MOD  shift, and go to state 105
    EXP  shift, and go to state 106

    $default  reduce using rule 67 (A_EXPN)


State 132

   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   68       | A_EXPN MINUS A_EXPN .
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    MUL  shift, and go to state 103
    DIV  shift, and go to state 104
    MOD  shift, and go to state 105
    EXP  shift, and go to state 106

    $default  reduce using rule 68 (A_EXPN)


State 133

   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   69       | A_EXPN MUL A_EXPN .
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 106

    $default  reduce using rule 69 (A_EXPN)


State 134

   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   70       | A_EXPN DIV A_EXPN .
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 106

    $default  reduce using rule 70 (A_EXPN)


State 135

   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   71       | A_EXPN MOD A_EXPN .
   72       | A_EXPN . EXP A_EXPN

    EXP  shift, and go to state 106

    $default  reduce using rule 71 (A_EXPN)


State 136

   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN
   72       | A_EXPN EXP A_EXPN .

    EXP  shift, and go to state 106

    $default  reduce using rule 72 (A_EXPN)


State 137

   46 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MUL    shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EXP    shift, and go to state 106

    $default  reduce using rule 46 (LOGICAL_EXPN2)


State 138

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB . LCB BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB . LCB BODY2 RCB ELSE LCB BODY2 RCB

    LCB  shift, and go to state 153


State 139

   61 VAR_ARRAY_ACCESS_LHS: VAR ARRAY_ACCESS .
   63 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   64             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB  shift, and go to state 117

    $default  reduce using rule 61 (VAR_ARRAY_ACCESS_LHS)


State 140

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC . LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 53
    VAR     shift, and go to state 54

    LOGICAL_EXPN          go to state 154
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 141

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 155


State 142

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB BODY2 RCB

    LCB  shift, and go to state 156


State 143

   66 ARRAY_ACCESS: LSQRB NUMBER RSQRB .

    $default  reduce using rule 66 (ARRAY_ACCESS)


State 144

   65 ARRAY_ACCESS: LSQRB VAR RSQRB .

    $default  reduce using rule 65 (ARRAY_ACCESS)


State 145

   67 A_EXPN: A_EXPN . PLUS A_EXPN
   68       | A_EXPN . MINUS A_EXPN
   69       | A_EXPN . MUL A_EXPN
   70       | A_EXPN . DIV A_EXPN
   71       | A_EXPN . MOD A_EXPN
   72       | A_EXPN . EXP A_EXPN
   73       | LB A_EXPN . RB

    RB     shift, and go to state 127
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    MUL    shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EXP    shift, and go to state 106


State 146

   64 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 157


State 147

   63 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR . RSQRB

    RSQRB  shift, and go to state 158


State 148

   25 ARRAY_SIZE: LSQRB NUMBER RSQRB .

    $default  reduce using rule 25 (ARRAY_SIZE)


State 149

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER . RSQRB

    RSQRB  shift, and go to state 159


State 150

   42 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   44              | NOT LB LOGICAL_EXPN1 . RB

    RB   shift, and go to state 160
    AND  shift, and go to state 90
    OR   shift, and go to state 91

    LOGICAL_OPERATOR  go to state 92


State 151

   40 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   44 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 40 (LOGICAL_EXPN)
    RB        [reduce using rule 44 (LOGICAL_EXPN1)]
    SC        reduce using rule 40 (LOGICAL_EXPN)
    SC        [reduce using rule 44 (LOGICAL_EXPN1)]
    AND       reduce using rule 44 (LOGICAL_EXPN1)
    OR        reduce using rule 44 (LOGICAL_EXPN1)
    $default  reduce using rule 40 (LOGICAL_EXPN)


State 152

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . BODY2 RCB COLON LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 161
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 153

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB . BODY2 RCB
   36                   | IF LB LOGICAL_EXPN RB LCB . BODY2 RCB ELSE LCB BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 162
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 154

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN . SC VAR_EXPN2 RB LCB BODY2 RCB

    SC  shift, and go to state 163


State 155

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 164


State 156

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 165
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 157

   64 ARRAY_ACCESS: ARRAY_ACCESS LSQRB NUMBER RSQRB .

    $default  reduce using rule 64 (ARRAY_ACCESS)


State 158

   63 ARRAY_ACCESS: ARRAY_ACCESS LSQRB VAR RSQRB .

    $default  reduce using rule 63 (ARRAY_ACCESS)


State 159

   24 ARRAY_SIZE: ARRAY_SIZE LSQRB NUMBER RSQRB .

    $default  reduce using rule 24 (ARRAY_SIZE)


State 160

   44 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 44 (LOGICAL_EXPN1)


State 161

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 . RCB COLON LCB BODY2 RCB

    RCB  shift, and go to state 166


State 162

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 . RCB
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 . RCB ELSE LCB BODY2 RCB

    RCB  shift, and go to state 167


State 163

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC . VAR_EXPN2 RB LCB BODY2 RCB

    VAR  shift, and go to state 168

    VAR_EXPN2  go to state 169


State 164

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 51
    NUMBER  shift, and go to state 52
    NOT     shift, and go to state 53
    VAR     shift, and go to state 54

    LOGICAL_EXPN          go to state 170
    LOGICAL_EXPN1         go to state 56
    LOGICAL_EXPN2         go to state 57
    VAR_ARRAY_ACCESS_RHS  go to state 58
    A_EXPN                go to state 59


State 165

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 . RCB

    RCB  shift, and go to state 171


State 166

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB . COLON LCB BODY2 RCB

    COLON  shift, and go to state 172


State 167

   35 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB .
   36                   | IF LB LOGICAL_EXPN RB LCB BODY2 RCB . ELSE LCB BODY2 RCB

    ELSE  shift, and go to state 173

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 168

   57 VAR_EXPN2: VAR . ARRAY_ACCESS UPLUS
   58          | VAR . ARRAY_ACCESS UMINUS
   59          | VAR . UPLUS
   60          | VAR . UMINUS

    LSQRB   shift, and go to state 64
    UPLUS   shift, and go to state 66
    UMINUS  shift, and go to state 67

    ARRAY_ACCESS  go to state 174


State 169

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 . RB LCB BODY2 RCB

    RB  shift, and go to state 175


State 170

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 176


State 171

   37 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB BODY2 RCB .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 172

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON . LCB BODY2 RCB

    LCB  shift, and go to state 177


State 173

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE . LCB BODY2 RCB

    LCB  shift, and go to state 178


State 174

   57 VAR_EXPN2: VAR ARRAY_ACCESS . UPLUS
   58          | VAR ARRAY_ACCESS . UMINUS
   63 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB VAR RSQRB
   64             | ARRAY_ACCESS . LSQRB NUMBER RSQRB

    LSQRB   shift, and go to state 117
    UPLUS   shift, and go to state 118
    UMINUS  shift, and go to state 119


State 175

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB . LCB BODY2 RCB

    LCB  shift, and go to state 179


State 176

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 180


State 177

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 181
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 178

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 182
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 179

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB . BODY2 RCB

    LB      shift, and go to state 32
    SC      shift, and go to state 33
    IF      shift, and go to state 34
    FOR     shift, and go to state 35
    DO      shift, and go to state 36
    WHILE   shift, and go to state 37
    INT     shift, and go to state 24
    CHAR    shift, and go to state 25
    FLOAT   shift, and go to state 26
    DOUBLE  shift, and go to state 27
    VAR     shift, and go to state 38

    $default  reduce using rule 10 (BODY2)

    BODY2                   go to state 183
    DECLARATION_STATEMENTS  go to state 40
    DATA_TYPE               go to state 30
    PROGRAM_STATEMENTS      go to state 41
    VAR_EXPN1               go to state 42
    VAR_EXPN2               go to state 43
    VAR_ARRAY_ACCESS_LHS    go to state 44


State 180

   38 PROGRAM_STATEMENTS: DO LCB BODY2 RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)


State 181

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 . RCB

    RCB  shift, and go to state 184


State 182

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 . RCB

    RCB  shift, and go to state 185


State 183

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 . RCB

    RCB  shift, and go to state 186


State 184

   34 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB BODY2 RCB COLON LCB BODY2 RCB .

    $default  reduce using rule 34 (PROGRAM_STATEMENTS)


State 185

   36 PROGRAM_STATEMENTS: IF LB LOGICAL_EXPN RB LCB BODY2 RCB ELSE LCB BODY2 RCB .

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 186

   39 PROGRAM_STATEMENTS: FOR LB VAR_EXPN1 SC LOGICAL_EXPN SC VAR_EXPN2 RB LCB BODY2 RCB .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)
