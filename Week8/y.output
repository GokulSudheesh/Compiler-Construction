State 141 conflicts: 8 shift/reduce
State 142 conflicts: 8 shift/reduce
State 156 conflicts: 2 shift/reduce
State 173 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB

    3 HEADERS: HEADER HEADERS
    4        | HEADER

    5 HEADER: HASH INCLUDE LT HEADER_FILE GT
    6       | HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    7 HEADER2: HEADER2 VAR DIV
    8        | DIV
    9        | %empty

   10 BODY: DECLARATION_STATEMENTS BODY2

   11 BODY2: %empty
   12      | DECLARATION_STATEMENTS BODY2
   13      | PROGRAM_STATEMENTS BODY2

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC

   15 VAR_LIST: VAR COMA VAR_LIST
   16         | ARRAY_DECLARATION COMA VAR_LIST
   17         | PTR_VAR COMA VAR_LIST
   18         | VAR_LIST2 COMA VAR_LIST
   19         | VAR
   20         | ARRAY_DECLARATION
   21         | PTR_VAR
   22         | VAR_LIST2

   23 VAR_LIST2: VAR EQ A_EXPN

   24 PTR_VAR: PTR_DEPTH VAR

   25 PTR_DEPTH: MUL PTR_DEPTH
   26          | MUL

   27 ARRAY_DECLARATION: VAR ARRAY_SIZE

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB INT_NUMBER RSQRB
   29           | LSQRB INT_NUMBER RSQRB

   30 MAIN_TYPE: INT

   31 DATA_TYPE: INT
   32          | CHAR
   33          | FLOAT
   34          | DOUBLE

   35 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC
   36                   | SC
   37                   | WRITE_STATEMENT
   38                   | READ_STATEMENT
   39                   | INCR_DCR_EXPN SC

   40 $@2: %empty

   41 $@3: %empty

   42 $@4: %empty

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB
   44                   | CONDITIONAL_STATEMENTS

   45 $@5: %empty

   46 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB

   47 $@6: %empty

   48 $@7: %empty

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

   50 $@8: %empty

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

   52 $@9: %empty

   53 WRITE_STATEMENT: PRINTF LB Q_STRING $@9 RB SC

   54 $@10: %empty

   55 WRITE_STATEMENT: PRINTF LB Q_STRING $@10 COMA VAR_LIST_OP RB SC

   56 VAR_LIST_OP: A_EXPN COMA VAR_LIST_OP
   57            | A_EXPN

   58 $@11: %empty

   59 READ_STATEMENT: SCANF LB Q_STRING $@11 COMA VAR_LIST_IP RB SC

   60 VAR_LIST_IP: A_EXPN COMA VAR_LIST_IP
   61            | A_EXPN

   62 CONDITIONAL_STATEMENTS: IF_STATEMENT
   63                       | IF_STATEMENT ELSE_STATEMENT
   64                       | IF_STATEMENT ELSE_IF_STATEMENT
   65                       | IF_STATEMENT ELSE_IF_STATEMENT ELSE_STATEMENT

   66 $@12: %empty

   67 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@12 BODY2 RCB

   68 $@13: %empty

   69 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@13 BODY2 RCB

   70 $@14: %empty

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@14 BODY2 RCB

   72 $@15: %empty

   73 ELSE_STATEMENT: ELSE LCB $@15 BODY2 RCB

   74 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN

   75 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB
   76             | LOGICAL_EXPN1

   77 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1
   78              | LOGICAL_EXPN2
   79              | NOT LB LOGICAL_EXPN1 RB
   80              | LB LOGICAL_EXPN1 RB

   81 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN

   82 COMP_OPERATOR: ET
   83              | GT
   84              | LT
   85              | GTE
   86              | LTE
   87              | NE

   88 LOGICAL_OPERATOR: AMPER AMPER
   89                 | OR

   90 A_EXPN: A_EXPN OPR_PREC1 A_EXPN
   91       | A_EXPN OPR_PREC2 A_EXPN
   92       | LB A_EXPN RB
   93       | INCR_DCR_EXPN
   94       | VAR
   95       | INT_NUMBER
   96       | FLOAT_NUMBER
   97       | MUL A_EXPN
   98       | ARRAY_ACCESS
   99       | AMPER A_EXPN

  100 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB
  101             | VAR LSQRB A_EXPN RSQRB

  102 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS

  103 UNARY_OPERATORS: UPLUS
  104                | UMINUS

  105 OPR_PREC1: PLUS
  106          | MINUS

  107 OPR_PREC2: DIV
  108          | MUL
  109          | EXP
  110          | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HASH (258) 5 6
    INCLUDE (259) 5 6
    HEADER_FILE (260) 5 6
    MAIN (261) 2
    LB (262) 2 43 46 49 51 53 55 59 67 69 71 75 79 80 92
    RB (263) 2 43 46 49 51 53 55 59 67 69 71 75 79 80 92
    LCB (264) 2 43 46 49 51 67 69 71 73
    RCB (265) 2 43 46 49 51 67 69 71 73
    LSQRB (266) 28 29 100 101
    RSQRB (267) 28 29 100 101
    SC (268) 14 35 36 39 49 51 53 55 59
    COLON (269) 43
    QMARK (270) 43
    COMA (271) 15 16 17 18 55 56 59 60
    IF (272) 67
    ELSE_IF (273) 69 71
    ELSE (274) 73
    FOR (275) 51
    DO (276) 49
    WHILE (277) 46 49
    PRINTF (278) 53 55
    SCANF (279) 59
    ET (280) 82
    EQ (281) 23 74
    GT (282) 5 83
    LT (283) 5 84
    GTE (284) 85
    LTE (285) 86
    NE (286) 87
    AMPER (287) 88 99
    OR (288) 89
    NOT (289) 75 79
    DQUOTE (290) 6
    PLUS (291) 105
    MINUS (292) 106
    MUL (293) 25 26 97 108
    DIV (294) 7 8 107
    MOD (295) 110
    EXP (296) 109
    UPLUS (297) 103
    UMINUS (298) 104
    INT <data_type> (299) 30 31
    CHAR <data_type> (300) 32
    FLOAT <data_type> (301) 33
    DOUBLE <data_type> (302) 34
    VAR <var_name> (303) 7 15 19 23 24 27 94 101
    INT_NUMBER <integer_val> (304) 28 29 95
    FLOAT_NUMBER <float_val> (305) 96
    Q_STRING <q_string> (306) 53 55 59


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    prm (53)
        on left: 2
        on right: 0
    $@1 (54)
        on left: 1
        on right: 2
    HEADERS (55)
        on left: 3 4
        on right: 2 3
    HEADER (56)
        on left: 5 6
        on right: 3 4
    HEADER2 (57)
        on left: 7 8 9
        on right: 6 7
    BODY (58)
        on left: 10
        on right: 2
    BODY2 (59)
        on left: 11 12 13
        on right: 10 12 13 43 46 49 51 67 69 71 73
    DECLARATION_STATEMENTS (60)
        on left: 14
        on right: 10 12
    VAR_LIST (61)
        on left: 15 16 17 18 19 20 21 22
        on right: 14 15 16 17 18
    VAR_LIST2 (62)
        on left: 23
        on right: 18 22
    PTR_VAR (63)
        on left: 24
        on right: 17 21
    PTR_DEPTH (64)
        on left: 25 26
        on right: 24 25
    ARRAY_DECLARATION (65)
        on left: 27
        on right: 16 20
    ARRAY_SIZE (66)
        on left: 28 29
        on right: 27 28
    MAIN_TYPE (67)
        on left: 30
        on right: 2
    DATA_TYPE <data_type> (68)
        on left: 31 32 33 34
        on right: 14
    PROGRAM_STATEMENTS (69)
        on left: 35 36 37 38 39 43 44 46 49 51
        on right: 13
    $@2 (70)
        on left: 40
        on right: 43
    $@3 (71)
        on left: 41
        on right: 43
    $@4 (72)
        on left: 42
        on right: 43
    $@5 (73)
        on left: 45
        on right: 46
    $@6 (74)
        on left: 47
        on right: 49
    $@7 (75)
        on left: 48
        on right: 49
    $@8 (76)
        on left: 50
        on right: 51
    WRITE_STATEMENT (77)
        on left: 53 55
        on right: 37
    $@9 (78)
        on left: 52
        on right: 53
    $@10 (79)
        on left: 54
        on right: 55
    VAR_LIST_OP (80)
        on left: 56 57
        on right: 55 56
    READ_STATEMENT (81)
        on left: 59
        on right: 38
    $@11 (82)
        on left: 58
        on right: 59
    VAR_LIST_IP (83)
        on left: 60 61
        on right: 59 60
    CONDITIONAL_STATEMENTS (84)
        on left: 62 63 64 65
        on right: 44
    IF_STATEMENT (85)
        on left: 67
        on right: 62 63 64 65
    $@12 (86)
        on left: 66
        on right: 67
    ELSE_IF_STATEMENT (87)
        on left: 69 71
        on right: 64 65 71
    $@13 (88)
        on left: 68
        on right: 69
    $@14 (89)
        on left: 70
        on right: 71
    ELSE_STATEMENT (90)
        on left: 73
        on right: 63 65
    $@15 (91)
        on left: 72
        on right: 73
    ASSIGNMENT_STATEMENT (92)
        on left: 74
        on right: 35 51
    LOGICAL_EXPN (93)
        on left: 75 76
        on right: 43 46 49 51 67 69 71
    LOGICAL_EXPN1 (94)
        on left: 77 78 79 80
        on right: 75 76 77 79 80
    LOGICAL_EXPN2 (95)
        on left: 81
        on right: 78
    COMP_OPERATOR (96)
        on left: 82 83 84 85 86 87
        on right: 81
    LOGICAL_OPERATOR (97)
        on left: 88 89
        on right: 77
    A_EXPN <EXPN_type> (98)
        on left: 90 91 92 93 94 95 96 97 98 99
        on right: 23 56 57 60 61 74 81 90 91 92 97 99 100 101 102
    ARRAY_ACCESS <EXPN_type> (99)
        on left: 100 101
        on right: 98 100
    INCR_DCR_EXPN <EXPN_type> (100)
        on left: 102
        on right: 39 51 93
    UNARY_OPERATORS (101)
        on left: 103 104
        on right: 102
    OPR_PREC1 (102)
        on left: 105 106
        on right: 90
    OPR_PREC2 (103)
        on left: 107 108 109 110
        on right: 91


State 0

    0 $accept: . prm $end

    HASH  shift, and go to state 1

    prm      go to state 2
    HEADERS  go to state 3
    HEADER   go to state 4


State 1

    5 HEADER: HASH . INCLUDE LT HEADER_FILE GT
    6       | HASH . INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE

    INCLUDE  shift, and go to state 5


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 6


State 3

    2 prm: HEADERS . MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB

    INT  shift, and go to state 7

    MAIN_TYPE  go to state 8


State 4

    3 HEADERS: HEADER . HEADERS
    4        | HEADER .

    HASH  shift, and go to state 1

    $default  reduce using rule 4 (HEADERS)

    HEADERS  go to state 9
    HEADER   go to state 4


State 5

    5 HEADER: HASH INCLUDE . LT HEADER_FILE GT
    6       | HASH INCLUDE . DQUOTE HEADER2 HEADER_FILE DQUOTE

    LT      shift, and go to state 10
    DQUOTE  shift, and go to state 11


State 6

    0 $accept: prm $end .

    $default  accept


State 7

   30 MAIN_TYPE: INT .

    $default  reduce using rule 30 (MAIN_TYPE)


State 8

    2 prm: HEADERS MAIN_TYPE . MAIN LB RB LCB $@1 BODY RCB

    MAIN  shift, and go to state 12


State 9

    3 HEADERS: HEADER HEADERS .

    $default  reduce using rule 3 (HEADERS)


State 10

    5 HEADER: HASH INCLUDE LT . HEADER_FILE GT

    HEADER_FILE  shift, and go to state 13


State 11

    6 HEADER: HASH INCLUDE DQUOTE . HEADER2 HEADER_FILE DQUOTE

    DIV  shift, and go to state 14

    $default  reduce using rule 9 (HEADER2)

    HEADER2  go to state 15


State 12

    2 prm: HEADERS MAIN_TYPE MAIN . LB RB LCB $@1 BODY RCB

    LB  shift, and go to state 16


State 13

    5 HEADER: HASH INCLUDE LT HEADER_FILE . GT

    GT  shift, and go to state 17


State 14

    8 HEADER2: DIV .

    $default  reduce using rule 8 (HEADER2)


State 15

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 . HEADER_FILE DQUOTE
    7 HEADER2: HEADER2 . VAR DIV

    HEADER_FILE  shift, and go to state 18
    VAR          shift, and go to state 19


State 16

    2 prm: HEADERS MAIN_TYPE MAIN LB . RB LCB $@1 BODY RCB

    RB  shift, and go to state 20


State 17

    5 HEADER: HASH INCLUDE LT HEADER_FILE GT .

    $default  reduce using rule 5 (HEADER)


State 18

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE . DQUOTE

    DQUOTE  shift, and go to state 21


State 19

    7 HEADER2: HEADER2 VAR . DIV

    DIV  shift, and go to state 22


State 20

    2 prm: HEADERS MAIN_TYPE MAIN LB RB . LCB $@1 BODY RCB

    LCB  shift, and go to state 23


State 21

    6 HEADER: HASH INCLUDE DQUOTE HEADER2 HEADER_FILE DQUOTE .

    $default  reduce using rule 6 (HEADER)


State 22

    7 HEADER2: HEADER2 VAR DIV .

    $default  reduce using rule 7 (HEADER2)


State 23

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB . $@1 BODY RCB

    $default  reduce using rule 1 ($@1)

    $@1  go to state 24


State 24

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 . BODY RCB

    INT     shift, and go to state 25
    CHAR    shift, and go to state 26
    FLOAT   shift, and go to state 27
    DOUBLE  shift, and go to state 28

    BODY                    go to state 29
    DECLARATION_STATEMENTS  go to state 30
    DATA_TYPE               go to state 31


State 25

   31 DATA_TYPE: INT .

    $default  reduce using rule 31 (DATA_TYPE)


State 26

   32 DATA_TYPE: CHAR .

    $default  reduce using rule 32 (DATA_TYPE)


State 27

   33 DATA_TYPE: FLOAT .

    $default  reduce using rule 33 (DATA_TYPE)


State 28

   34 DATA_TYPE: DOUBLE .

    $default  reduce using rule 34 (DATA_TYPE)


State 29

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY . RCB

    RCB  shift, and go to state 32


State 30

   10 BODY: DECLARATION_STATEMENTS . BODY2

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 46
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 31

   14 DECLARATION_STATEMENTS: DATA_TYPE . VAR_LIST SC

    MUL  shift, and go to state 57
    VAR  shift, and go to state 58

    VAR_LIST           go to state 59
    VAR_LIST2          go to state 60
    PTR_VAR            go to state 61
    PTR_DEPTH          go to state 62
    ARRAY_DECLARATION  go to state 63


State 32

    2 prm: HEADERS MAIN_TYPE MAIN LB RB LCB $@1 BODY RCB .

    $default  reduce using rule 2 (prm)


State 33

   43 PROGRAM_STATEMENTS: LB . LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB
   92 A_EXPN: LB . A_EXPN RB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 65
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN   go to state 66
    LOGICAL_EXPN1  go to state 67
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 69
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 34

   36 PROGRAM_STATEMENTS: SC .

    $default  reduce using rule 36 (PROGRAM_STATEMENTS)


State 35

   67 IF_STATEMENT: IF . LB LOGICAL_EXPN RB LCB $@12 BODY2 RCB

    LB  shift, and go to state 71


State 36

   51 PROGRAM_STATEMENTS: FOR . LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB  shift, and go to state 72


State 37

   49 PROGRAM_STATEMENTS: DO . LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 73


State 38

   46 PROGRAM_STATEMENTS: WHILE . LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB

    LB  shift, and go to state 74


State 39

   53 WRITE_STATEMENT: PRINTF . LB Q_STRING $@9 RB SC
   55                | PRINTF . LB Q_STRING $@10 COMA VAR_LIST_OP RB SC

    LB  shift, and go to state 75


State 40

   59 READ_STATEMENT: SCANF . LB Q_STRING $@11 COMA VAR_LIST_IP RB SC

    LB  shift, and go to state 76


State 41

   99 A_EXPN: AMPER . A_EXPN

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 78
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 42

   97 A_EXPN: MUL . A_EXPN

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 79
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 43

   94 A_EXPN: VAR .
  101 ARRAY_ACCESS: VAR . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 80

    $default  reduce using rule 94 (A_EXPN)


State 44

   95 A_EXPN: INT_NUMBER .

    $default  reduce using rule 95 (A_EXPN)


State 45

   96 A_EXPN: FLOAT_NUMBER .

    $default  reduce using rule 96 (A_EXPN)


State 46

   10 BODY: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 10 (BODY)


State 47

   12 BODY2: DECLARATION_STATEMENTS . BODY2

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 81
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 48

   13 BODY2: PROGRAM_STATEMENTS . BODY2

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 82
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 49

   37 PROGRAM_STATEMENTS: WRITE_STATEMENT .

    $default  reduce using rule 37 (PROGRAM_STATEMENTS)


State 50

   38 PROGRAM_STATEMENTS: READ_STATEMENT .

    $default  reduce using rule 38 (PROGRAM_STATEMENTS)


State 51

   44 PROGRAM_STATEMENTS: CONDITIONAL_STATEMENTS .

    $default  reduce using rule 44 (PROGRAM_STATEMENTS)


State 52

   62 CONDITIONAL_STATEMENTS: IF_STATEMENT .
   63                       | IF_STATEMENT . ELSE_STATEMENT
   64                       | IF_STATEMENT . ELSE_IF_STATEMENT
   65                       | IF_STATEMENT . ELSE_IF_STATEMENT ELSE_STATEMENT

    ELSE_IF  shift, and go to state 83
    ELSE     shift, and go to state 84

    $default  reduce using rule 62 (CONDITIONAL_STATEMENTS)

    ELSE_IF_STATEMENT  go to state 85
    ELSE_STATEMENT     go to state 86


State 53

   35 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT . SC

    SC  shift, and go to state 87


State 54

   74 ASSIGNMENT_STATEMENT: A_EXPN . EQ A_EXPN
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EQ      shift, and go to state 88
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 55

   98 A_EXPN: ARRAY_ACCESS .
  100 ARRAY_ACCESS: ARRAY_ACCESS . LSQRB A_EXPN RSQRB

    LSQRB  shift, and go to state 100

    $default  reduce using rule 98 (A_EXPN)


State 56

   39 PROGRAM_STATEMENTS: INCR_DCR_EXPN . SC
   93 A_EXPN: INCR_DCR_EXPN .

    SC  shift, and go to state 101

    $default  reduce using rule 93 (A_EXPN)


State 57

   25 PTR_DEPTH: MUL . PTR_DEPTH
   26          | MUL .

    MUL  shift, and go to state 57

    $default  reduce using rule 26 (PTR_DEPTH)

    PTR_DEPTH  go to state 102


State 58

   15 VAR_LIST: VAR . COMA VAR_LIST
   19         | VAR .
   23 VAR_LIST2: VAR . EQ A_EXPN
   27 ARRAY_DECLARATION: VAR . ARRAY_SIZE

    LSQRB  shift, and go to state 103
    COMA   shift, and go to state 104
    EQ     shift, and go to state 105

    $default  reduce using rule 19 (VAR_LIST)

    ARRAY_SIZE  go to state 106


State 59

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 107


State 60

   18 VAR_LIST: VAR_LIST2 . COMA VAR_LIST
   22         | VAR_LIST2 .

    COMA  shift, and go to state 108

    $default  reduce using rule 22 (VAR_LIST)


State 61

   17 VAR_LIST: PTR_VAR . COMA VAR_LIST
   21         | PTR_VAR .

    COMA  shift, and go to state 109

    $default  reduce using rule 21 (VAR_LIST)


State 62

   24 PTR_VAR: PTR_DEPTH . VAR

    VAR  shift, and go to state 110


State 63

   16 VAR_LIST: ARRAY_DECLARATION . COMA VAR_LIST
   20         | ARRAY_DECLARATION .

    COMA  shift, and go to state 111

    $default  reduce using rule 20 (VAR_LIST)


State 64

   80 LOGICAL_EXPN1: LB . LOGICAL_EXPN1 RB
   92 A_EXPN: LB . A_EXPN RB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 112
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN1  go to state 113
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 69
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 65

   75 LOGICAL_EXPN: NOT . LB LOGICAL_EXPN1 RB
   79 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 114


State 66

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN . RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    RB  shift, and go to state 115


State 67

   76 LOGICAL_EXPN: LOGICAL_EXPN1 .
   77 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1

    AMPER  shift, and go to state 116
    OR     shift, and go to state 117

    $default  reduce using rule 76 (LOGICAL_EXPN)

    LOGICAL_OPERATOR  go to state 118


State 68

   78 LOGICAL_EXPN1: LOGICAL_EXPN2 .

    $default  reduce using rule 78 (LOGICAL_EXPN1)


State 69

   81 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
   92       | LB A_EXPN . RB
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 119
    ET      shift, and go to state 120
    GT      shift, and go to state 121
    LT      shift, and go to state 122
    GTE     shift, and go to state 123
    LTE     shift, and go to state 124
    NE      shift, and go to state 125
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    COMP_OPERATOR    go to state 126
    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 70

   93 A_EXPN: INCR_DCR_EXPN .

    $default  reduce using rule 93 (A_EXPN)


State 71

   67 IF_STATEMENT: IF LB . LOGICAL_EXPN RB LCB $@12 BODY2 RCB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 65
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN   go to state 127
    LOGICAL_EXPN1  go to state 67
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 72

   51 PROGRAM_STATEMENTS: FOR LB . ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    ASSIGNMENT_STATEMENT  go to state 129
    A_EXPN                go to state 54
    ARRAY_ACCESS          go to state 55
    INCR_DCR_EXPN         go to state 70


State 73

   49 PROGRAM_STATEMENTS: DO LCB . $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    $default  reduce using rule 47 ($@6)

    $@6  go to state 130


State 74

   46 PROGRAM_STATEMENTS: WHILE LB . LOGICAL_EXPN RB LCB $@5 BODY2 RCB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 65
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN   go to state 131
    LOGICAL_EXPN1  go to state 67
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 75

   53 WRITE_STATEMENT: PRINTF LB . Q_STRING $@9 RB SC
   55                | PRINTF LB . Q_STRING $@10 COMA VAR_LIST_OP RB SC

    Q_STRING  shift, and go to state 132


State 76

   59 READ_STATEMENT: SCANF LB . Q_STRING $@11 COMA VAR_LIST_IP RB SC

    Q_STRING  shift, and go to state 133


State 77

   92 A_EXPN: LB . A_EXPN RB

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 134
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 78

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
   99       | AMPER A_EXPN .
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    $default  reduce using rule 99 (A_EXPN)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 79

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
   97       | MUL A_EXPN .
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    $default  reduce using rule 97 (A_EXPN)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 80

  101 ARRAY_ACCESS: VAR LSQRB . A_EXPN RSQRB

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 135
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 81

   12 BODY2: DECLARATION_STATEMENTS BODY2 .

    $default  reduce using rule 12 (BODY2)


State 82

   13 BODY2: PROGRAM_STATEMENTS BODY2 .

    $default  reduce using rule 13 (BODY2)


State 83

   69 ELSE_IF_STATEMENT: ELSE_IF . LB LOGICAL_EXPN RB LCB $@13 BODY2 RCB

    LB  shift, and go to state 136


State 84

   73 ELSE_STATEMENT: ELSE . LCB $@15 BODY2 RCB

    LCB  shift, and go to state 137


State 85

   64 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_IF_STATEMENT .
   65                       | IF_STATEMENT ELSE_IF_STATEMENT . ELSE_STATEMENT
   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT . ELSE_IF LB LOGICAL_EXPN RB LCB $@14 BODY2 RCB

    ELSE_IF  shift, and go to state 138
    ELSE     shift, and go to state 84

    $default  reduce using rule 64 (CONDITIONAL_STATEMENTS)

    ELSE_STATEMENT  go to state 139


State 86

   63 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_STATEMENT .

    $default  reduce using rule 63 (CONDITIONAL_STATEMENTS)


State 87

   35 PROGRAM_STATEMENTS: ASSIGNMENT_STATEMENT SC .

    $default  reduce using rule 35 (PROGRAM_STATEMENTS)


State 88

   74 ASSIGNMENT_STATEMENT: A_EXPN EQ . A_EXPN

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 140
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 89

  105 OPR_PREC1: PLUS .

    $default  reduce using rule 105 (OPR_PREC1)


State 90

  106 OPR_PREC1: MINUS .

    $default  reduce using rule 106 (OPR_PREC1)


State 91

  108 OPR_PREC2: MUL .

    $default  reduce using rule 108 (OPR_PREC2)


State 92

  107 OPR_PREC2: DIV .

    $default  reduce using rule 107 (OPR_PREC2)


State 93

  110 OPR_PREC2: MOD .

    $default  reduce using rule 110 (OPR_PREC2)


State 94

  109 OPR_PREC2: EXP .

    $default  reduce using rule 109 (OPR_PREC2)


State 95

  103 UNARY_OPERATORS: UPLUS .

    $default  reduce using rule 103 (UNARY_OPERATORS)


State 96

  104 UNARY_OPERATORS: UMINUS .

    $default  reduce using rule 104 (UNARY_OPERATORS)


State 97

  102 INCR_DCR_EXPN: A_EXPN UNARY_OPERATORS .

    $default  reduce using rule 102 (INCR_DCR_EXPN)


State 98

   90 A_EXPN: A_EXPN OPR_PREC1 . A_EXPN

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 141
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 99

   91 A_EXPN: A_EXPN OPR_PREC2 . A_EXPN

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 142
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 100

  100 ARRAY_ACCESS: ARRAY_ACCESS LSQRB . A_EXPN RSQRB

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 143
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 101

   39 PROGRAM_STATEMENTS: INCR_DCR_EXPN SC .

    $default  reduce using rule 39 (PROGRAM_STATEMENTS)


State 102

   25 PTR_DEPTH: MUL PTR_DEPTH .

    $default  reduce using rule 25 (PTR_DEPTH)


State 103

   29 ARRAY_SIZE: LSQRB . INT_NUMBER RSQRB

    INT_NUMBER  shift, and go to state 144


State 104

   15 VAR_LIST: VAR COMA . VAR_LIST

    MUL  shift, and go to state 57
    VAR  shift, and go to state 58

    VAR_LIST           go to state 145
    VAR_LIST2          go to state 60
    PTR_VAR            go to state 61
    PTR_DEPTH          go to state 62
    ARRAY_DECLARATION  go to state 63


State 105

   23 VAR_LIST2: VAR EQ . A_EXPN

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 146
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 106

   27 ARRAY_DECLARATION: VAR ARRAY_SIZE .
   28 ARRAY_SIZE: ARRAY_SIZE . LSQRB INT_NUMBER RSQRB

    LSQRB  shift, and go to state 147

    $default  reduce using rule 27 (ARRAY_DECLARATION)


State 107

   14 DECLARATION_STATEMENTS: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 14 (DECLARATION_STATEMENTS)


State 108

   18 VAR_LIST: VAR_LIST2 COMA . VAR_LIST

    MUL  shift, and go to state 57
    VAR  shift, and go to state 58

    VAR_LIST           go to state 148
    VAR_LIST2          go to state 60
    PTR_VAR            go to state 61
    PTR_DEPTH          go to state 62
    ARRAY_DECLARATION  go to state 63


State 109

   17 VAR_LIST: PTR_VAR COMA . VAR_LIST

    MUL  shift, and go to state 57
    VAR  shift, and go to state 58

    VAR_LIST           go to state 149
    VAR_LIST2          go to state 60
    PTR_VAR            go to state 61
    PTR_DEPTH          go to state 62
    ARRAY_DECLARATION  go to state 63


State 110

   24 PTR_VAR: PTR_DEPTH VAR .

    $default  reduce using rule 24 (PTR_VAR)


State 111

   16 VAR_LIST: ARRAY_DECLARATION COMA . VAR_LIST

    MUL  shift, and go to state 57
    VAR  shift, and go to state 58

    VAR_LIST           go to state 150
    VAR_LIST2          go to state 60
    PTR_VAR            go to state 61
    PTR_DEPTH          go to state 62
    ARRAY_DECLARATION  go to state 63


State 112

   79 LOGICAL_EXPN1: NOT . LB LOGICAL_EXPN1 RB

    LB  shift, and go to state 151


State 113

   77 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   80              | LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 152
    AMPER  shift, and go to state 116
    OR     shift, and go to state 117

    LOGICAL_OPERATOR  go to state 118


State 114

   75 LOGICAL_EXPN: NOT LB . LOGICAL_EXPN1 RB
   79 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 112
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN1  go to state 153
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 115

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB . QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    QMARK  shift, and go to state 154


State 116

   88 LOGICAL_OPERATOR: AMPER . AMPER

    AMPER  shift, and go to state 155


State 117

   89 LOGICAL_OPERATOR: OR .

    $default  reduce using rule 89 (LOGICAL_OPERATOR)


State 118

   77 LOGICAL_EXPN1: LOGICAL_EXPN1 LOGICAL_OPERATOR . LOGICAL_EXPN1

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 112
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN1  go to state 156
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 119

   92 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 92 (A_EXPN)


State 120

   82 COMP_OPERATOR: ET .

    $default  reduce using rule 82 (COMP_OPERATOR)


State 121

   83 COMP_OPERATOR: GT .

    $default  reduce using rule 83 (COMP_OPERATOR)


State 122

   84 COMP_OPERATOR: LT .

    $default  reduce using rule 84 (COMP_OPERATOR)


State 123

   85 COMP_OPERATOR: GTE .

    $default  reduce using rule 85 (COMP_OPERATOR)


State 124

   86 COMP_OPERATOR: LTE .

    $default  reduce using rule 86 (COMP_OPERATOR)


State 125

   87 COMP_OPERATOR: NE .

    $default  reduce using rule 87 (COMP_OPERATOR)


State 126

   81 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR . A_EXPN

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 157
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 127

   67 IF_STATEMENT: IF LB LOGICAL_EXPN . RB LCB $@12 BODY2 RCB

    RB  shift, and go to state 158


State 128

   81 LOGICAL_EXPN2: A_EXPN . COMP_OPERATOR A_EXPN
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    ET      shift, and go to state 120
    GT      shift, and go to state 121
    LT      shift, and go to state 122
    GTE     shift, and go to state 123
    LTE     shift, and go to state 124
    NE      shift, and go to state 125
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    COMP_OPERATOR    go to state 126
    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 129

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT . SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    SC  shift, and go to state 159


State 130

   49 PROGRAM_STATEMENTS: DO LCB $@6 . BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 160
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 131

   46 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN . RB LCB $@5 BODY2 RCB

    RB  shift, and go to state 161


State 132

   53 WRITE_STATEMENT: PRINTF LB Q_STRING . $@9 RB SC
   55                | PRINTF LB Q_STRING . $@10 COMA VAR_LIST_OP RB SC

    COMA      reduce using rule 54 ($@10)
    $default  reduce using rule 52 ($@9)

    $@9   go to state 162
    $@10  go to state 163


State 133

   59 READ_STATEMENT: SCANF LB Q_STRING . $@11 COMA VAR_LIST_IP RB SC

    $default  reduce using rule 58 ($@11)

    $@11  go to state 164


State 134

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
   92       | LB A_EXPN . RB
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RB      shift, and go to state 119
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 135

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  101 ARRAY_ACCESS: VAR LSQRB A_EXPN . RSQRB
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 165
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 136

   69 ELSE_IF_STATEMENT: ELSE_IF LB . LOGICAL_EXPN RB LCB $@13 BODY2 RCB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 65
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN   go to state 166
    LOGICAL_EXPN1  go to state 67
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 137

   73 ELSE_STATEMENT: ELSE LCB . $@15 BODY2 RCB

    $default  reduce using rule 72 ($@15)

    $@15  go to state 167


State 138

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF . LB LOGICAL_EXPN RB LCB $@14 BODY2 RCB

    LB  shift, and go to state 168


State 139

   65 CONDITIONAL_STATEMENTS: IF_STATEMENT ELSE_IF_STATEMENT ELSE_STATEMENT .

    $default  reduce using rule 65 (CONDITIONAL_STATEMENTS)


State 140

   74 ASSIGNMENT_STATEMENT: A_EXPN EQ A_EXPN .
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    $default  reduce using rule 74 (ASSIGNMENT_STATEMENT)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 141

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   90       | A_EXPN OPR_PREC1 A_EXPN .
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    PLUS      [reduce using rule 90 (A_EXPN)]
    MINUS     [reduce using rule 90 (A_EXPN)]
    MUL       [reduce using rule 90 (A_EXPN)]
    DIV       [reduce using rule 90 (A_EXPN)]
    MOD       [reduce using rule 90 (A_EXPN)]
    EXP       [reduce using rule 90 (A_EXPN)]
    UPLUS     [reduce using rule 90 (A_EXPN)]
    UMINUS    [reduce using rule 90 (A_EXPN)]
    $default  reduce using rule 90 (A_EXPN)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 142

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
   91       | A_EXPN OPR_PREC2 A_EXPN .
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    PLUS      [reduce using rule 91 (A_EXPN)]
    MINUS     [reduce using rule 91 (A_EXPN)]
    MUL       [reduce using rule 91 (A_EXPN)]
    DIV       [reduce using rule 91 (A_EXPN)]
    MOD       [reduce using rule 91 (A_EXPN)]
    EXP       [reduce using rule 91 (A_EXPN)]
    UPLUS     [reduce using rule 91 (A_EXPN)]
    UMINUS    [reduce using rule 91 (A_EXPN)]
    $default  reduce using rule 91 (A_EXPN)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 143

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  100 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN . RSQRB
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    RSQRB   shift, and go to state 169
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 144

   29 ARRAY_SIZE: LSQRB INT_NUMBER . RSQRB

    RSQRB  shift, and go to state 170


State 145

   15 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 15 (VAR_LIST)


State 146

   23 VAR_LIST2: VAR EQ A_EXPN .
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    $default  reduce using rule 23 (VAR_LIST2)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 147

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB . INT_NUMBER RSQRB

    INT_NUMBER  shift, and go to state 171


State 148

   18 VAR_LIST: VAR_LIST2 COMA VAR_LIST .

    $default  reduce using rule 18 (VAR_LIST)


State 149

   17 VAR_LIST: PTR_VAR COMA VAR_LIST .

    $default  reduce using rule 17 (VAR_LIST)


State 150

   16 VAR_LIST: ARRAY_DECLARATION COMA VAR_LIST .

    $default  reduce using rule 16 (VAR_LIST)


State 151

   79 LOGICAL_EXPN1: NOT LB . LOGICAL_EXPN1 RB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 112
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN1  go to state 172
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 152

   80 LOGICAL_EXPN1: LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 80 (LOGICAL_EXPN1)


State 153

   75 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 . RB
   77 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   79              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 173
    AMPER  shift, and go to state 116
    OR     shift, and go to state 117

    LOGICAL_OPERATOR  go to state 118


State 154

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK . LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    LCB  shift, and go to state 174


State 155

   88 LOGICAL_OPERATOR: AMPER AMPER .

    $default  reduce using rule 88 (LOGICAL_OPERATOR)


State 156

   77 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   77              | LOGICAL_EXPN1 LOGICAL_OPERATOR LOGICAL_EXPN1 .

    AMPER  shift, and go to state 116
    OR     shift, and go to state 117

    AMPER     [reduce using rule 77 (LOGICAL_EXPN1)]
    OR        [reduce using rule 77 (LOGICAL_EXPN1)]
    $default  reduce using rule 77 (LOGICAL_EXPN1)

    LOGICAL_OPERATOR  go to state 118


State 157

   81 LOGICAL_EXPN2: A_EXPN COMP_OPERATOR A_EXPN .
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    $default  reduce using rule 81 (LOGICAL_EXPN2)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 158

   67 IF_STATEMENT: IF LB LOGICAL_EXPN RB . LCB $@12 BODY2 RCB

    LCB  shift, and go to state 175


State 159

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC . LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 65
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN   go to state 176
    LOGICAL_EXPN1  go to state 67
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 160

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 . RCB $@7 WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 177


State 161

   46 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB . LCB $@5 BODY2 RCB

    LCB  shift, and go to state 178


State 162

   53 WRITE_STATEMENT: PRINTF LB Q_STRING $@9 . RB SC

    RB  shift, and go to state 179


State 163

   55 WRITE_STATEMENT: PRINTF LB Q_STRING $@10 . COMA VAR_LIST_OP RB SC

    COMA  shift, and go to state 180


State 164

   59 READ_STATEMENT: SCANF LB Q_STRING $@11 . COMA VAR_LIST_IP RB SC

    COMA  shift, and go to state 181


State 165

  101 ARRAY_ACCESS: VAR LSQRB A_EXPN RSQRB .

    $default  reduce using rule 101 (ARRAY_ACCESS)


State 166

   69 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN . RB LCB $@13 BODY2 RCB

    RB  shift, and go to state 182


State 167

   73 ELSE_STATEMENT: ELSE LCB $@15 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 183
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 168

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB . LOGICAL_EXPN RB LCB $@14 BODY2 RCB

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 65
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN   go to state 184
    LOGICAL_EXPN1  go to state 67
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 169

  100 ARRAY_ACCESS: ARRAY_ACCESS LSQRB A_EXPN RSQRB .

    $default  reduce using rule 100 (ARRAY_ACCESS)


State 170

   29 ARRAY_SIZE: LSQRB INT_NUMBER RSQRB .

    $default  reduce using rule 29 (ARRAY_SIZE)


State 171

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB INT_NUMBER . RSQRB

    RSQRB  shift, and go to state 185


State 172

   77 LOGICAL_EXPN1: LOGICAL_EXPN1 . LOGICAL_OPERATOR LOGICAL_EXPN1
   79              | NOT LB LOGICAL_EXPN1 . RB

    RB     shift, and go to state 186
    AMPER  shift, and go to state 116
    OR     shift, and go to state 117

    LOGICAL_OPERATOR  go to state 118


State 173

   75 LOGICAL_EXPN: NOT LB LOGICAL_EXPN1 RB .
   79 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    RB        reduce using rule 75 (LOGICAL_EXPN)
    RB        [reduce using rule 79 (LOGICAL_EXPN1)]
    SC        reduce using rule 75 (LOGICAL_EXPN)
    SC        [reduce using rule 79 (LOGICAL_EXPN1)]
    AMPER     reduce using rule 79 (LOGICAL_EXPN1)
    OR        reduce using rule 79 (LOGICAL_EXPN1)
    $default  reduce using rule 75 (LOGICAL_EXPN)


State 174

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB . $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    $default  reduce using rule 40 ($@2)

    $@2  go to state 187


State 175

   67 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB . $@12 BODY2 RCB

    $default  reduce using rule 66 ($@12)

    $@12  go to state 188


State 176

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN . SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    SC  shift, and go to state 189


State 177

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB . $@7 WHILE LB LOGICAL_EXPN RB SC

    $default  reduce using rule 48 ($@7)

    $@7  go to state 190


State 178

   46 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB . $@5 BODY2 RCB

    $default  reduce using rule 45 ($@5)

    $@5  go to state 191


State 179

   53 WRITE_STATEMENT: PRINTF LB Q_STRING $@9 RB . SC

    SC  shift, and go to state 192


State 180

   55 WRITE_STATEMENT: PRINTF LB Q_STRING $@10 COMA . VAR_LIST_OP RB SC

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    VAR_LIST_OP    go to state 193
    A_EXPN         go to state 194
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 181

   59 READ_STATEMENT: SCANF LB Q_STRING $@11 COMA . VAR_LIST_IP RB SC

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    VAR_LIST_IP    go to state 195
    A_EXPN         go to state 196
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 182

   69 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB . LCB $@13 BODY2 RCB

    LCB  shift, and go to state 197


State 183

   73 ELSE_STATEMENT: ELSE LCB $@15 BODY2 . RCB

    RCB  shift, and go to state 198


State 184

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN . RB LCB $@14 BODY2 RCB

    RB  shift, and go to state 199


State 185

   28 ARRAY_SIZE: ARRAY_SIZE LSQRB INT_NUMBER RSQRB .

    $default  reduce using rule 28 (ARRAY_SIZE)


State 186

   79 LOGICAL_EXPN1: NOT LB LOGICAL_EXPN1 RB .

    $default  reduce using rule 79 (LOGICAL_EXPN1)


State 187

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 . BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 200
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 188

   67 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@12 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 201
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 189

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC . INCR_DCR_EXPN RB LCB $@8 BODY2 RCB

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    A_EXPN         go to state 202
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 203


State 190

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 204


State 191

   46 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 205
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 192

   53 WRITE_STATEMENT: PRINTF LB Q_STRING $@9 RB SC .

    $default  reduce using rule 53 (WRITE_STATEMENT)


State 193

   55 WRITE_STATEMENT: PRINTF LB Q_STRING $@10 COMA VAR_LIST_OP . RB SC

    RB  shift, and go to state 206


State 194

   56 VAR_LIST_OP: A_EXPN . COMA VAR_LIST_OP
   57            | A_EXPN .
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    COMA    shift, and go to state 207
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    $default  reduce using rule 57 (VAR_LIST_OP)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 195

   59 READ_STATEMENT: SCANF LB Q_STRING $@11 COMA VAR_LIST_IP . RB SC

    RB  shift, and go to state 208


State 196

   60 VAR_LIST_IP: A_EXPN . COMA VAR_LIST_IP
   61            | A_EXPN .
   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    COMA    shift, and go to state 209
    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    $default  reduce using rule 61 (VAR_LIST_IP)

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 197

   69 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB . $@13 BODY2 RCB

    $default  reduce using rule 68 ($@13)

    $@13  go to state 210


State 198

   73 ELSE_STATEMENT: ELSE LCB $@15 BODY2 RCB .

    $default  reduce using rule 73 (ELSE_STATEMENT)


State 199

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB . LCB $@14 BODY2 RCB

    LCB  shift, and go to state 211


State 200

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 . RCB $@3 COLON LCB $@4 BODY2 RCB

    RCB  shift, and go to state 212


State 201

   67 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@12 BODY2 . RCB

    RCB  shift, and go to state 213


State 202

   90 A_EXPN: A_EXPN . OPR_PREC1 A_EXPN
   91       | A_EXPN . OPR_PREC2 A_EXPN
  102 INCR_DCR_EXPN: A_EXPN . UNARY_OPERATORS

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EXP     shift, and go to state 94
    UPLUS   shift, and go to state 95
    UMINUS  shift, and go to state 96

    UNARY_OPERATORS  go to state 97
    OPR_PREC1        go to state 98
    OPR_PREC2        go to state 99


State 203

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN . RB LCB $@8 BODY2 RCB
   93 A_EXPN: INCR_DCR_EXPN .

    RB  shift, and go to state 214

    $default  reduce using rule 93 (A_EXPN)


State 204

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 215


State 205

   46 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 . RCB

    RCB  shift, and go to state 216


State 206

   55 WRITE_STATEMENT: PRINTF LB Q_STRING $@10 COMA VAR_LIST_OP RB . SC

    SC  shift, and go to state 217


State 207

   56 VAR_LIST_OP: A_EXPN COMA . VAR_LIST_OP

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    VAR_LIST_OP    go to state 218
    A_EXPN         go to state 194
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 208

   59 READ_STATEMENT: SCANF LB Q_STRING $@11 COMA VAR_LIST_IP RB . SC

    SC  shift, and go to state 219


State 209

   60 VAR_LIST_IP: A_EXPN COMA . VAR_LIST_IP

    LB            shift, and go to state 77
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    VAR_LIST_IP    go to state 220
    A_EXPN         go to state 196
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 210

   69 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@13 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 221
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 211

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB . $@14 BODY2 RCB

    $default  reduce using rule 70 ($@14)

    $@14  go to state 222


State 212

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB . $@3 COLON LCB $@4 BODY2 RCB

    $default  reduce using rule 41 ($@3)

    $@3  go to state 223


State 213

   67 IF_STATEMENT: IF LB LOGICAL_EXPN RB LCB $@12 BODY2 RCB .

    $default  reduce using rule 67 (IF_STATEMENT)


State 214

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB . LCB $@8 BODY2 RCB

    LCB  shift, and go to state 224


State 215

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB . LOGICAL_EXPN RB SC

    LB            shift, and go to state 64
    AMPER         shift, and go to state 41
    NOT           shift, and go to state 65
    MUL           shift, and go to state 42
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    LOGICAL_EXPN   go to state 225
    LOGICAL_EXPN1  go to state 67
    LOGICAL_EXPN2  go to state 68
    A_EXPN         go to state 128
    ARRAY_ACCESS   go to state 55
    INCR_DCR_EXPN  go to state 70


State 216

   46 PROGRAM_STATEMENTS: WHILE LB LOGICAL_EXPN RB LCB $@5 BODY2 RCB .

    $default  reduce using rule 46 (PROGRAM_STATEMENTS)


State 217

   55 WRITE_STATEMENT: PRINTF LB Q_STRING $@10 COMA VAR_LIST_OP RB SC .

    $default  reduce using rule 55 (WRITE_STATEMENT)


State 218

   56 VAR_LIST_OP: A_EXPN COMA VAR_LIST_OP .

    $default  reduce using rule 56 (VAR_LIST_OP)


State 219

   59 READ_STATEMENT: SCANF LB Q_STRING $@11 COMA VAR_LIST_IP RB SC .

    $default  reduce using rule 59 (READ_STATEMENT)


State 220

   60 VAR_LIST_IP: A_EXPN COMA VAR_LIST_IP .

    $default  reduce using rule 60 (VAR_LIST_IP)


State 221

   69 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@13 BODY2 . RCB

    RCB  shift, and go to state 226


State 222

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@14 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 227
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 223

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 . COLON LCB $@4 BODY2 RCB

    COLON  shift, and go to state 228


State 224

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB . $@8 BODY2 RCB

    $default  reduce using rule 50 ($@8)

    $@8  go to state 229


State 225

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN . RB SC

    RB  shift, and go to state 230


State 226

   69 ELSE_IF_STATEMENT: ELSE_IF LB LOGICAL_EXPN RB LCB $@13 BODY2 RCB .

    $default  reduce using rule 69 (ELSE_IF_STATEMENT)


State 227

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@14 BODY2 . RCB

    RCB  shift, and go to state 231


State 228

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON . LCB $@4 BODY2 RCB

    LCB  shift, and go to state 232


State 229

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 233
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 230

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 234


State 231

   71 ELSE_IF_STATEMENT: ELSE_IF_STATEMENT ELSE_IF LB LOGICAL_EXPN RB LCB $@14 BODY2 RCB .

    $default  reduce using rule 71 (ELSE_IF_STATEMENT)


State 232

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB . $@4 BODY2 RCB

    $default  reduce using rule 42 ($@4)

    $@4  go to state 235


State 233

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 . RCB

    RCB  shift, and go to state 236


State 234

   49 PROGRAM_STATEMENTS: DO LCB $@6 BODY2 RCB $@7 WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 49 (PROGRAM_STATEMENTS)


State 235

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 . BODY2 RCB

    LB            shift, and go to state 33
    SC            shift, and go to state 34
    IF            shift, and go to state 35
    FOR           shift, and go to state 36
    DO            shift, and go to state 37
    WHILE         shift, and go to state 38
    PRINTF        shift, and go to state 39
    SCANF         shift, and go to state 40
    AMPER         shift, and go to state 41
    MUL           shift, and go to state 42
    INT           shift, and go to state 25
    CHAR          shift, and go to state 26
    FLOAT         shift, and go to state 27
    DOUBLE        shift, and go to state 28
    VAR           shift, and go to state 43
    INT_NUMBER    shift, and go to state 44
    FLOAT_NUMBER  shift, and go to state 45

    $default  reduce using rule 11 (BODY2)

    BODY2                   go to state 237
    DECLARATION_STATEMENTS  go to state 47
    DATA_TYPE               go to state 31
    PROGRAM_STATEMENTS      go to state 48
    WRITE_STATEMENT         go to state 49
    READ_STATEMENT          go to state 50
    CONDITIONAL_STATEMENTS  go to state 51
    IF_STATEMENT            go to state 52
    ASSIGNMENT_STATEMENT    go to state 53
    A_EXPN                  go to state 54
    ARRAY_ACCESS            go to state 55
    INCR_DCR_EXPN           go to state 56


State 236

   51 PROGRAM_STATEMENTS: FOR LB ASSIGNMENT_STATEMENT SC LOGICAL_EXPN SC INCR_DCR_EXPN RB LCB $@8 BODY2 RCB .

    $default  reduce using rule 51 (PROGRAM_STATEMENTS)


State 237

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 . RCB

    RCB  shift, and go to state 238


State 238

   43 PROGRAM_STATEMENTS: LB LOGICAL_EXPN RB QMARK LCB $@2 BODY2 RCB $@3 COLON LCB $@4 BODY2 RCB .

    $default  reduce using rule 43 (PROGRAM_STATEMENTS)
